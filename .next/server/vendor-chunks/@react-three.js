"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@react-three";
exports.ids = ["vendor-chunks/@react-three"];
exports.modules = {

/***/ "(ssr)/./node_modules/@react-three/drei/core/AccumulativeShadows.js":
/*!********************************************************************!*\
  !*** ./node_modules/@react-three/drei/core/AccumulativeShadows.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccumulativeShadows: () => (/* binding */ AccumulativeShadows),\n/* harmony export */   RandomizedLight: () => (/* binding */ RandomizedLight),\n/* harmony export */   accumulativeContext: () => (/* binding */ accumulativeContext)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @react-three/fiber */ \"(ssr)/./node_modules/@react-three/fiber/dist/index-ba8afaa4.esm.js\");\n/* harmony import */ var _shaderMaterial_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shaderMaterial.js */ \"(ssr)/./node_modules/@react-three/drei/core/shaderMaterial.js\");\n/* harmony import */ var _materials_DiscardMaterial_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../materials/DiscardMaterial.js */ \"(ssr)/./node_modules/@react-three/drei/materials/DiscardMaterial.js\");\n/* harmony import */ var _helpers_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/constants.js */ \"(ssr)/./node_modules/@react-three/drei/helpers/constants.js\");\n\n\n\n\n\n\n\nfunction isLight(object) {\n    return object.isLight;\n}\nfunction isGeometry(object) {\n    return !!object.geometry;\n}\nconst accumulativeContext = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createContext(null);\nconst SoftShadowMaterial = /* @__PURE__ */ (0,_shaderMaterial_js__WEBPACK_IMPORTED_MODULE_2__.shaderMaterial)({\n    color: /* @__PURE__ */ new three__WEBPACK_IMPORTED_MODULE_3__.Color(),\n    blend: 2.0,\n    alphaTest: 0.75,\n    opacity: 0,\n    map: null\n}, `varying vec2 vUv;\n   void main() {\n     gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n     vUv = uv;\n   }`, `varying vec2 vUv;\n   uniform sampler2D map;\n   uniform vec3 color;\n   uniform float opacity;\n   uniform float alphaTest;\n   uniform float blend;\n   void main() {\n     vec4 sampledDiffuseColor = texture2D(map, vUv);\n     gl_FragColor = vec4(color * sampledDiffuseColor.r * blend, max(0.0, (1.0 - (sampledDiffuseColor.r + sampledDiffuseColor.g + sampledDiffuseColor.b) / alphaTest)) * opacity);\n     #include <tonemapping_fragment>\n     #include <${_helpers_constants_js__WEBPACK_IMPORTED_MODULE_4__.version >= 154 ? \"colorspace_fragment\" : \"encodings_fragment\"}>\n   }`);\nconst AccumulativeShadows = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ children, temporal, frames = 40, limit = Infinity, blend = 20, scale = 10, opacity = 1, alphaTest = 0.75, color = \"black\", colorBlend = 2, resolution = 1024, toneMapped = true, ...props }, forwardRef)=>{\n    (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_5__.e)({\n        SoftShadowMaterial\n    });\n    const gl = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_5__.A)((state)=>state.gl);\n    const scene = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_5__.A)((state)=>state.scene);\n    const camera = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_5__.A)((state)=>state.camera);\n    const invalidate = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_5__.A)((state)=>state.invalidate);\n    const gPlane = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n    const gLights = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n    const [plm] = react__WEBPACK_IMPORTED_MODULE_1__.useState(()=>new ProgressiveLightMap(gl, scene, resolution));\n    react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect(()=>{\n        plm.configure(gPlane.current);\n    }, []);\n    const api = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(()=>({\n            lights: new Map(),\n            temporal: !!temporal,\n            frames: Math.max(2, frames),\n            blend: Math.max(2, frames === Infinity ? blend : frames),\n            count: 0,\n            getMesh: ()=>gPlane.current,\n            reset: ()=>{\n                // Clear buffers, reset opacities, set frame count to 0\n                plm.clear();\n                const material = gPlane.current.material;\n                material.opacity = 0;\n                material.alphaTest = 0;\n                api.count = 0;\n            },\n            update: (frames = 1)=>{\n                // Adapt the opacity-blend ratio to the number of frames\n                const material = gPlane.current.material;\n                if (!api.temporal) {\n                    material.opacity = opacity;\n                    material.alphaTest = alphaTest;\n                } else {\n                    material.opacity = Math.min(opacity, material.opacity + opacity / api.blend);\n                    material.alphaTest = Math.min(alphaTest, material.alphaTest + alphaTest / api.blend);\n                }\n                // Switch accumulative lights on\n                gLights.current.visible = true;\n                // Collect scene lights and meshes\n                plm.prepare();\n                // Update the lightmap and the accumulative lights\n                for(let i = 0; i < frames; i++){\n                    api.lights.forEach((light)=>light.update());\n                    plm.update(camera, api.blend);\n                }\n                // Switch lights off\n                gLights.current.visible = false;\n                // Restore lights and meshes\n                plm.finish();\n            }\n        }), [\n        plm,\n        camera,\n        scene,\n        temporal,\n        frames,\n        blend,\n        opacity,\n        alphaTest\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect(()=>{\n        // Reset internals, buffers, ...\n        api.reset();\n        // Update lightmap\n        if (!api.temporal && api.frames !== Infinity) api.update(api.blend);\n    });\n    // Expose api, allow children to set itself as the main light source\n    react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle(forwardRef, ()=>api, [\n        api\n    ]);\n    (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_5__.C)(()=>{\n        if ((api.temporal || api.frames === Infinity) && api.count < api.frames && api.count < limit) {\n            invalidate();\n            api.update();\n            api.count++;\n        }\n    });\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"group\", props, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"group\", {\n        traverse: ()=>null,\n        ref: gLights\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(accumulativeContext.Provider, {\n        value: api\n    }, children)), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"mesh\", {\n        receiveShadow: true,\n        ref: gPlane,\n        scale: scale,\n        rotation: [\n            -Math.PI / 2,\n            0,\n            0\n        ]\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"planeGeometry\", null), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"softShadowMaterial\", {\n        transparent: true,\n        depthWrite: false,\n        toneMapped: toneMapped,\n        color: color,\n        blend: colorBlend,\n        map: plm.progressiveLightMap2.texture\n    })));\n});\nconst RandomizedLight = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ castShadow = true, bias = 0.001, mapSize = 512, size = 5, near = 0.5, far = 500, frames = 1, position = [\n    0,\n    0,\n    0\n], radius = 1, amount = 8, intensity = _helpers_constants_js__WEBPACK_IMPORTED_MODULE_4__.version >= 155 ? Math.PI : 1, ambient = 0.5, ...props }, forwardRef)=>{\n    const gLights = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n    const length = new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(...position).length();\n    const parent = react__WEBPACK_IMPORTED_MODULE_1__.useContext(accumulativeContext);\n    const update = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(()=>{\n        let light;\n        if (gLights.current) {\n            for(let l = 0; l < gLights.current.children.length; l++){\n                light = gLights.current.children[l];\n                if (Math.random() > ambient) {\n                    light.position.set(position[0] + three__WEBPACK_IMPORTED_MODULE_3__.MathUtils.randFloatSpread(radius), position[1] + three__WEBPACK_IMPORTED_MODULE_3__.MathUtils.randFloatSpread(radius), position[2] + three__WEBPACK_IMPORTED_MODULE_3__.MathUtils.randFloatSpread(radius));\n                } else {\n                    let lambda = Math.acos(2 * Math.random() - 1) - Math.PI / 2.0;\n                    let phi = 2 * Math.PI * Math.random();\n                    light.position.set(Math.cos(lambda) * Math.cos(phi) * length, Math.abs(Math.cos(lambda) * Math.sin(phi) * length), Math.sin(lambda) * length);\n                }\n            }\n        }\n    }, [\n        radius,\n        ambient,\n        length,\n        ...position\n    ]);\n    const api = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(()=>({\n            update\n        }), [\n        update\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle(forwardRef, ()=>api, [\n        api\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect(()=>{\n        var _parent$lights;\n        const group = gLights.current;\n        if (parent) (_parent$lights = parent.lights) == null || _parent$lights.set(group.uuid, api);\n        return ()=>{\n            var _parent$lights2;\n            return void (parent == null || (_parent$lights2 = parent.lights) == null ? void 0 : _parent$lights2.delete(group.uuid));\n        };\n    }, [\n        parent,\n        api\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"group\", (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        ref: gLights\n    }, props), Array.from({\n        length: amount\n    }, (_, index)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"directionalLight\", {\n            key: index,\n            castShadow: castShadow,\n            \"shadow-bias\": bias,\n            \"shadow-mapSize\": [\n                mapSize,\n                mapSize\n            ],\n            intensity: intensity / amount\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"orthographicCamera\", {\n            attach: \"shadow-camera\",\n            args: [\n                -size,\n                size,\n                size,\n                -size,\n                near,\n                far\n            ]\n        }))));\n});\n// Based on \"Progressive Light Map Accumulator\", by [zalo](https://github.com/zalo/)\nclass ProgressiveLightMap {\n    constructor(renderer, scene, res = 1024){\n        this.renderer = renderer;\n        this.res = res;\n        this.scene = scene;\n        this.buffer1Active = false;\n        this.lights = [];\n        this.meshes = [];\n        this.object = null;\n        this.clearColor = new three__WEBPACK_IMPORTED_MODULE_3__.Color();\n        this.clearAlpha = 0;\n        // Create the Progressive LightMap Texture\n        const textureParams = {\n            type: three__WEBPACK_IMPORTED_MODULE_3__.HalfFloatType,\n            magFilter: three__WEBPACK_IMPORTED_MODULE_3__.NearestFilter,\n            minFilter: three__WEBPACK_IMPORTED_MODULE_3__.NearestFilter\n        };\n        this.progressiveLightMap1 = new three__WEBPACK_IMPORTED_MODULE_3__.WebGLRenderTarget(this.res, this.res, textureParams);\n        this.progressiveLightMap2 = new three__WEBPACK_IMPORTED_MODULE_3__.WebGLRenderTarget(this.res, this.res, textureParams);\n        // Inject some spicy new logic into a standard phong material\n        this.discardMat = new _materials_DiscardMaterial_js__WEBPACK_IMPORTED_MODULE_6__.DiscardMaterial();\n        this.targetMat = new three__WEBPACK_IMPORTED_MODULE_3__.MeshLambertMaterial({\n            fog: false\n        });\n        this.previousShadowMap = {\n            value: this.progressiveLightMap1.texture\n        };\n        this.averagingWindow = {\n            value: 100\n        };\n        this.targetMat.onBeforeCompile = (shader)=>{\n            // Vertex Shader: Set Vertex Positions to the Unwrapped UV Positions\n            shader.vertexShader = \"varying vec2 vUv;\\n\" + shader.vertexShader.slice(0, -1) + \"vUv = uv; gl_Position = vec4((uv - 0.5) * 2.0, 1.0, 1.0); }\";\n            // Fragment Shader: Set Pixels to average in the Previous frame's Shadows\n            const bodyStart = shader.fragmentShader.indexOf(\"void main() {\");\n            shader.fragmentShader = \"varying vec2 vUv;\\n\" + shader.fragmentShader.slice(0, bodyStart) + \"uniform sampler2D previousShadowMap;\\n\tuniform float averagingWindow;\\n\" + shader.fragmentShader.slice(bodyStart - 1, -1) + `\\nvec3 texelOld = texture2D(previousShadowMap, vUv).rgb;\n        gl_FragColor.rgb = mix(texelOld, gl_FragColor.rgb, 1.0/ averagingWindow);\n      }`;\n            // Set the Previous Frame's Texture Buffer and Averaging Window\n            shader.uniforms.previousShadowMap = this.previousShadowMap;\n            shader.uniforms.averagingWindow = this.averagingWindow;\n        };\n    }\n    clear() {\n        this.renderer.getClearColor(this.clearColor);\n        this.clearAlpha = this.renderer.getClearAlpha();\n        this.renderer.setClearColor(\"black\", 1);\n        this.renderer.setRenderTarget(this.progressiveLightMap1);\n        this.renderer.clear();\n        this.renderer.setRenderTarget(this.progressiveLightMap2);\n        this.renderer.clear();\n        this.renderer.setRenderTarget(null);\n        this.renderer.setClearColor(this.clearColor, this.clearAlpha);\n        this.lights = [];\n        this.meshes = [];\n        this.scene.traverse((object)=>{\n            if (isGeometry(object)) {\n                this.meshes.push({\n                    object,\n                    material: object.material\n                });\n            } else if (isLight(object)) {\n                this.lights.push({\n                    object,\n                    intensity: object.intensity\n                });\n            }\n        });\n    }\n    prepare() {\n        this.lights.forEach((light)=>light.object.intensity = 0);\n        this.meshes.forEach((mesh)=>mesh.object.material = this.discardMat);\n    }\n    finish() {\n        this.lights.forEach((light)=>light.object.intensity = light.intensity);\n        this.meshes.forEach((mesh)=>mesh.object.material = mesh.material);\n    }\n    configure(object) {\n        this.object = object;\n    }\n    update(camera, blendWindow = 100) {\n        if (!this.object) return;\n        // Set each object's material to the UV Unwrapped Surface Mapping Version\n        this.averagingWindow.value = blendWindow;\n        this.object.material = this.targetMat;\n        // Ping-pong two surface buffers for reading/writing\n        const activeMap = this.buffer1Active ? this.progressiveLightMap1 : this.progressiveLightMap2;\n        const inactiveMap = this.buffer1Active ? this.progressiveLightMap2 : this.progressiveLightMap1;\n        // Render the object's surface maps\n        const oldBg = this.scene.background;\n        this.scene.background = null;\n        this.renderer.setRenderTarget(activeMap);\n        this.previousShadowMap.value = inactiveMap.texture;\n        this.buffer1Active = !this.buffer1Active;\n        this.renderer.render(this.scene, camera);\n        this.renderer.setRenderTarget(null);\n        this.scene.background = oldBg;\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/drei/core/AccumulativeShadows.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/drei/core/Bounds.js":
/*!*******************************************************!*\
  !*** ./node_modules/@react-three/drei/core/Bounds.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bounds: () => (/* binding */ Bounds),\n/* harmony export */   useBounds: () => (/* binding */ useBounds)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-three/fiber */ \"(ssr)/./node_modules/@react-three/fiber/dist/index-ba8afaa4.esm.js\");\n\n\n\n// eslint-disable-next-line no-shadow\nvar AnimationState = /*#__PURE__*/ function(AnimationState) {\n    AnimationState[AnimationState[\"NONE\"] = 0] = \"NONE\";\n    AnimationState[AnimationState[\"START\"] = 1] = \"START\";\n    AnimationState[AnimationState[\"ACTIVE\"] = 2] = \"ACTIVE\";\n    return AnimationState;\n}(AnimationState || {});\nconst isOrthographic = (def)=>def && def.isOrthographicCamera;\nconst isBox3 = (def)=>def && def.isBox3;\nconst interpolateFuncDefault = (t)=>{\n    // Imitates the previously used THREE.MathUtils.damp\n    return 1 - Math.exp(-5 * t) + 0.007 * t;\n};\nconst context = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nfunction Bounds({ children, maxDuration = 1.0, margin = 1.2, observe, fit, clip, interpolateFunc = interpolateFuncDefault, onFit }) {\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const { camera, size, invalidate } = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_1__.A)();\n    const controls = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_1__.A)((state)=>state.controls);\n    const onFitRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(onFit);\n    onFitRef.current = onFit;\n    const origin = react__WEBPACK_IMPORTED_MODULE_0__.useRef({\n        camPos: new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(),\n        camRot: new three__WEBPACK_IMPORTED_MODULE_2__.Quaternion(),\n        camZoom: 1\n    });\n    const goal = react__WEBPACK_IMPORTED_MODULE_0__.useRef({\n        camPos: undefined,\n        camRot: undefined,\n        camZoom: undefined,\n        camUp: undefined,\n        target: undefined\n    });\n    const animationState = react__WEBPACK_IMPORTED_MODULE_0__.useRef(AnimationState.NONE);\n    const t = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0); // represent animation state from 0 to 1\n    const [box] = react__WEBPACK_IMPORTED_MODULE_0__.useState(()=>new three__WEBPACK_IMPORTED_MODULE_2__.Box3());\n    const api = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        function getSize() {\n            const boxSize = box.getSize(new three__WEBPACK_IMPORTED_MODULE_2__.Vector3());\n            const center = box.getCenter(new three__WEBPACK_IMPORTED_MODULE_2__.Vector3());\n            const maxSize = Math.max(boxSize.x, boxSize.y, boxSize.z);\n            const fitHeightDistance = isOrthographic(camera) ? maxSize * 4 : maxSize / (2 * Math.atan(Math.PI * camera.fov / 360));\n            const fitWidthDistance = isOrthographic(camera) ? maxSize * 4 : fitHeightDistance / camera.aspect;\n            const distance = margin * Math.max(fitHeightDistance, fitWidthDistance);\n            return {\n                box,\n                size: boxSize,\n                center,\n                distance\n            };\n        }\n        return {\n            getSize,\n            refresh (object) {\n                if (isBox3(object)) box.copy(object);\n                else {\n                    const target = object || ref.current;\n                    if (!target) return this;\n                    target.updateWorldMatrix(true, true);\n                    box.setFromObject(target);\n                }\n                if (box.isEmpty()) {\n                    const max = camera.position.length() || 10;\n                    box.setFromCenterAndSize(new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(), new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(max, max, max));\n                }\n                origin.current.camPos.copy(camera.position);\n                origin.current.camRot.copy(camera.quaternion);\n                isOrthographic(camera) && (origin.current.camZoom = camera.zoom);\n                goal.current.camPos = undefined;\n                goal.current.camRot = undefined;\n                goal.current.camZoom = undefined;\n                goal.current.camUp = undefined;\n                goal.current.target = undefined;\n                return this;\n            },\n            reset () {\n                const { center, distance } = getSize();\n                const direction = camera.position.clone().sub(center).normalize();\n                goal.current.camPos = center.clone().addScaledVector(direction, distance);\n                goal.current.target = center.clone();\n                const mCamRot = new three__WEBPACK_IMPORTED_MODULE_2__.Matrix4().lookAt(goal.current.camPos, goal.current.target, camera.up);\n                goal.current.camRot = new three__WEBPACK_IMPORTED_MODULE_2__.Quaternion().setFromRotationMatrix(mCamRot);\n                animationState.current = AnimationState.START;\n                t.current = 0;\n                return this;\n            },\n            moveTo (position) {\n                goal.current.camPos = Array.isArray(position) ? new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(...position) : position.clone();\n                animationState.current = AnimationState.START;\n                t.current = 0;\n                return this;\n            },\n            lookAt ({ target, up }) {\n                goal.current.target = Array.isArray(target) ? new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(...target) : target.clone();\n                if (up) {\n                    goal.current.camUp = Array.isArray(up) ? new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(...up) : up.clone();\n                } else {\n                    goal.current.camUp = camera.up.clone();\n                }\n                const mCamRot = new three__WEBPACK_IMPORTED_MODULE_2__.Matrix4().lookAt(goal.current.camPos || camera.position, goal.current.target, goal.current.camUp);\n                goal.current.camRot = new three__WEBPACK_IMPORTED_MODULE_2__.Quaternion().setFromRotationMatrix(mCamRot);\n                animationState.current = AnimationState.START;\n                t.current = 0;\n                return this;\n            },\n            /**\n       * @deprecated Use moveTo and lookAt instead\n       */ to ({ position, target }) {\n                return this.moveTo(position).lookAt({\n                    target\n                });\n            },\n            fit () {\n                if (!isOrthographic(camera)) {\n                    // For non-orthographic cameras, fit should behave exactly like reset\n                    return this.reset();\n                }\n                // For orthographic cameras, fit should only modify the zoom value\n                let maxHeight = 0, maxWidth = 0;\n                const vertices = [\n                    new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(box.min.x, box.min.y, box.min.z),\n                    new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(box.min.x, box.max.y, box.min.z),\n                    new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(box.min.x, box.min.y, box.max.z),\n                    new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(box.min.x, box.max.y, box.max.z),\n                    new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(box.max.x, box.max.y, box.max.z),\n                    new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(box.max.x, box.max.y, box.min.z),\n                    new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(box.max.x, box.min.y, box.max.z),\n                    new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(box.max.x, box.min.y, box.min.z)\n                ];\n                // Transform the center and each corner to camera space\n                const pos = goal.current.camPos || camera.position;\n                const target = goal.current.target || (controls == null ? void 0 : controls.target);\n                const up = goal.current.camUp || camera.up;\n                const mCamWInv = target ? new three__WEBPACK_IMPORTED_MODULE_2__.Matrix4().lookAt(pos, target, up).setPosition(pos).invert() : camera.matrixWorldInverse;\n                for (const v of vertices){\n                    v.applyMatrix4(mCamWInv);\n                    maxHeight = Math.max(maxHeight, Math.abs(v.y));\n                    maxWidth = Math.max(maxWidth, Math.abs(v.x));\n                }\n                maxHeight *= 2;\n                maxWidth *= 2;\n                const zoomForHeight = (camera.top - camera.bottom) / maxHeight;\n                const zoomForWidth = (camera.right - camera.left) / maxWidth;\n                goal.current.camZoom = Math.min(zoomForHeight, zoomForWidth) / margin;\n                animationState.current = AnimationState.START;\n                t.current = 0;\n                onFitRef.current && onFitRef.current(this.getSize());\n                return this;\n            },\n            clip () {\n                const { distance } = getSize();\n                camera.near = distance / 100;\n                camera.far = distance * 100;\n                camera.updateProjectionMatrix();\n                if (controls) {\n                    controls.maxDistance = distance * 10;\n                    controls.update();\n                }\n                invalidate();\n                return this;\n            }\n        };\n    }, [\n        box,\n        camera,\n        controls,\n        margin,\n        invalidate\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(()=>{\n        if (controls) {\n            // Try to prevent drag hijacking\n            const callback = ()=>{\n                if (controls && goal.current.target && animationState.current !== AnimationState.NONE) {\n                    const front = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().setFromMatrixColumn(camera.matrix, 2);\n                    const d0 = origin.current.camPos.distanceTo(controls.target);\n                    const d1 = (goal.current.camPos || origin.current.camPos).distanceTo(goal.current.target);\n                    const d = (1 - t.current) * d0 + t.current * d1;\n                    controls.target.copy(camera.position).addScaledVector(front, -d);\n                    controls.update();\n                }\n                animationState.current = AnimationState.NONE;\n            };\n            controls.addEventListener(\"start\", callback);\n            return ()=>controls.removeEventListener(\"start\", callback);\n        }\n    }, [\n        controls\n    ]);\n    // Scale pointer on window resize\n    const count = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(()=>{\n        if (observe || count.current++ === 0) {\n            api.refresh();\n            if (fit) api.reset().fit();\n            if (clip) api.clip();\n        }\n    }, [\n        size,\n        clip,\n        fit,\n        observe,\n        camera,\n        controls\n    ]);\n    (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_1__.C)((state, delta)=>{\n        // This [additional animation step START] is needed to guarantee that delta used in animation isn't absurdly high (2-3 seconds) which is actually possible if rendering happens on demand...\n        if (animationState.current === AnimationState.START) {\n            animationState.current = AnimationState.ACTIVE;\n            invalidate();\n        } else if (animationState.current === AnimationState.ACTIVE) {\n            t.current += delta / maxDuration;\n            if (t.current >= 1) {\n                goal.current.camPos && camera.position.copy(goal.current.camPos);\n                goal.current.camRot && camera.quaternion.copy(goal.current.camRot);\n                goal.current.camUp && camera.up.copy(goal.current.camUp);\n                goal.current.camZoom && isOrthographic(camera) && (camera.zoom = goal.current.camZoom);\n                camera.updateMatrixWorld();\n                camera.updateProjectionMatrix();\n                if (controls && goal.current.target) {\n                    controls.target.copy(goal.current.target);\n                    controls.update();\n                }\n                animationState.current = AnimationState.NONE;\n            } else {\n                const k = interpolateFunc(t.current);\n                goal.current.camPos && camera.position.lerpVectors(origin.current.camPos, goal.current.camPos, k);\n                goal.current.camRot && camera.quaternion.slerpQuaternions(origin.current.camRot, goal.current.camRot, k);\n                goal.current.camUp && camera.up.set(0, 1, 0).applyQuaternion(camera.quaternion);\n                goal.current.camZoom && isOrthographic(camera) && (camera.zoom = (1 - k) * origin.current.camZoom + k * goal.current.camZoom);\n                camera.updateMatrixWorld();\n                camera.updateProjectionMatrix();\n            }\n            invalidate();\n        }\n    });\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"group\", {\n        ref: ref\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(context.Provider, {\n        value: api\n    }, children));\n}\nfunction useBounds() {\n    return react__WEBPACK_IMPORTED_MODULE_0__.useContext(context);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/drei/core/Bounds.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/drei/core/Center.js":
/*!*******************************************************!*\
  !*** ./node_modules/@react-three/drei/core/Center.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Center: () => (/* binding */ Center)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nconst Center = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(function Center({ children, disable, disableX, disableY, disableZ, left, right, top, bottom, front, back, onCentered, precise = true, cacheKey = 0, ...props }, fRef) {\n    const ref = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n    const outer = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n    const inner = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n    react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect(()=>{\n        outer.current.matrixWorld.identity();\n        const box3 = new three__WEBPACK_IMPORTED_MODULE_2__.Box3().setFromObject(inner.current, precise);\n        const center = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n        const sphere = new three__WEBPACK_IMPORTED_MODULE_2__.Sphere();\n        const width = box3.max.x - box3.min.x;\n        const height = box3.max.y - box3.min.y;\n        const depth = box3.max.z - box3.min.z;\n        box3.getCenter(center);\n        box3.getBoundingSphere(sphere);\n        const vAlign = top ? height / 2 : bottom ? -height / 2 : 0;\n        const hAlign = left ? -width / 2 : right ? width / 2 : 0;\n        const dAlign = front ? depth / 2 : back ? -depth / 2 : 0;\n        outer.current.position.set(disable || disableX ? 0 : -center.x + hAlign, disable || disableY ? 0 : -center.y + vAlign, disable || disableZ ? 0 : -center.z + dAlign);\n        // Only fire onCentered if the bounding box has changed\n        if (typeof onCentered !== \"undefined\") {\n            onCentered({\n                parent: ref.current.parent,\n                container: ref.current,\n                width,\n                height,\n                depth,\n                boundingBox: box3,\n                boundingSphere: sphere,\n                center: center,\n                verticalAlignment: vAlign,\n                horizontalAlignment: hAlign,\n                depthAlignment: dAlign\n            });\n        }\n    }, [\n        cacheKey,\n        onCentered,\n        top,\n        left,\n        front,\n        disable,\n        disableX,\n        disableY,\n        disableZ,\n        precise,\n        right,\n        bottom,\n        back\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle(fRef, ()=>ref.current, []);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"group\", (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        ref: ref\n    }, props), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"group\", {\n        ref: outer\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"group\", {\n        ref: inner\n    }, children)));\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXRocmVlL2RyZWkvY29yZS9DZW50ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMEQ7QUFDWjtBQUNmO0FBRS9CLE1BQU1LLFNBQVMsYUFBYSxpQkFBRUQsNkNBQWdCLENBQUMsU0FBU0MsT0FBTyxFQUM3REUsUUFBUSxFQUNSQyxPQUFPLEVBQ1BDLFFBQVEsRUFDUkMsUUFBUSxFQUNSQyxRQUFRLEVBQ1JDLElBQUksRUFDSkMsS0FBSyxFQUNMQyxHQUFHLEVBQ0hDLE1BQU0sRUFDTkMsS0FBSyxFQUNMQyxJQUFJLEVBQ0pDLFVBQVUsRUFDVkMsVUFBVSxJQUFJLEVBQ2RDLFdBQVcsQ0FBQyxFQUNaLEdBQUdDLE9BQ0osRUFBRUMsSUFBSTtJQUNMLE1BQU1DLE1BQU1uQix5Q0FBWSxDQUFDO0lBQ3pCLE1BQU1xQixRQUFRckIseUNBQVksQ0FBQztJQUMzQixNQUFNc0IsUUFBUXRCLHlDQUFZLENBQUM7SUFDM0JBLGtEQUFxQixDQUFDO1FBQ3BCcUIsTUFBTUcsT0FBTyxDQUFDQyxXQUFXLENBQUNDLFFBQVE7UUFDbEMsTUFBTUMsT0FBTyxJQUFJOUIsdUNBQUlBLEdBQUcrQixhQUFhLENBQUNOLE1BQU1FLE9BQU8sRUFBRVQ7UUFDckQsTUFBTWMsU0FBUyxJQUFJL0IsMENBQU9BO1FBQzFCLE1BQU1nQyxTQUFTLElBQUkvQix5Q0FBTUE7UUFDekIsTUFBTWdDLFFBQVFKLEtBQUtLLEdBQUcsQ0FBQ0MsQ0FBQyxHQUFHTixLQUFLTyxHQUFHLENBQUNELENBQUM7UUFDckMsTUFBTUUsU0FBU1IsS0FBS0ssR0FBRyxDQUFDSSxDQUFDLEdBQUdULEtBQUtPLEdBQUcsQ0FBQ0UsQ0FBQztRQUN0QyxNQUFNQyxRQUFRVixLQUFLSyxHQUFHLENBQUNNLENBQUMsR0FBR1gsS0FBS08sR0FBRyxDQUFDSSxDQUFDO1FBQ3JDWCxLQUFLWSxTQUFTLENBQUNWO1FBQ2ZGLEtBQUthLGlCQUFpQixDQUFDVjtRQUN2QixNQUFNVyxTQUFTL0IsTUFBTXlCLFNBQVMsSUFBSXhCLFNBQVMsQ0FBQ3dCLFNBQVMsSUFBSTtRQUN6RCxNQUFNTyxTQUFTbEMsT0FBTyxDQUFDdUIsUUFBUSxJQUFJdEIsUUFBUXNCLFFBQVEsSUFBSTtRQUN2RCxNQUFNWSxTQUFTL0IsUUFBUXlCLFFBQVEsSUFBSXhCLE9BQU8sQ0FBQ3dCLFFBQVEsSUFBSTtRQUN2RGhCLE1BQU1HLE9BQU8sQ0FBQ29CLFFBQVEsQ0FBQ0MsR0FBRyxDQUFDekMsV0FBV0MsV0FBVyxJQUFJLENBQUN3QixPQUFPSSxDQUFDLEdBQUdTLFFBQVF0QyxXQUFXRSxXQUFXLElBQUksQ0FBQ3VCLE9BQU9PLENBQUMsR0FBR0ssUUFBUXJDLFdBQVdHLFdBQVcsSUFBSSxDQUFDc0IsT0FBT1MsQ0FBQyxHQUFHSztRQUU3Six1REFBdUQ7UUFDdkQsSUFBSSxPQUFPN0IsZUFBZSxhQUFhO1lBQ3JDQSxXQUFXO2dCQUNUZ0MsUUFBUTNCLElBQUlLLE9BQU8sQ0FBQ3NCLE1BQU07Z0JBQzFCQyxXQUFXNUIsSUFBSUssT0FBTztnQkFDdEJPO2dCQUNBSTtnQkFDQUU7Z0JBQ0FXLGFBQWFyQjtnQkFDYnNCLGdCQUFnQm5CO2dCQUNoQkQsUUFBUUE7Z0JBQ1JxQixtQkFBbUJUO2dCQUNuQlUscUJBQXFCVDtnQkFDckJVLGdCQUFnQlQ7WUFDbEI7UUFDRjtJQUNGLEdBQUc7UUFBQzNCO1FBQVVGO1FBQVlKO1FBQUtGO1FBQU1JO1FBQU9SO1FBQVNDO1FBQVVDO1FBQVVDO1FBQVVRO1FBQVNOO1FBQU9FO1FBQVFFO0tBQUs7SUFDaEhiLHNEQUF5QixDQUFDa0IsTUFBTSxJQUFNQyxJQUFJSyxPQUFPLEVBQUUsRUFBRTtJQUNyRCxPQUFPLFdBQVcsR0FBRXhCLGdEQUFtQixDQUFDLFNBQVNKLDhFQUFRQSxDQUFDO1FBQ3hEdUIsS0FBS0E7SUFDUCxHQUFHRixRQUFRLFdBQVcsR0FBRWpCLGdEQUFtQixDQUFDLFNBQVM7UUFDbkRtQixLQUFLRTtJQUNQLEdBQUcsV0FBVyxHQUFFckIsZ0RBQW1CLENBQUMsU0FBUztRQUMzQ21CLEtBQUtHO0lBQ1AsR0FBR25CO0FBQ0w7QUFFa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYW5qeW90aS1sZWFybmluZy8uL25vZGVfbW9kdWxlcy9AcmVhY3QtdGhyZWUvZHJlaS9jb3JlL0NlbnRlci5qcz9iYzYxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCB7IEJveDMsIFZlY3RvcjMsIFNwaGVyZSB9IGZyb20gJ3RocmVlJztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxuY29uc3QgQ2VudGVyID0gLyogQF9fUFVSRV9fICovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBDZW50ZXIoe1xuICBjaGlsZHJlbixcbiAgZGlzYWJsZSxcbiAgZGlzYWJsZVgsXG4gIGRpc2FibGVZLFxuICBkaXNhYmxlWixcbiAgbGVmdCxcbiAgcmlnaHQsXG4gIHRvcCxcbiAgYm90dG9tLFxuICBmcm9udCxcbiAgYmFjayxcbiAgb25DZW50ZXJlZCxcbiAgcHJlY2lzZSA9IHRydWUsXG4gIGNhY2hlS2V5ID0gMCxcbiAgLi4ucHJvcHNcbn0sIGZSZWYpIHtcbiAgY29uc3QgcmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICBjb25zdCBvdXRlciA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgY29uc3QgaW5uZXIgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gIFJlYWN0LnVzZUxheW91dEVmZmVjdCgoKSA9PiB7XG4gICAgb3V0ZXIuY3VycmVudC5tYXRyaXhXb3JsZC5pZGVudGl0eSgpO1xuICAgIGNvbnN0IGJveDMgPSBuZXcgQm94MygpLnNldEZyb21PYmplY3QoaW5uZXIuY3VycmVudCwgcHJlY2lzZSk7XG4gICAgY29uc3QgY2VudGVyID0gbmV3IFZlY3RvcjMoKTtcbiAgICBjb25zdCBzcGhlcmUgPSBuZXcgU3BoZXJlKCk7XG4gICAgY29uc3Qgd2lkdGggPSBib3gzLm1heC54IC0gYm94My5taW4ueDtcbiAgICBjb25zdCBoZWlnaHQgPSBib3gzLm1heC55IC0gYm94My5taW4ueTtcbiAgICBjb25zdCBkZXB0aCA9IGJveDMubWF4LnogLSBib3gzLm1pbi56O1xuICAgIGJveDMuZ2V0Q2VudGVyKGNlbnRlcik7XG4gICAgYm94My5nZXRCb3VuZGluZ1NwaGVyZShzcGhlcmUpO1xuICAgIGNvbnN0IHZBbGlnbiA9IHRvcCA/IGhlaWdodCAvIDIgOiBib3R0b20gPyAtaGVpZ2h0IC8gMiA6IDA7XG4gICAgY29uc3QgaEFsaWduID0gbGVmdCA/IC13aWR0aCAvIDIgOiByaWdodCA/IHdpZHRoIC8gMiA6IDA7XG4gICAgY29uc3QgZEFsaWduID0gZnJvbnQgPyBkZXB0aCAvIDIgOiBiYWNrID8gLWRlcHRoIC8gMiA6IDA7XG4gICAgb3V0ZXIuY3VycmVudC5wb3NpdGlvbi5zZXQoZGlzYWJsZSB8fCBkaXNhYmxlWCA/IDAgOiAtY2VudGVyLnggKyBoQWxpZ24sIGRpc2FibGUgfHwgZGlzYWJsZVkgPyAwIDogLWNlbnRlci55ICsgdkFsaWduLCBkaXNhYmxlIHx8IGRpc2FibGVaID8gMCA6IC1jZW50ZXIueiArIGRBbGlnbik7XG5cbiAgICAvLyBPbmx5IGZpcmUgb25DZW50ZXJlZCBpZiB0aGUgYm91bmRpbmcgYm94IGhhcyBjaGFuZ2VkXG4gICAgaWYgKHR5cGVvZiBvbkNlbnRlcmVkICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgb25DZW50ZXJlZCh7XG4gICAgICAgIHBhcmVudDogcmVmLmN1cnJlbnQucGFyZW50LFxuICAgICAgICBjb250YWluZXI6IHJlZi5jdXJyZW50LFxuICAgICAgICB3aWR0aCxcbiAgICAgICAgaGVpZ2h0LFxuICAgICAgICBkZXB0aCxcbiAgICAgICAgYm91bmRpbmdCb3g6IGJveDMsXG4gICAgICAgIGJvdW5kaW5nU3BoZXJlOiBzcGhlcmUsXG4gICAgICAgIGNlbnRlcjogY2VudGVyLFxuICAgICAgICB2ZXJ0aWNhbEFsaWdubWVudDogdkFsaWduLFxuICAgICAgICBob3Jpem9udGFsQWxpZ25tZW50OiBoQWxpZ24sXG4gICAgICAgIGRlcHRoQWxpZ25tZW50OiBkQWxpZ25cbiAgICAgIH0pO1xuICAgIH1cbiAgfSwgW2NhY2hlS2V5LCBvbkNlbnRlcmVkLCB0b3AsIGxlZnQsIGZyb250LCBkaXNhYmxlLCBkaXNhYmxlWCwgZGlzYWJsZVksIGRpc2FibGVaLCBwcmVjaXNlLCByaWdodCwgYm90dG9tLCBiYWNrXSk7XG4gIFJlYWN0LnVzZUltcGVyYXRpdmVIYW5kbGUoZlJlZiwgKCkgPT4gcmVmLmN1cnJlbnQsIFtdKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIiwgX2V4dGVuZHMoe1xuICAgIHJlZjogcmVmXG4gIH0sIHByb3BzKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLCB7XG4gICAgcmVmOiBvdXRlclxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImdyb3VwXCIsIHtcbiAgICByZWY6IGlubmVyXG4gIH0sIGNoaWxkcmVuKSkpO1xufSk7XG5cbmV4cG9ydCB7IENlbnRlciB9O1xuIl0sIm5hbWVzIjpbIl9leHRlbmRzIiwiQm94MyIsIlZlY3RvcjMiLCJTcGhlcmUiLCJSZWFjdCIsIkNlbnRlciIsImZvcndhcmRSZWYiLCJjaGlsZHJlbiIsImRpc2FibGUiLCJkaXNhYmxlWCIsImRpc2FibGVZIiwiZGlzYWJsZVoiLCJsZWZ0IiwicmlnaHQiLCJ0b3AiLCJib3R0b20iLCJmcm9udCIsImJhY2siLCJvbkNlbnRlcmVkIiwicHJlY2lzZSIsImNhY2hlS2V5IiwicHJvcHMiLCJmUmVmIiwicmVmIiwidXNlUmVmIiwib3V0ZXIiLCJpbm5lciIsInVzZUxheW91dEVmZmVjdCIsImN1cnJlbnQiLCJtYXRyaXhXb3JsZCIsImlkZW50aXR5IiwiYm94MyIsInNldEZyb21PYmplY3QiLCJjZW50ZXIiLCJzcGhlcmUiLCJ3aWR0aCIsIm1heCIsIngiLCJtaW4iLCJoZWlnaHQiLCJ5IiwiZGVwdGgiLCJ6IiwiZ2V0Q2VudGVyIiwiZ2V0Qm91bmRpbmdTcGhlcmUiLCJ2QWxpZ24iLCJoQWxpZ24iLCJkQWxpZ24iLCJwb3NpdGlvbiIsInNldCIsInBhcmVudCIsImNvbnRhaW5lciIsImJvdW5kaW5nQm94IiwiYm91bmRpbmdTcGhlcmUiLCJ2ZXJ0aWNhbEFsaWdubWVudCIsImhvcml6b250YWxBbGlnbm1lbnQiLCJkZXB0aEFsaWdubWVudCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJjcmVhdGVFbGVtZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/drei/core/Center.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/drei/core/ContactShadows.js":
/*!***************************************************************!*\
  !*** ./node_modules/@react-three/drei/core/ContactShadows.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContactShadows: () => (/* binding */ ContactShadows)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-three/fiber */ \"(ssr)/./node_modules/@react-three/fiber/dist/index-ba8afaa4.esm.js\");\n/* harmony import */ var three_stdlib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! three-stdlib */ \"(ssr)/./node_modules/three-stdlib/shaders/HorizontalBlurShader.js\");\n/* harmony import */ var three_stdlib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! three-stdlib */ \"(ssr)/./node_modules/three-stdlib/shaders/VerticalBlurShader.js\");\n\n\n\n\n\nconst ContactShadows = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ scale = 10, frames = Infinity, opacity = 1, width = 1, height = 1, blur = 1, near = 0, far = 10, resolution = 512, smooth = true, color = \"#000000\", depthWrite = false, renderOrder, ...props }, fref)=>{\n    const ref = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n    const scene = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.A)((state)=>state.scene);\n    const gl = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.A)((state)=>state.gl);\n    const shadowCamera = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n    width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\n    height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\n    const [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur] = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(()=>{\n        const renderTarget = new three__WEBPACK_IMPORTED_MODULE_3__.WebGLRenderTarget(resolution, resolution);\n        const renderTargetBlur = new three__WEBPACK_IMPORTED_MODULE_3__.WebGLRenderTarget(resolution, resolution);\n        renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n        const planeGeometry = new three__WEBPACK_IMPORTED_MODULE_3__.PlaneGeometry(width, height).rotateX(Math.PI / 2);\n        const blurPlane = new three__WEBPACK_IMPORTED_MODULE_3__.Mesh(planeGeometry);\n        const depthMaterial = new three__WEBPACK_IMPORTED_MODULE_3__.MeshDepthMaterial();\n        depthMaterial.depthTest = depthMaterial.depthWrite = false;\n        depthMaterial.onBeforeCompile = (shader)=>{\n            shader.uniforms = {\n                ...shader.uniforms,\n                ucolor: {\n                    value: new three__WEBPACK_IMPORTED_MODULE_3__.Color(color)\n                }\n            };\n            shader.fragmentShader = shader.fragmentShader.replace(`void main() {`, //\n            `uniform vec3 ucolor;\n           void main() {\n          `);\n            shader.fragmentShader = shader.fragmentShader.replace(\"vec4( vec3( 1.0 - fragCoordZ ), opacity );\", // Colorize the shadow, multiply by the falloff so that the center can remain darker\n            \"vec4( ucolor * fragCoordZ * 2.0, ( 1.0 - fragCoordZ ) * 1.0 );\");\n        };\n        const horizontalBlurMaterial = new three__WEBPACK_IMPORTED_MODULE_3__.ShaderMaterial(three_stdlib__WEBPACK_IMPORTED_MODULE_4__.HorizontalBlurShader);\n        const verticalBlurMaterial = new three__WEBPACK_IMPORTED_MODULE_3__.ShaderMaterial(three_stdlib__WEBPACK_IMPORTED_MODULE_5__.VerticalBlurShader);\n        verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n        return [\n            renderTarget,\n            planeGeometry,\n            depthMaterial,\n            blurPlane,\n            horizontalBlurMaterial,\n            verticalBlurMaterial,\n            renderTargetBlur\n        ];\n    }, [\n        resolution,\n        width,\n        height,\n        scale,\n        color\n    ]);\n    const blurShadows = (blur)=>{\n        blurPlane.visible = true;\n        blurPlane.material = horizontalBlurMaterial;\n        horizontalBlurMaterial.uniforms.tDiffuse.value = renderTarget.texture;\n        horizontalBlurMaterial.uniforms.h.value = blur * 1 / 256;\n        gl.setRenderTarget(renderTargetBlur);\n        gl.render(blurPlane, shadowCamera.current);\n        blurPlane.material = verticalBlurMaterial;\n        verticalBlurMaterial.uniforms.tDiffuse.value = renderTargetBlur.texture;\n        verticalBlurMaterial.uniforms.v.value = blur * 1 / 256;\n        gl.setRenderTarget(renderTarget);\n        gl.render(blurPlane, shadowCamera.current);\n        blurPlane.visible = false;\n    };\n    let count = 0;\n    let initialBackground;\n    let initialOverrideMaterial;\n    (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.C)(()=>{\n        if (shadowCamera.current && (frames === Infinity || count < frames)) {\n            count++;\n            initialBackground = scene.background;\n            initialOverrideMaterial = scene.overrideMaterial;\n            ref.current.visible = false;\n            scene.background = null;\n            scene.overrideMaterial = depthMaterial;\n            gl.setRenderTarget(renderTarget);\n            gl.render(scene, shadowCamera.current);\n            blurShadows(blur);\n            if (smooth) blurShadows(blur * 0.4);\n            gl.setRenderTarget(null);\n            ref.current.visible = true;\n            scene.overrideMaterial = initialOverrideMaterial;\n            scene.background = initialBackground;\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle(fref, ()=>ref.current, []);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"group\", (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        \"rotation-x\": Math.PI / 2\n    }, props, {\n        ref: ref\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"mesh\", {\n        renderOrder: renderOrder,\n        geometry: planeGeometry,\n        scale: [\n            1,\n            -1,\n            1\n        ],\n        rotation: [\n            -Math.PI / 2,\n            0,\n            0\n        ]\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"meshBasicMaterial\", {\n        transparent: true,\n        map: renderTarget.texture,\n        opacity: opacity,\n        depthWrite: depthWrite\n    })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"orthographicCamera\", {\n        ref: shadowCamera,\n        args: [\n            -width / 2,\n            width / 2,\n            height / 2,\n            -height / 2,\n            near,\n            far\n        ]\n    }));\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/drei/core/ContactShadows.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/drei/core/Environment.js":
/*!************************************************************!*\
  !*** ./node_modules/@react-three/drei/core/Environment.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Environment: () => (/* binding */ Environment),\n/* harmony export */   EnvironmentCube: () => (/* binding */ EnvironmentCube),\n/* harmony export */   EnvironmentMap: () => (/* binding */ EnvironmentMap),\n/* harmony export */   EnvironmentPortal: () => (/* binding */ EnvironmentPortal)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-three/fiber */ \"(ssr)/./node_modules/@react-three/fiber/dist/index-ba8afaa4.esm.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_stdlib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! three-stdlib */ \"(ssr)/./node_modules/three-stdlib/objects/GroundProjectedEnv.js\");\n/* harmony import */ var _useEnvironment_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useEnvironment.js */ \"(ssr)/./node_modules/@react-three/drei/core/useEnvironment.js\");\n\n\n\n\n\n\nconst isRef = (obj)=>obj.current && obj.current.isScene;\nconst resolveScene = (scene)=>isRef(scene) ? scene.current : scene;\nfunction setEnvProps(background, scene, defaultScene, texture, sceneProps = {}) {\n    var _sceneProps$blur, _target$backgroundRot, _target$backgroundRot2, _target$environmentRo, _target$environmentRo2;\n    // defaults\n    sceneProps = {\n        backgroundBlurriness: (_sceneProps$blur = sceneProps.blur) !== null && _sceneProps$blur !== void 0 ? _sceneProps$blur : 0,\n        backgroundIntensity: 1,\n        backgroundRotation: [\n            0,\n            0,\n            0\n        ],\n        environmentIntensity: 1,\n        environmentRotation: [\n            0,\n            0,\n            0\n        ],\n        ...sceneProps\n    };\n    const target = resolveScene(scene || defaultScene);\n    const oldbg = target.background;\n    const oldenv = target.environment;\n    const oldSceneProps = {\n        // @ts-ignore\n        backgroundBlurriness: target.backgroundBlurriness,\n        // @ts-ignore\n        backgroundIntensity: target.backgroundIntensity,\n        // @ts-ignore\n        backgroundRotation: (_target$backgroundRot = (_target$backgroundRot2 = target.backgroundRotation) == null || _target$backgroundRot2.clone == null ? void 0 : _target$backgroundRot2.clone()) !== null && _target$backgroundRot !== void 0 ? _target$backgroundRot : [\n            0,\n            0,\n            0\n        ],\n        // @ts-ignore\n        environmentIntensity: target.environmentIntensity,\n        // @ts-ignore\n        environmentRotation: (_target$environmentRo = (_target$environmentRo2 = target.environmentRotation) == null || _target$environmentRo2.clone == null ? void 0 : _target$environmentRo2.clone()) !== null && _target$environmentRo !== void 0 ? _target$environmentRo : [\n            0,\n            0,\n            0\n        ]\n    };\n    if (background !== \"only\") target.environment = texture;\n    if (background) target.background = texture;\n    (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.j)(target, sceneProps);\n    return ()=>{\n        if (background !== \"only\") target.environment = oldenv;\n        if (background) target.background = oldbg;\n        (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.j)(target, oldSceneProps);\n    };\n}\nfunction EnvironmentMap({ scene, background = false, map, ...config }) {\n    const defaultScene = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.A)((state)=>state.scene);\n    react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect(()=>{\n        if (map) return setEnvProps(background, scene, defaultScene, map, config);\n    });\n    return null;\n}\nfunction EnvironmentCube({ background = false, scene, blur, backgroundBlurriness, backgroundIntensity, backgroundRotation, environmentIntensity, environmentRotation, ...rest }) {\n    const texture = (0,_useEnvironment_js__WEBPACK_IMPORTED_MODULE_3__.useEnvironment)(rest);\n    const defaultScene = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.A)((state)=>state.scene);\n    react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect(()=>{\n        return setEnvProps(background, scene, defaultScene, texture, {\n            blur,\n            backgroundBlurriness,\n            backgroundIntensity,\n            backgroundRotation,\n            environmentIntensity,\n            environmentRotation\n        });\n    });\n    return null;\n}\nfunction EnvironmentPortal({ children, near = 1, far = 1000, resolution = 256, frames = 1, map, background = false, blur, backgroundBlurriness, backgroundIntensity, backgroundRotation, environmentIntensity, environmentRotation, scene, files, path, preset = undefined, extensions }) {\n    const gl = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.A)((state)=>state.gl);\n    const defaultScene = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.A)((state)=>state.scene);\n    const camera = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n    const [virtualScene] = react__WEBPACK_IMPORTED_MODULE_1__.useState(()=>new three__WEBPACK_IMPORTED_MODULE_4__.Scene());\n    const fbo = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(()=>{\n        const fbo = new three__WEBPACK_IMPORTED_MODULE_4__.WebGLCubeRenderTarget(resolution);\n        fbo.texture.type = three__WEBPACK_IMPORTED_MODULE_4__.HalfFloatType;\n        return fbo;\n    }, [\n        resolution\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect(()=>{\n        if (frames === 1) camera.current.update(gl, virtualScene);\n        return setEnvProps(background, scene, defaultScene, fbo.texture, {\n            blur,\n            backgroundBlurriness,\n            backgroundIntensity,\n            backgroundRotation,\n            environmentIntensity,\n            environmentRotation\n        });\n    }, [\n        children,\n        virtualScene,\n        fbo.texture,\n        scene,\n        defaultScene,\n        background,\n        frames,\n        gl\n    ]);\n    let count = 1;\n    (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.C)(()=>{\n        if (frames === Infinity || count < frames) {\n            camera.current.update(gl, virtualScene);\n            count++;\n        }\n    });\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.g)(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, children, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"cubeCamera\", {\n        ref: camera,\n        args: [\n            near,\n            far,\n            fbo\n        ]\n    }), files || preset ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(EnvironmentCube, {\n        background: true,\n        files: files,\n        preset: preset,\n        path: path,\n        extensions: extensions\n    }) : map ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(EnvironmentMap, {\n        background: true,\n        map: map,\n        extensions: extensions\n    }) : null), virtualScene));\n}\nfunction EnvironmentGround(props) {\n    var _props$ground, _props$ground2, _scale, _props$ground3;\n    const textureDefault = (0,_useEnvironment_js__WEBPACK_IMPORTED_MODULE_3__.useEnvironment)(props);\n    const texture = props.map || textureDefault;\n    react__WEBPACK_IMPORTED_MODULE_1__.useMemo(()=>(0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.e)({\n            GroundProjectedEnvImpl: three_stdlib__WEBPACK_IMPORTED_MODULE_5__.GroundProjectedEnv\n        }), []);\n    const args = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(()=>[\n            texture\n        ], [\n        texture\n    ]);\n    const height = (_props$ground = props.ground) == null ? void 0 : _props$ground.height;\n    const radius = (_props$ground2 = props.ground) == null ? void 0 : _props$ground2.radius;\n    const scale = (_scale = (_props$ground3 = props.ground) == null ? void 0 : _props$ground3.scale) !== null && _scale !== void 0 ? _scale : 1000;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(EnvironmentMap, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, props, {\n        map: texture\n    })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"groundProjectedEnvImpl\", {\n        args: args,\n        scale: scale,\n        height: height,\n        radius: radius\n    }));\n}\nfunction Environment(props) {\n    return props.ground ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(EnvironmentGround, props) : props.map ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(EnvironmentMap, props) : props.children ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(EnvironmentPortal, props) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(EnvironmentCube, props);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXRocmVlL2RyZWkvY29yZS9FbnZpcm9ubWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUEwRDtBQUMzQjtBQUMyRDtBQUN0QjtBQUNsQjtBQUNHO0FBRXJELE1BQU1ZLFFBQVFDLENBQUFBLE1BQU9BLElBQUlDLE9BQU8sSUFBSUQsSUFBSUMsT0FBTyxDQUFDQyxPQUFPO0FBQ3ZELE1BQU1DLGVBQWVDLENBQUFBLFFBQVNMLE1BQU1LLFNBQVNBLE1BQU1ILE9BQU8sR0FBR0c7QUFDN0QsU0FBU0MsWUFBWUMsVUFBVSxFQUFFRixLQUFLLEVBQUVHLFlBQVksRUFBRUMsT0FBTyxFQUFFQyxhQUFhLENBQUMsQ0FBQztJQUM1RSxJQUFJQyxrQkFBa0JDLHVCQUF1QkMsd0JBQXdCQyx1QkFBdUJDO0lBQzVGLFdBQVc7SUFDWEwsYUFBYTtRQUNYTSxzQkFBc0IsQ0FBQ0wsbUJBQW1CRCxXQUFXTyxJQUFJLE1BQU0sUUFBUU4scUJBQXFCLEtBQUssSUFBSUEsbUJBQW1CO1FBQ3hITyxxQkFBcUI7UUFDckJDLG9CQUFvQjtZQUFDO1lBQUc7WUFBRztTQUFFO1FBQzdCQyxzQkFBc0I7UUFDdEJDLHFCQUFxQjtZQUFDO1lBQUc7WUFBRztTQUFFO1FBQzlCLEdBQUdYLFVBQVU7SUFDZjtJQUNBLE1BQU1ZLFNBQVNsQixhQUFhQyxTQUFTRztJQUNyQyxNQUFNZSxRQUFRRCxPQUFPZixVQUFVO0lBQy9CLE1BQU1pQixTQUFTRixPQUFPRyxXQUFXO0lBQ2pDLE1BQU1DLGdCQUFnQjtRQUNwQixhQUFhO1FBQ2JWLHNCQUFzQk0sT0FBT04sb0JBQW9CO1FBQ2pELGFBQWE7UUFDYkUscUJBQXFCSSxPQUFPSixtQkFBbUI7UUFDL0MsYUFBYTtRQUNiQyxvQkFBb0IsQ0FBQ1Asd0JBQXdCLENBQUNDLHlCQUF5QlMsT0FBT0gsa0JBQWtCLEtBQUssUUFBUU4sdUJBQXVCYyxLQUFLLElBQUksT0FBTyxLQUFLLElBQUlkLHVCQUF1QmMsS0FBSyxFQUFDLE1BQU8sUUFBUWYsMEJBQTBCLEtBQUssSUFBSUEsd0JBQXdCO1lBQUM7WUFBRztZQUFHO1NBQUU7UUFDN1EsYUFBYTtRQUNiUSxzQkFBc0JFLE9BQU9GLG9CQUFvQjtRQUNqRCxhQUFhO1FBQ2JDLHFCQUFxQixDQUFDUCx3QkFBd0IsQ0FBQ0MseUJBQXlCTyxPQUFPRCxtQkFBbUIsS0FBSyxRQUFRTix1QkFBdUJZLEtBQUssSUFBSSxPQUFPLEtBQUssSUFBSVosdUJBQXVCWSxLQUFLLEVBQUMsTUFBTyxRQUFRYiwwQkFBMEIsS0FBSyxJQUFJQSx3QkFBd0I7WUFBQztZQUFHO1lBQUc7U0FBRTtJQUNqUjtJQUNBLElBQUlQLGVBQWUsUUFBUWUsT0FBT0csV0FBVyxHQUFHaEI7SUFDaEQsSUFBSUYsWUFBWWUsT0FBT2YsVUFBVSxHQUFHRTtJQUNwQ2hCLHFEQUFVQSxDQUFDNkIsUUFBUVo7SUFDbkIsT0FBTztRQUNMLElBQUlILGVBQWUsUUFBUWUsT0FBT0csV0FBVyxHQUFHRDtRQUNoRCxJQUFJakIsWUFBWWUsT0FBT2YsVUFBVSxHQUFHZ0I7UUFDcEM5QixxREFBVUEsQ0FBQzZCLFFBQVFJO0lBQ3JCO0FBQ0Y7QUFDQSxTQUFTRSxlQUFlLEVBQ3RCdkIsS0FBSyxFQUNMRSxhQUFhLEtBQUssRUFDbEJzQixHQUFHLEVBQ0gsR0FBR0MsUUFDSjtJQUNDLE1BQU10QixlQUFlbEIscURBQVFBLENBQUN5QyxDQUFBQSxRQUFTQSxNQUFNMUIsS0FBSztJQUNsRGhCLGtEQUFxQixDQUFDO1FBQ3BCLElBQUl3QyxLQUFLLE9BQU92QixZQUFZQyxZQUFZRixPQUFPRyxjQUFjcUIsS0FBS0M7SUFDcEU7SUFDQSxPQUFPO0FBQ1Q7QUFDQSxTQUFTRyxnQkFBZ0IsRUFDdkIxQixhQUFhLEtBQUssRUFDbEJGLEtBQUssRUFDTFksSUFBSSxFQUNKRCxvQkFBb0IsRUFDcEJFLG1CQUFtQixFQUNuQkMsa0JBQWtCLEVBQ2xCQyxvQkFBb0IsRUFDcEJDLG1CQUFtQixFQUNuQixHQUFHYSxNQUNKO0lBQ0MsTUFBTXpCLFVBQVVWLGtFQUFjQSxDQUFDbUM7SUFDL0IsTUFBTTFCLGVBQWVsQixxREFBUUEsQ0FBQ3lDLENBQUFBLFFBQVNBLE1BQU0xQixLQUFLO0lBQ2xEaEIsa0RBQXFCLENBQUM7UUFDcEIsT0FBT2lCLFlBQVlDLFlBQVlGLE9BQU9HLGNBQWNDLFNBQVM7WUFDM0RRO1lBQ0FEO1lBQ0FFO1lBQ0FDO1lBQ0FDO1lBQ0FDO1FBQ0Y7SUFDRjtJQUNBLE9BQU87QUFDVDtBQUNBLFNBQVNjLGtCQUFrQixFQUN6QkMsUUFBUSxFQUNSQyxPQUFPLENBQUMsRUFDUkMsTUFBTSxJQUFJLEVBQ1ZDLGFBQWEsR0FBRyxFQUNoQkMsU0FBUyxDQUFDLEVBQ1ZYLEdBQUcsRUFDSHRCLGFBQWEsS0FBSyxFQUNsQlUsSUFBSSxFQUNKRCxvQkFBb0IsRUFDcEJFLG1CQUFtQixFQUNuQkMsa0JBQWtCLEVBQ2xCQyxvQkFBb0IsRUFDcEJDLG1CQUFtQixFQUNuQmhCLEtBQUssRUFDTG9DLEtBQUssRUFDTEMsSUFBSSxFQUNKQyxTQUFTQyxTQUFTLEVBQ2xCQyxVQUFVLEVBQ1g7SUFDQyxNQUFNQyxLQUFLeEQscURBQVFBLENBQUN5QyxDQUFBQSxRQUFTQSxNQUFNZSxFQUFFO0lBQ3JDLE1BQU10QyxlQUFlbEIscURBQVFBLENBQUN5QyxDQUFBQSxRQUFTQSxNQUFNMUIsS0FBSztJQUNsRCxNQUFNMEMsU0FBUzFELHlDQUFZLENBQUM7SUFDNUIsTUFBTSxDQUFDNEQsYUFBYSxHQUFHNUQsMkNBQWMsQ0FBQyxJQUFNLElBQUlNLHdDQUFLQTtJQUNyRCxNQUFNd0QsTUFBTTlELDBDQUFhLENBQUM7UUFDeEIsTUFBTThELE1BQU0sSUFBSXZELHdEQUFxQkEsQ0FBQzJDO1FBQ3RDWSxJQUFJMUMsT0FBTyxDQUFDNEMsSUFBSSxHQUFHeEQsZ0RBQWFBO1FBQ2hDLE9BQU9zRDtJQUNULEdBQUc7UUFBQ1o7S0FBVztJQUNmbEQsa0RBQXFCLENBQUM7UUFDcEIsSUFBSW1ELFdBQVcsR0FBR08sT0FBTzdDLE9BQU8sQ0FBQ29ELE1BQU0sQ0FBQ1IsSUFBSUc7UUFDNUMsT0FBTzNDLFlBQVlDLFlBQVlGLE9BQU9HLGNBQWMyQyxJQUFJMUMsT0FBTyxFQUFFO1lBQy9EUTtZQUNBRDtZQUNBRTtZQUNBQztZQUNBQztZQUNBQztRQUNGO0lBQ0YsR0FBRztRQUFDZTtRQUFVYTtRQUFjRSxJQUFJMUMsT0FBTztRQUFFSjtRQUFPRztRQUFjRDtRQUFZaUM7UUFBUU07S0FBRztJQUNyRixJQUFJUyxRQUFRO0lBQ1poRSxxREFBUUEsQ0FBQztRQUNQLElBQUlpRCxXQUFXZ0IsWUFBWUQsUUFBUWYsUUFBUTtZQUN6Q08sT0FBTzdDLE9BQU8sQ0FBQ29ELE1BQU0sQ0FBQ1IsSUFBSUc7WUFDMUJNO1FBQ0Y7SUFDRjtJQUNBLE9BQU8sV0FBVyxHQUFFbEUsZ0RBQW1CLENBQUNBLDJDQUFjLEVBQUUsTUFBTUcscURBQVlBLENBQUUsV0FBVyxHQUFFSCxnREFBbUIsQ0FBQ0EsMkNBQWMsRUFBRSxNQUFNK0MsVUFBVSxXQUFXLEdBQUUvQyxnREFBbUIsQ0FBQyxjQUFjO1FBQzFMc0UsS0FBS1o7UUFDTGEsTUFBTTtZQUFDdkI7WUFBTUM7WUFBS2E7U0FBSTtJQUN4QixJQUFJVixTQUFTRSxTQUFTLFdBQVcsR0FBRXRELGdEQUFtQixDQUFDNEMsaUJBQWlCO1FBQ3RFMUIsWUFBWTtRQUNaa0MsT0FBT0E7UUFDUEUsUUFBUUE7UUFDUkQsTUFBTUE7UUFDTkcsWUFBWUE7SUFDZCxLQUFLaEIsTUFBTSxXQUFXLEdBQUV4QyxnREFBbUIsQ0FBQ3VDLGdCQUFnQjtRQUMxRHJCLFlBQVk7UUFDWnNCLEtBQUtBO1FBQ0xnQixZQUFZQTtJQUNkLEtBQUssT0FBT0k7QUFDZDtBQUNBLFNBQVNZLGtCQUFrQkMsS0FBSztJQUM5QixJQUFJQyxlQUFlQyxnQkFBZ0JDLFFBQVFDO0lBQzNDLE1BQU1DLGlCQUFpQnBFLGtFQUFjQSxDQUFDK0Q7SUFDdEMsTUFBTXJELFVBQVVxRCxNQUFNakMsR0FBRyxJQUFJc0M7SUFDN0I5RSwwQ0FBYSxDQUFDLElBQU1LLHFEQUFNQSxDQUFDO1lBQ3pCMEUsd0JBQXdCdEUsNERBQWtCQTtRQUM1QyxJQUFJLEVBQUU7SUFDTixNQUFNOEQsT0FBT3ZFLDBDQUFhLENBQUMsSUFBTTtZQUFDb0I7U0FBUSxFQUFFO1FBQUNBO0tBQVE7SUFDckQsTUFBTTRELFNBQVMsQ0FBQ04sZ0JBQWdCRCxNQUFNUSxNQUFNLEtBQUssT0FBTyxLQUFLLElBQUlQLGNBQWNNLE1BQU07SUFDckYsTUFBTUUsU0FBUyxDQUFDUCxpQkFBaUJGLE1BQU1RLE1BQU0sS0FBSyxPQUFPLEtBQUssSUFBSU4sZUFBZU8sTUFBTTtJQUN2RixNQUFNQyxRQUFRLENBQUNQLFNBQVMsQ0FBQ0MsaUJBQWlCSixNQUFNUSxNQUFNLEtBQUssT0FBTyxLQUFLLElBQUlKLGVBQWVNLEtBQUssTUFBTSxRQUFRUCxXQUFXLEtBQUssSUFBSUEsU0FBUztJQUMxSSxPQUFPLFdBQVcsR0FBRTVFLGdEQUFtQixDQUFDQSwyQ0FBYyxFQUFFLE1BQU0sV0FBVyxHQUFFQSxnREFBbUIsQ0FBQ3VDLGdCQUFnQnhDLDhFQUFRQSxDQUFDLENBQUMsR0FBRzBFLE9BQU87UUFDaklqQyxLQUFLcEI7SUFDUCxLQUFLLFdBQVcsR0FBRXBCLGdEQUFtQixDQUFDLDBCQUEwQjtRQUM5RHVFLE1BQU1BO1FBQ05ZLE9BQU9BO1FBQ1BILFFBQVFBO1FBQ1JFLFFBQVFBO0lBQ1Y7QUFDRjtBQUNBLFNBQVNFLFlBQVlYLEtBQUs7SUFDeEIsT0FBT0EsTUFBTVEsTUFBTSxHQUFHLFdBQVcsR0FBRWpGLGdEQUFtQixDQUFDd0UsbUJBQW1CQyxTQUFTQSxNQUFNakMsR0FBRyxHQUFHLFdBQVcsR0FBRXhDLGdEQUFtQixDQUFDdUMsZ0JBQWdCa0MsU0FBU0EsTUFBTTFCLFFBQVEsR0FBRyxXQUFXLEdBQUUvQyxnREFBbUIsQ0FBQzhDLG1CQUFtQjJCLFNBQVMsV0FBVyxHQUFFekUsZ0RBQW1CLENBQUM0QyxpQkFBaUI2QjtBQUMzUjtBQUUyRSIsInNvdXJjZXMiOlsid2VicGFjazovL3Nhbmp5b3RpLWxlYXJuaW5nLy4vbm9kZV9tb2R1bGVzL0ByZWFjdC10aHJlZS9kcmVpL2NvcmUvRW52aXJvbm1lbnQuanM/NjA0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VUaHJlZSwgdXNlRnJhbWUsIGNyZWF0ZVBvcnRhbCwgYXBwbHlQcm9wcywgZXh0ZW5kIH0gZnJvbSAnQHJlYWN0LXRocmVlL2ZpYmVyJztcbmltcG9ydCB7IFNjZW5lLCBXZWJHTEN1YmVSZW5kZXJUYXJnZXQsIEhhbGZGbG9hdFR5cGUgfSBmcm9tICd0aHJlZSc7XG5pbXBvcnQgeyBHcm91bmRQcm9qZWN0ZWRFbnYgfSBmcm9tICd0aHJlZS1zdGRsaWInO1xuaW1wb3J0IHsgdXNlRW52aXJvbm1lbnQgfSBmcm9tICcuL3VzZUVudmlyb25tZW50LmpzJztcblxuY29uc3QgaXNSZWYgPSBvYmogPT4gb2JqLmN1cnJlbnQgJiYgb2JqLmN1cnJlbnQuaXNTY2VuZTtcbmNvbnN0IHJlc29sdmVTY2VuZSA9IHNjZW5lID0+IGlzUmVmKHNjZW5lKSA/IHNjZW5lLmN1cnJlbnQgOiBzY2VuZTtcbmZ1bmN0aW9uIHNldEVudlByb3BzKGJhY2tncm91bmQsIHNjZW5lLCBkZWZhdWx0U2NlbmUsIHRleHR1cmUsIHNjZW5lUHJvcHMgPSB7fSkge1xuICB2YXIgX3NjZW5lUHJvcHMkYmx1ciwgX3RhcmdldCRiYWNrZ3JvdW5kUm90LCBfdGFyZ2V0JGJhY2tncm91bmRSb3QyLCBfdGFyZ2V0JGVudmlyb25tZW50Um8sIF90YXJnZXQkZW52aXJvbm1lbnRSbzI7XG4gIC8vIGRlZmF1bHRzXG4gIHNjZW5lUHJvcHMgPSB7XG4gICAgYmFja2dyb3VuZEJsdXJyaW5lc3M6IChfc2NlbmVQcm9wcyRibHVyID0gc2NlbmVQcm9wcy5ibHVyKSAhPT0gbnVsbCAmJiBfc2NlbmVQcm9wcyRibHVyICE9PSB2b2lkIDAgPyBfc2NlbmVQcm9wcyRibHVyIDogMCxcbiAgICBiYWNrZ3JvdW5kSW50ZW5zaXR5OiAxLFxuICAgIGJhY2tncm91bmRSb3RhdGlvbjogWzAsIDAsIDBdLFxuICAgIGVudmlyb25tZW50SW50ZW5zaXR5OiAxLFxuICAgIGVudmlyb25tZW50Um90YXRpb246IFswLCAwLCAwXSxcbiAgICAuLi5zY2VuZVByb3BzXG4gIH07XG4gIGNvbnN0IHRhcmdldCA9IHJlc29sdmVTY2VuZShzY2VuZSB8fCBkZWZhdWx0U2NlbmUpO1xuICBjb25zdCBvbGRiZyA9IHRhcmdldC5iYWNrZ3JvdW5kO1xuICBjb25zdCBvbGRlbnYgPSB0YXJnZXQuZW52aXJvbm1lbnQ7XG4gIGNvbnN0IG9sZFNjZW5lUHJvcHMgPSB7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIGJhY2tncm91bmRCbHVycmluZXNzOiB0YXJnZXQuYmFja2dyb3VuZEJsdXJyaW5lc3MsXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIGJhY2tncm91bmRJbnRlbnNpdHk6IHRhcmdldC5iYWNrZ3JvdW5kSW50ZW5zaXR5LFxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBiYWNrZ3JvdW5kUm90YXRpb246IChfdGFyZ2V0JGJhY2tncm91bmRSb3QgPSAoX3RhcmdldCRiYWNrZ3JvdW5kUm90MiA9IHRhcmdldC5iYWNrZ3JvdW5kUm90YXRpb24pID09IG51bGwgfHwgX3RhcmdldCRiYWNrZ3JvdW5kUm90Mi5jbG9uZSA9PSBudWxsID8gdm9pZCAwIDogX3RhcmdldCRiYWNrZ3JvdW5kUm90Mi5jbG9uZSgpKSAhPT0gbnVsbCAmJiBfdGFyZ2V0JGJhY2tncm91bmRSb3QgIT09IHZvaWQgMCA/IF90YXJnZXQkYmFja2dyb3VuZFJvdCA6IFswLCAwLCAwXSxcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgZW52aXJvbm1lbnRJbnRlbnNpdHk6IHRhcmdldC5lbnZpcm9ubWVudEludGVuc2l0eSxcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgZW52aXJvbm1lbnRSb3RhdGlvbjogKF90YXJnZXQkZW52aXJvbm1lbnRSbyA9IChfdGFyZ2V0JGVudmlyb25tZW50Um8yID0gdGFyZ2V0LmVudmlyb25tZW50Um90YXRpb24pID09IG51bGwgfHwgX3RhcmdldCRlbnZpcm9ubWVudFJvMi5jbG9uZSA9PSBudWxsID8gdm9pZCAwIDogX3RhcmdldCRlbnZpcm9ubWVudFJvMi5jbG9uZSgpKSAhPT0gbnVsbCAmJiBfdGFyZ2V0JGVudmlyb25tZW50Um8gIT09IHZvaWQgMCA/IF90YXJnZXQkZW52aXJvbm1lbnRSbyA6IFswLCAwLCAwXVxuICB9O1xuICBpZiAoYmFja2dyb3VuZCAhPT0gJ29ubHknKSB0YXJnZXQuZW52aXJvbm1lbnQgPSB0ZXh0dXJlO1xuICBpZiAoYmFja2dyb3VuZCkgdGFyZ2V0LmJhY2tncm91bmQgPSB0ZXh0dXJlO1xuICBhcHBseVByb3BzKHRhcmdldCwgc2NlbmVQcm9wcyk7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgaWYgKGJhY2tncm91bmQgIT09ICdvbmx5JykgdGFyZ2V0LmVudmlyb25tZW50ID0gb2xkZW52O1xuICAgIGlmIChiYWNrZ3JvdW5kKSB0YXJnZXQuYmFja2dyb3VuZCA9IG9sZGJnO1xuICAgIGFwcGx5UHJvcHModGFyZ2V0LCBvbGRTY2VuZVByb3BzKTtcbiAgfTtcbn1cbmZ1bmN0aW9uIEVudmlyb25tZW50TWFwKHtcbiAgc2NlbmUsXG4gIGJhY2tncm91bmQgPSBmYWxzZSxcbiAgbWFwLFxuICAuLi5jb25maWdcbn0pIHtcbiAgY29uc3QgZGVmYXVsdFNjZW5lID0gdXNlVGhyZWUoc3RhdGUgPT4gc3RhdGUuc2NlbmUpO1xuICBSZWFjdC51c2VMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChtYXApIHJldHVybiBzZXRFbnZQcm9wcyhiYWNrZ3JvdW5kLCBzY2VuZSwgZGVmYXVsdFNjZW5lLCBtYXAsIGNvbmZpZyk7XG4gIH0pO1xuICByZXR1cm4gbnVsbDtcbn1cbmZ1bmN0aW9uIEVudmlyb25tZW50Q3ViZSh7XG4gIGJhY2tncm91bmQgPSBmYWxzZSxcbiAgc2NlbmUsXG4gIGJsdXIsXG4gIGJhY2tncm91bmRCbHVycmluZXNzLFxuICBiYWNrZ3JvdW5kSW50ZW5zaXR5LFxuICBiYWNrZ3JvdW5kUm90YXRpb24sXG4gIGVudmlyb25tZW50SW50ZW5zaXR5LFxuICBlbnZpcm9ubWVudFJvdGF0aW9uLFxuICAuLi5yZXN0XG59KSB7XG4gIGNvbnN0IHRleHR1cmUgPSB1c2VFbnZpcm9ubWVudChyZXN0KTtcbiAgY29uc3QgZGVmYXVsdFNjZW5lID0gdXNlVGhyZWUoc3RhdGUgPT4gc3RhdGUuc2NlbmUpO1xuICBSZWFjdC51c2VMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgIHJldHVybiBzZXRFbnZQcm9wcyhiYWNrZ3JvdW5kLCBzY2VuZSwgZGVmYXVsdFNjZW5lLCB0ZXh0dXJlLCB7XG4gICAgICBibHVyLFxuICAgICAgYmFja2dyb3VuZEJsdXJyaW5lc3MsXG4gICAgICBiYWNrZ3JvdW5kSW50ZW5zaXR5LFxuICAgICAgYmFja2dyb3VuZFJvdGF0aW9uLFxuICAgICAgZW52aXJvbm1lbnRJbnRlbnNpdHksXG4gICAgICBlbnZpcm9ubWVudFJvdGF0aW9uXG4gICAgfSk7XG4gIH0pO1xuICByZXR1cm4gbnVsbDtcbn1cbmZ1bmN0aW9uIEVudmlyb25tZW50UG9ydGFsKHtcbiAgY2hpbGRyZW4sXG4gIG5lYXIgPSAxLFxuICBmYXIgPSAxMDAwLFxuICByZXNvbHV0aW9uID0gMjU2LFxuICBmcmFtZXMgPSAxLFxuICBtYXAsXG4gIGJhY2tncm91bmQgPSBmYWxzZSxcbiAgYmx1cixcbiAgYmFja2dyb3VuZEJsdXJyaW5lc3MsXG4gIGJhY2tncm91bmRJbnRlbnNpdHksXG4gIGJhY2tncm91bmRSb3RhdGlvbixcbiAgZW52aXJvbm1lbnRJbnRlbnNpdHksXG4gIGVudmlyb25tZW50Um90YXRpb24sXG4gIHNjZW5lLFxuICBmaWxlcyxcbiAgcGF0aCxcbiAgcHJlc2V0ID0gdW5kZWZpbmVkLFxuICBleHRlbnNpb25zXG59KSB7XG4gIGNvbnN0IGdsID0gdXNlVGhyZWUoc3RhdGUgPT4gc3RhdGUuZ2wpO1xuICBjb25zdCBkZWZhdWx0U2NlbmUgPSB1c2VUaHJlZShzdGF0ZSA9PiBzdGF0ZS5zY2VuZSk7XG4gIGNvbnN0IGNhbWVyYSA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgY29uc3QgW3ZpcnR1YWxTY2VuZV0gPSBSZWFjdC51c2VTdGF0ZSgoKSA9PiBuZXcgU2NlbmUoKSk7XG4gIGNvbnN0IGZibyA9IFJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IGZibyA9IG5ldyBXZWJHTEN1YmVSZW5kZXJUYXJnZXQocmVzb2x1dGlvbik7XG4gICAgZmJvLnRleHR1cmUudHlwZSA9IEhhbGZGbG9hdFR5cGU7XG4gICAgcmV0dXJuIGZibztcbiAgfSwgW3Jlc29sdXRpb25dKTtcbiAgUmVhY3QudXNlTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICBpZiAoZnJhbWVzID09PSAxKSBjYW1lcmEuY3VycmVudC51cGRhdGUoZ2wsIHZpcnR1YWxTY2VuZSk7XG4gICAgcmV0dXJuIHNldEVudlByb3BzKGJhY2tncm91bmQsIHNjZW5lLCBkZWZhdWx0U2NlbmUsIGZiby50ZXh0dXJlLCB7XG4gICAgICBibHVyLFxuICAgICAgYmFja2dyb3VuZEJsdXJyaW5lc3MsXG4gICAgICBiYWNrZ3JvdW5kSW50ZW5zaXR5LFxuICAgICAgYmFja2dyb3VuZFJvdGF0aW9uLFxuICAgICAgZW52aXJvbm1lbnRJbnRlbnNpdHksXG4gICAgICBlbnZpcm9ubWVudFJvdGF0aW9uXG4gICAgfSk7XG4gIH0sIFtjaGlsZHJlbiwgdmlydHVhbFNjZW5lLCBmYm8udGV4dHVyZSwgc2NlbmUsIGRlZmF1bHRTY2VuZSwgYmFja2dyb3VuZCwgZnJhbWVzLCBnbF0pO1xuICBsZXQgY291bnQgPSAxO1xuICB1c2VGcmFtZSgoKSA9PiB7XG4gICAgaWYgKGZyYW1lcyA9PT0gSW5maW5pdHkgfHwgY291bnQgPCBmcmFtZXMpIHtcbiAgICAgIGNhbWVyYS5jdXJyZW50LnVwZGF0ZShnbCwgdmlydHVhbFNjZW5lKTtcbiAgICAgIGNvdW50Kys7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCBjcmVhdGVQb3J0YWwoIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCBjaGlsZHJlbiwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJjdWJlQ2FtZXJhXCIsIHtcbiAgICByZWY6IGNhbWVyYSxcbiAgICBhcmdzOiBbbmVhciwgZmFyLCBmYm9dXG4gIH0pLCBmaWxlcyB8fCBwcmVzZXQgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFbnZpcm9ubWVudEN1YmUsIHtcbiAgICBiYWNrZ3JvdW5kOiB0cnVlLFxuICAgIGZpbGVzOiBmaWxlcyxcbiAgICBwcmVzZXQ6IHByZXNldCxcbiAgICBwYXRoOiBwYXRoLFxuICAgIGV4dGVuc2lvbnM6IGV4dGVuc2lvbnNcbiAgfSkgOiBtYXAgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFbnZpcm9ubWVudE1hcCwge1xuICAgIGJhY2tncm91bmQ6IHRydWUsXG4gICAgbWFwOiBtYXAsXG4gICAgZXh0ZW5zaW9uczogZXh0ZW5zaW9uc1xuICB9KSA6IG51bGwpLCB2aXJ0dWFsU2NlbmUpKTtcbn1cbmZ1bmN0aW9uIEVudmlyb25tZW50R3JvdW5kKHByb3BzKSB7XG4gIHZhciBfcHJvcHMkZ3JvdW5kLCBfcHJvcHMkZ3JvdW5kMiwgX3NjYWxlLCBfcHJvcHMkZ3JvdW5kMztcbiAgY29uc3QgdGV4dHVyZURlZmF1bHQgPSB1c2VFbnZpcm9ubWVudChwcm9wcyk7XG4gIGNvbnN0IHRleHR1cmUgPSBwcm9wcy5tYXAgfHwgdGV4dHVyZURlZmF1bHQ7XG4gIFJlYWN0LnVzZU1lbW8oKCkgPT4gZXh0ZW5kKHtcbiAgICBHcm91bmRQcm9qZWN0ZWRFbnZJbXBsOiBHcm91bmRQcm9qZWN0ZWRFbnZcbiAgfSksIFtdKTtcbiAgY29uc3QgYXJncyA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gW3RleHR1cmVdLCBbdGV4dHVyZV0pO1xuICBjb25zdCBoZWlnaHQgPSAoX3Byb3BzJGdyb3VuZCA9IHByb3BzLmdyb3VuZCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9wcm9wcyRncm91bmQuaGVpZ2h0O1xuICBjb25zdCByYWRpdXMgPSAoX3Byb3BzJGdyb3VuZDIgPSBwcm9wcy5ncm91bmQpID09IG51bGwgPyB2b2lkIDAgOiBfcHJvcHMkZ3JvdW5kMi5yYWRpdXM7XG4gIGNvbnN0IHNjYWxlID0gKF9zY2FsZSA9IChfcHJvcHMkZ3JvdW5kMyA9IHByb3BzLmdyb3VuZCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9wcm9wcyRncm91bmQzLnNjYWxlKSAhPT0gbnVsbCAmJiBfc2NhbGUgIT09IHZvaWQgMCA/IF9zY2FsZSA6IDEwMDA7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRW52aXJvbm1lbnRNYXAsIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgIG1hcDogdGV4dHVyZVxuICB9KSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZ3JvdW5kUHJvamVjdGVkRW52SW1wbFwiLCB7XG4gICAgYXJnczogYXJncyxcbiAgICBzY2FsZTogc2NhbGUsXG4gICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgcmFkaXVzOiByYWRpdXNcbiAgfSkpO1xufVxuZnVuY3Rpb24gRW52aXJvbm1lbnQocHJvcHMpIHtcbiAgcmV0dXJuIHByb3BzLmdyb3VuZCA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEVudmlyb25tZW50R3JvdW5kLCBwcm9wcykgOiBwcm9wcy5tYXAgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFbnZpcm9ubWVudE1hcCwgcHJvcHMpIDogcHJvcHMuY2hpbGRyZW4gPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFbnZpcm9ubWVudFBvcnRhbCwgcHJvcHMpIDogLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRW52aXJvbm1lbnRDdWJlLCBwcm9wcyk7XG59XG5cbmV4cG9ydCB7IEVudmlyb25tZW50LCBFbnZpcm9ubWVudEN1YmUsIEVudmlyb25tZW50TWFwLCBFbnZpcm9ubWVudFBvcnRhbCB9O1xuIl0sIm5hbWVzIjpbIl9leHRlbmRzIiwiUmVhY3QiLCJ1c2VUaHJlZSIsInVzZUZyYW1lIiwiY3JlYXRlUG9ydGFsIiwiYXBwbHlQcm9wcyIsImV4dGVuZCIsIlNjZW5lIiwiV2ViR0xDdWJlUmVuZGVyVGFyZ2V0IiwiSGFsZkZsb2F0VHlwZSIsIkdyb3VuZFByb2plY3RlZEVudiIsInVzZUVudmlyb25tZW50IiwiaXNSZWYiLCJvYmoiLCJjdXJyZW50IiwiaXNTY2VuZSIsInJlc29sdmVTY2VuZSIsInNjZW5lIiwic2V0RW52UHJvcHMiLCJiYWNrZ3JvdW5kIiwiZGVmYXVsdFNjZW5lIiwidGV4dHVyZSIsInNjZW5lUHJvcHMiLCJfc2NlbmVQcm9wcyRibHVyIiwiX3RhcmdldCRiYWNrZ3JvdW5kUm90IiwiX3RhcmdldCRiYWNrZ3JvdW5kUm90MiIsIl90YXJnZXQkZW52aXJvbm1lbnRSbyIsIl90YXJnZXQkZW52aXJvbm1lbnRSbzIiLCJiYWNrZ3JvdW5kQmx1cnJpbmVzcyIsImJsdXIiLCJiYWNrZ3JvdW5kSW50ZW5zaXR5IiwiYmFja2dyb3VuZFJvdGF0aW9uIiwiZW52aXJvbm1lbnRJbnRlbnNpdHkiLCJlbnZpcm9ubWVudFJvdGF0aW9uIiwidGFyZ2V0Iiwib2xkYmciLCJvbGRlbnYiLCJlbnZpcm9ubWVudCIsIm9sZFNjZW5lUHJvcHMiLCJjbG9uZSIsIkVudmlyb25tZW50TWFwIiwibWFwIiwiY29uZmlnIiwic3RhdGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJFbnZpcm9ubWVudEN1YmUiLCJyZXN0IiwiRW52aXJvbm1lbnRQb3J0YWwiLCJjaGlsZHJlbiIsIm5lYXIiLCJmYXIiLCJyZXNvbHV0aW9uIiwiZnJhbWVzIiwiZmlsZXMiLCJwYXRoIiwicHJlc2V0IiwidW5kZWZpbmVkIiwiZXh0ZW5zaW9ucyIsImdsIiwiY2FtZXJhIiwidXNlUmVmIiwidmlydHVhbFNjZW5lIiwidXNlU3RhdGUiLCJmYm8iLCJ1c2VNZW1vIiwidHlwZSIsInVwZGF0ZSIsImNvdW50IiwiSW5maW5pdHkiLCJjcmVhdGVFbGVtZW50IiwiRnJhZ21lbnQiLCJyZWYiLCJhcmdzIiwiRW52aXJvbm1lbnRHcm91bmQiLCJwcm9wcyIsIl9wcm9wcyRncm91bmQiLCJfcHJvcHMkZ3JvdW5kMiIsIl9zY2FsZSIsIl9wcm9wcyRncm91bmQzIiwidGV4dHVyZURlZmF1bHQiLCJHcm91bmRQcm9qZWN0ZWRFbnZJbXBsIiwiaGVpZ2h0IiwiZ3JvdW5kIiwicmFkaXVzIiwic2NhbGUiLCJFbnZpcm9ubWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/drei/core/Environment.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/drei/core/OrbitControls.js":
/*!**************************************************************!*\
  !*** ./node_modules/@react-three/drei/core/OrbitControls.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OrbitControls: () => (/* binding */ OrbitControls)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-three/fiber */ \"(ssr)/./node_modules/@react-three/fiber/dist/index-ba8afaa4.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three_stdlib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three-stdlib */ \"(ssr)/./node_modules/three-stdlib/controls/OrbitControls.js\");\n\n\n\n\nconst OrbitControls = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ makeDefault, camera, regress, domElement, enableDamping = true, keyEvents = false, onChange, onStart, onEnd, ...restProps }, ref)=>{\n    const invalidate = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.A)((state)=>state.invalidate);\n    const defaultCamera = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.A)((state)=>state.camera);\n    const gl = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.A)((state)=>state.gl);\n    const events = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.A)((state)=>state.events);\n    const setEvents = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.A)((state)=>state.setEvents);\n    const set = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.A)((state)=>state.set);\n    const get = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.A)((state)=>state.get);\n    const performance = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.A)((state)=>state.performance);\n    const explCamera = camera || defaultCamera;\n    const explDomElement = domElement || events.connected || gl.domElement;\n    const controls = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(()=>new three_stdlib__WEBPACK_IMPORTED_MODULE_3__.OrbitControls(explCamera), [\n        explCamera\n    ]);\n    (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.C)(()=>{\n        if (controls.enabled) controls.update();\n    }, -1);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(()=>{\n        if (keyEvents) {\n            controls.connect(keyEvents === true ? explDomElement : keyEvents);\n        }\n        controls.connect(explDomElement);\n        return ()=>void controls.dispose();\n    }, [\n        keyEvents,\n        explDomElement,\n        regress,\n        controls,\n        invalidate\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(()=>{\n        const callback = (e)=>{\n            invalidate();\n            if (regress) performance.regress();\n            if (onChange) onChange(e);\n        };\n        const onStartCb = (e)=>{\n            if (onStart) onStart(e);\n        };\n        const onEndCb = (e)=>{\n            if (onEnd) onEnd(e);\n        };\n        controls.addEventListener(\"change\", callback);\n        controls.addEventListener(\"start\", onStartCb);\n        controls.addEventListener(\"end\", onEndCb);\n        return ()=>{\n            controls.removeEventListener(\"start\", onStartCb);\n            controls.removeEventListener(\"end\", onEndCb);\n            controls.removeEventListener(\"change\", callback);\n        };\n    }, [\n        onChange,\n        onStart,\n        onEnd,\n        controls,\n        invalidate,\n        setEvents\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(()=>{\n        if (makeDefault) {\n            const old = get().controls;\n            set({\n                controls\n            });\n            return ()=>set({\n                    controls: old\n                });\n        }\n    }, [\n        makeDefault,\n        controls\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"primitive\", (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        ref: ref,\n        object: controls,\n        enableDamping: enableDamping\n    }, restProps));\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXRocmVlL2RyZWkvY29yZS9PcmJpdENvbnRyb2xzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEwRDtBQUNGO0FBQ3pCO0FBQ2lDO0FBRWhFLE1BQU1JLGdCQUFnQixhQUFhLGlCQUFFRCw2Q0FBZ0IsQ0FBQyxDQUFDLEVBQ3JESSxXQUFXLEVBQ1hDLE1BQU0sRUFDTkMsT0FBTyxFQUNQQyxVQUFVLEVBQ1ZDLGdCQUFnQixJQUFJLEVBQ3BCQyxZQUFZLEtBQUssRUFDakJDLFFBQVEsRUFDUkMsT0FBTyxFQUNQQyxLQUFLLEVBQ0wsR0FBR0MsV0FDSixFQUFFQztJQUNELE1BQU1DLGFBQWFqQixxREFBUUEsQ0FBQ2tCLENBQUFBLFFBQVNBLE1BQU1ELFVBQVU7SUFDckQsTUFBTUUsZ0JBQWdCbkIscURBQVFBLENBQUNrQixDQUFBQSxRQUFTQSxNQUFNWCxNQUFNO0lBQ3BELE1BQU1hLEtBQUtwQixxREFBUUEsQ0FBQ2tCLENBQUFBLFFBQVNBLE1BQU1FLEVBQUU7SUFDckMsTUFBTUMsU0FBU3JCLHFEQUFRQSxDQUFDa0IsQ0FBQUEsUUFBU0EsTUFBTUcsTUFBTTtJQUM3QyxNQUFNQyxZQUFZdEIscURBQVFBLENBQUNrQixDQUFBQSxRQUFTQSxNQUFNSSxTQUFTO0lBQ25ELE1BQU1DLE1BQU12QixxREFBUUEsQ0FBQ2tCLENBQUFBLFFBQVNBLE1BQU1LLEdBQUc7SUFDdkMsTUFBTUMsTUFBTXhCLHFEQUFRQSxDQUFDa0IsQ0FBQUEsUUFBU0EsTUFBTU0sR0FBRztJQUN2QyxNQUFNQyxjQUFjekIscURBQVFBLENBQUNrQixDQUFBQSxRQUFTQSxNQUFNTyxXQUFXO0lBQ3ZELE1BQU1DLGFBQWFuQixVQUFVWTtJQUM3QixNQUFNUSxpQkFBaUJsQixjQUFjWSxPQUFPTyxTQUFTLElBQUlSLEdBQUdYLFVBQVU7SUFDdEUsTUFBTW9CLFdBQVczQiwwQ0FBYSxDQUFDLElBQU0sSUFBSUUsdURBQWVBLENBQUNzQixhQUFhO1FBQUNBO0tBQVc7SUFDbEZ6QixxREFBUUEsQ0FBQztRQUNQLElBQUk0QixTQUFTRSxPQUFPLEVBQUVGLFNBQVNHLE1BQU07SUFDdkMsR0FBRyxDQUFDO0lBQ0o5Qiw0Q0FBZSxDQUFDO1FBQ2QsSUFBSVMsV0FBVztZQUNia0IsU0FBU0ssT0FBTyxDQUFDdkIsY0FBYyxPQUFPZ0IsaUJBQWlCaEI7UUFDekQ7UUFDQWtCLFNBQVNLLE9BQU8sQ0FBQ1A7UUFDakIsT0FBTyxJQUFNLEtBQUtFLFNBQVNNLE9BQU87SUFDcEMsR0FBRztRQUFDeEI7UUFBV2dCO1FBQWdCbkI7UUFBU3FCO1FBQVVaO0tBQVc7SUFDN0RmLDRDQUFlLENBQUM7UUFDZCxNQUFNa0MsV0FBV0MsQ0FBQUE7WUFDZnBCO1lBQ0EsSUFBSVQsU0FBU2lCLFlBQVlqQixPQUFPO1lBQ2hDLElBQUlJLFVBQVVBLFNBQVN5QjtRQUN6QjtRQUNBLE1BQU1DLFlBQVlELENBQUFBO1lBQ2hCLElBQUl4QixTQUFTQSxRQUFRd0I7UUFDdkI7UUFDQSxNQUFNRSxVQUFVRixDQUFBQTtZQUNkLElBQUl2QixPQUFPQSxNQUFNdUI7UUFDbkI7UUFDQVIsU0FBU1csZ0JBQWdCLENBQUMsVUFBVUo7UUFDcENQLFNBQVNXLGdCQUFnQixDQUFDLFNBQVNGO1FBQ25DVCxTQUFTVyxnQkFBZ0IsQ0FBQyxPQUFPRDtRQUNqQyxPQUFPO1lBQ0xWLFNBQVNZLG1CQUFtQixDQUFDLFNBQVNIO1lBQ3RDVCxTQUFTWSxtQkFBbUIsQ0FBQyxPQUFPRjtZQUNwQ1YsU0FBU1ksbUJBQW1CLENBQUMsVUFBVUw7UUFDekM7SUFDRixHQUFHO1FBQUN4QjtRQUFVQztRQUFTQztRQUFPZTtRQUFVWjtRQUFZSztLQUFVO0lBQzlEcEIsNENBQWUsQ0FBQztRQUNkLElBQUlJLGFBQWE7WUFDZixNQUFNb0MsTUFBTWxCLE1BQU1LLFFBQVE7WUFDMUJOLElBQUk7Z0JBQ0ZNO1lBQ0Y7WUFDQSxPQUFPLElBQU1OLElBQUk7b0JBQ2ZNLFVBQVVhO2dCQUNaO1FBQ0Y7SUFDRixHQUFHO1FBQUNwQztRQUFhdUI7S0FBUztJQUMxQixPQUFPLFdBQVcsR0FBRTNCLGdEQUFtQixDQUFDLGFBQWFILDhFQUFRQSxDQUFDO1FBQzVEaUIsS0FBS0E7UUFDTDRCLFFBQVFmO1FBQ1JuQixlQUFlQTtJQUNqQixHQUFHSztBQUNMO0FBRXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FuanlvdGktbGVhcm5pbmcvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXRocmVlL2RyZWkvY29yZS9PcmJpdENvbnRyb2xzLmpzP2M4ZTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHsgdXNlVGhyZWUsIHVzZUZyYW1lIH0gZnJvbSAnQHJlYWN0LXRocmVlL2ZpYmVyJztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IE9yYml0Q29udHJvbHMgYXMgT3JiaXRDb250cm9scyQxIH0gZnJvbSAndGhyZWUtc3RkbGliJztcblxuY29uc3QgT3JiaXRDb250cm9scyA9IC8qIEBfX1BVUkVfXyAqL1JlYWN0LmZvcndhcmRSZWYoKHtcbiAgbWFrZURlZmF1bHQsXG4gIGNhbWVyYSxcbiAgcmVncmVzcyxcbiAgZG9tRWxlbWVudCxcbiAgZW5hYmxlRGFtcGluZyA9IHRydWUsXG4gIGtleUV2ZW50cyA9IGZhbHNlLFxuICBvbkNoYW5nZSxcbiAgb25TdGFydCxcbiAgb25FbmQsXG4gIC4uLnJlc3RQcm9wc1xufSwgcmVmKSA9PiB7XG4gIGNvbnN0IGludmFsaWRhdGUgPSB1c2VUaHJlZShzdGF0ZSA9PiBzdGF0ZS5pbnZhbGlkYXRlKTtcbiAgY29uc3QgZGVmYXVsdENhbWVyYSA9IHVzZVRocmVlKHN0YXRlID0+IHN0YXRlLmNhbWVyYSk7XG4gIGNvbnN0IGdsID0gdXNlVGhyZWUoc3RhdGUgPT4gc3RhdGUuZ2wpO1xuICBjb25zdCBldmVudHMgPSB1c2VUaHJlZShzdGF0ZSA9PiBzdGF0ZS5ldmVudHMpO1xuICBjb25zdCBzZXRFdmVudHMgPSB1c2VUaHJlZShzdGF0ZSA9PiBzdGF0ZS5zZXRFdmVudHMpO1xuICBjb25zdCBzZXQgPSB1c2VUaHJlZShzdGF0ZSA9PiBzdGF0ZS5zZXQpO1xuICBjb25zdCBnZXQgPSB1c2VUaHJlZShzdGF0ZSA9PiBzdGF0ZS5nZXQpO1xuICBjb25zdCBwZXJmb3JtYW5jZSA9IHVzZVRocmVlKHN0YXRlID0+IHN0YXRlLnBlcmZvcm1hbmNlKTtcbiAgY29uc3QgZXhwbENhbWVyYSA9IGNhbWVyYSB8fCBkZWZhdWx0Q2FtZXJhO1xuICBjb25zdCBleHBsRG9tRWxlbWVudCA9IGRvbUVsZW1lbnQgfHwgZXZlbnRzLmNvbm5lY3RlZCB8fCBnbC5kb21FbGVtZW50O1xuICBjb25zdCBjb250cm9scyA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gbmV3IE9yYml0Q29udHJvbHMkMShleHBsQ2FtZXJhKSwgW2V4cGxDYW1lcmFdKTtcbiAgdXNlRnJhbWUoKCkgPT4ge1xuICAgIGlmIChjb250cm9scy5lbmFibGVkKSBjb250cm9scy51cGRhdGUoKTtcbiAgfSwgLTEpO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChrZXlFdmVudHMpIHtcbiAgICAgIGNvbnRyb2xzLmNvbm5lY3Qoa2V5RXZlbnRzID09PSB0cnVlID8gZXhwbERvbUVsZW1lbnQgOiBrZXlFdmVudHMpO1xuICAgIH1cbiAgICBjb250cm9scy5jb25uZWN0KGV4cGxEb21FbGVtZW50KTtcbiAgICByZXR1cm4gKCkgPT4gdm9pZCBjb250cm9scy5kaXNwb3NlKCk7XG4gIH0sIFtrZXlFdmVudHMsIGV4cGxEb21FbGVtZW50LCByZWdyZXNzLCBjb250cm9scywgaW52YWxpZGF0ZV0pO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGNhbGxiYWNrID0gZSA9PiB7XG4gICAgICBpbnZhbGlkYXRlKCk7XG4gICAgICBpZiAocmVncmVzcykgcGVyZm9ybWFuY2UucmVncmVzcygpO1xuICAgICAgaWYgKG9uQ2hhbmdlKSBvbkNoYW5nZShlKTtcbiAgICB9O1xuICAgIGNvbnN0IG9uU3RhcnRDYiA9IGUgPT4ge1xuICAgICAgaWYgKG9uU3RhcnQpIG9uU3RhcnQoZSk7XG4gICAgfTtcbiAgICBjb25zdCBvbkVuZENiID0gZSA9PiB7XG4gICAgICBpZiAob25FbmQpIG9uRW5kKGUpO1xuICAgIH07XG4gICAgY29udHJvbHMuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgY2FsbGJhY2spO1xuICAgIGNvbnRyb2xzLmFkZEV2ZW50TGlzdGVuZXIoJ3N0YXJ0Jywgb25TdGFydENiKTtcbiAgICBjb250cm9scy5hZGRFdmVudExpc3RlbmVyKCdlbmQnLCBvbkVuZENiKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgY29udHJvbHMucmVtb3ZlRXZlbnRMaXN0ZW5lcignc3RhcnQnLCBvblN0YXJ0Q2IpO1xuICAgICAgY29udHJvbHMucmVtb3ZlRXZlbnRMaXN0ZW5lcignZW5kJywgb25FbmRDYik7XG4gICAgICBjb250cm9scy5yZW1vdmVFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjYWxsYmFjayk7XG4gICAgfTtcbiAgfSwgW29uQ2hhbmdlLCBvblN0YXJ0LCBvbkVuZCwgY29udHJvbHMsIGludmFsaWRhdGUsIHNldEV2ZW50c10pO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChtYWtlRGVmYXVsdCkge1xuICAgICAgY29uc3Qgb2xkID0gZ2V0KCkuY29udHJvbHM7XG4gICAgICBzZXQoe1xuICAgICAgICBjb250cm9sc1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gKCkgPT4gc2V0KHtcbiAgICAgICAgY29udHJvbHM6IG9sZFxuICAgICAgfSk7XG4gICAgfVxuICB9LCBbbWFrZURlZmF1bHQsIGNvbnRyb2xzXSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInByaW1pdGl2ZVwiLCBfZXh0ZW5kcyh7XG4gICAgcmVmOiByZWYsXG4gICAgb2JqZWN0OiBjb250cm9scyxcbiAgICBlbmFibGVEYW1waW5nOiBlbmFibGVEYW1waW5nXG4gIH0sIHJlc3RQcm9wcykpO1xufSk7XG5cbmV4cG9ydCB7IE9yYml0Q29udHJvbHMgfTtcbiJdLCJuYW1lcyI6WyJfZXh0ZW5kcyIsInVzZVRocmVlIiwidXNlRnJhbWUiLCJSZWFjdCIsIk9yYml0Q29udHJvbHMiLCJPcmJpdENvbnRyb2xzJDEiLCJmb3J3YXJkUmVmIiwibWFrZURlZmF1bHQiLCJjYW1lcmEiLCJyZWdyZXNzIiwiZG9tRWxlbWVudCIsImVuYWJsZURhbXBpbmciLCJrZXlFdmVudHMiLCJvbkNoYW5nZSIsIm9uU3RhcnQiLCJvbkVuZCIsInJlc3RQcm9wcyIsInJlZiIsImludmFsaWRhdGUiLCJzdGF0ZSIsImRlZmF1bHRDYW1lcmEiLCJnbCIsImV2ZW50cyIsInNldEV2ZW50cyIsInNldCIsImdldCIsInBlcmZvcm1hbmNlIiwiZXhwbENhbWVyYSIsImV4cGxEb21FbGVtZW50IiwiY29ubmVjdGVkIiwiY29udHJvbHMiLCJ1c2VNZW1vIiwiZW5hYmxlZCIsInVwZGF0ZSIsInVzZUVmZmVjdCIsImNvbm5lY3QiLCJkaXNwb3NlIiwiY2FsbGJhY2siLCJlIiwib25TdGFydENiIiwib25FbmRDYiIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwib2xkIiwiY3JlYXRlRWxlbWVudCIsIm9iamVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/drei/core/OrbitControls.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/drei/core/Stage.js":
/*!******************************************************!*\
  !*** ./node_modules/@react-three/drei/core/Stage.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Stage: () => (/* binding */ Stage)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Environment_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Environment.js */ \"(ssr)/./node_modules/@react-three/drei/core/Environment.js\");\n/* harmony import */ var _ContactShadows_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ContactShadows.js */ \"(ssr)/./node_modules/@react-three/drei/core/ContactShadows.js\");\n/* harmony import */ var _Center_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Center.js */ \"(ssr)/./node_modules/@react-three/drei/core/Center.js\");\n/* harmony import */ var _AccumulativeShadows_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./AccumulativeShadows.js */ \"(ssr)/./node_modules/@react-three/drei/core/AccumulativeShadows.js\");\n/* harmony import */ var _Bounds_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Bounds.js */ \"(ssr)/./node_modules/@react-three/drei/core/Bounds.js\");\n\n\n\n\n\n\n\nconst presets = {\n    rembrandt: {\n        main: [\n            1,\n            2,\n            1\n        ],\n        fill: [\n            -2,\n            -0.5,\n            -2\n        ]\n    },\n    portrait: {\n        main: [\n            -1,\n            2,\n            0.5\n        ],\n        fill: [\n            -1,\n            0.5,\n            -1.5\n        ]\n    },\n    upfront: {\n        main: [\n            0,\n            2,\n            1\n        ],\n        fill: [\n            -1,\n            0.5,\n            -1.5\n        ]\n    },\n    soft: {\n        main: [\n            -2,\n            4,\n            4\n        ],\n        fill: [\n            -1,\n            0.5,\n            -1.5\n        ]\n    }\n};\nfunction Refit({ radius, adjustCamera }) {\n    const api = (0,_Bounds_js__WEBPACK_IMPORTED_MODULE_2__.useBounds)();\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(()=>{\n        if (adjustCamera) api.refresh().clip().fit();\n    }, [\n        radius,\n        adjustCamera\n    ]);\n    return null;\n}\nfunction Stage({ children, center, adjustCamera = true, intensity = 0.5, shadows = \"contact\", environment = \"city\", preset = \"rembrandt\", ...props }) {\n    var _bias, _normalBias, _size, _offset, _amount, _radius, _ambient, _intensity;\n    const config = typeof preset === \"string\" ? presets[preset] : preset;\n    const [{ radius, height }, set] = react__WEBPACK_IMPORTED_MODULE_1__.useState({\n        radius: 0,\n        width: 0,\n        height: 0,\n        depth: 0\n    });\n    const shadowBias = (_bias = shadows == null ? void 0 : shadows.bias) !== null && _bias !== void 0 ? _bias : -0.0001;\n    const normalBias = (_normalBias = shadows == null ? void 0 : shadows.normalBias) !== null && _normalBias !== void 0 ? _normalBias : 0;\n    const shadowSize = (_size = shadows == null ? void 0 : shadows.size) !== null && _size !== void 0 ? _size : 1024;\n    const shadowOffset = (_offset = shadows == null ? void 0 : shadows.offset) !== null && _offset !== void 0 ? _offset : 0;\n    const contactShadow = shadows === \"contact\" || (shadows == null ? void 0 : shadows.type) === \"contact\";\n    const accumulativeShadow = shadows === \"accumulative\" || (shadows == null ? void 0 : shadows.type) === \"accumulative\";\n    const shadowSpread = {\n        ...typeof shadows === \"object\" ? shadows : {}\n    };\n    const environmentProps = !environment ? null : typeof environment === \"string\" ? {\n        preset: environment\n    } : environment;\n    const onCentered = react__WEBPACK_IMPORTED_MODULE_1__.useCallback((props)=>{\n        const { width, height, depth, boundingSphere } = props;\n        set({\n            radius: boundingSphere.radius,\n            width,\n            height,\n            depth\n        });\n        if (center != null && center.onCentered) center.onCentered(props);\n    }, []);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"ambientLight\", {\n        intensity: intensity / 3\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"spotLight\", {\n        penumbra: 1,\n        position: [\n            config.main[0] * radius,\n            config.main[1] * radius,\n            config.main[2] * radius\n        ],\n        intensity: intensity * 2,\n        castShadow: !!shadows,\n        \"shadow-bias\": shadowBias,\n        \"shadow-normalBias\": normalBias,\n        \"shadow-mapSize\": shadowSize\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"pointLight\", {\n        position: [\n            config.fill[0] * radius,\n            config.fill[1] * radius,\n            config.fill[2] * radius\n        ],\n        intensity: intensity\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(_Bounds_js__WEBPACK_IMPORTED_MODULE_2__.Bounds, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        fit: !!adjustCamera,\n        clip: !!adjustCamera,\n        margin: Number(adjustCamera),\n        observe: true\n    }, props), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(Refit, {\n        radius: radius,\n        adjustCamera: adjustCamera\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(_Center_js__WEBPACK_IMPORTED_MODULE_3__.Center, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, center, {\n        position: [\n            0,\n            shadowOffset / 2,\n            0\n        ],\n        onCentered: onCentered\n    }), children)), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"group\", {\n        position: [\n            0,\n            -height / 2 - shadowOffset / 2,\n            0\n        ]\n    }, contactShadow && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(_ContactShadows_js__WEBPACK_IMPORTED_MODULE_4__.ContactShadows, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        scale: radius * 4,\n        far: radius,\n        blur: 2\n    }, shadowSpread)), accumulativeShadow && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(_AccumulativeShadows_js__WEBPACK_IMPORTED_MODULE_5__.AccumulativeShadows, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        temporal: true,\n        frames: 100,\n        alphaTest: 0.9,\n        toneMapped: true,\n        scale: radius * 4\n    }, shadowSpread), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(_AccumulativeShadows_js__WEBPACK_IMPORTED_MODULE_5__.RandomizedLight, {\n        amount: (_amount = shadowSpread.amount) !== null && _amount !== void 0 ? _amount : 8,\n        radius: (_radius = shadowSpread.radius) !== null && _radius !== void 0 ? _radius : radius,\n        ambient: (_ambient = shadowSpread.ambient) !== null && _ambient !== void 0 ? _ambient : 0.5,\n        intensity: (_intensity = shadowSpread.intensity) !== null && _intensity !== void 0 ? _intensity : 1,\n        position: [\n            config.main[0] * radius,\n            config.main[1] * radius,\n            config.main[2] * radius\n        ],\n        size: radius * 4,\n        bias: -shadowBias,\n        mapSize: shadowSize\n    }))), environment && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(_Environment_js__WEBPACK_IMPORTED_MODULE_6__.Environment, environmentProps));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/drei/core/Stage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/drei/core/shaderMaterial.js":
/*!***************************************************************!*\
  !*** ./node_modules/@react-three/drei/core/shaderMaterial.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   shaderMaterial: () => (/* binding */ shaderMaterial)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.module.js\");\n\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n    const material = class material extends three__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial {\n        constructor(parameters = {}){\n            const entries = Object.entries(uniforms);\n            // Create unforms and shaders\n            super({\n                uniforms: entries.reduce((acc, [name, value])=>{\n                    const uniform = three__WEBPACK_IMPORTED_MODULE_0__.UniformsUtils.clone({\n                        [name]: {\n                            value\n                        }\n                    });\n                    return {\n                        ...acc,\n                        ...uniform\n                    };\n                }, {}),\n                vertexShader,\n                fragmentShader\n            });\n            // Create getter/setters\n            this.key = \"\";\n            entries.forEach(([name])=>Object.defineProperty(this, name, {\n                    get: ()=>this.uniforms[name].value,\n                    set: (v)=>this.uniforms[name].value = v\n                }));\n            // Assign parameters, this might include uniforms\n            Object.assign(this, parameters);\n            // Call onInit\n            if (onInit) onInit(this);\n        }\n    };\n    material.key = three__WEBPACK_IMPORTED_MODULE_0__.MathUtils.generateUUID();\n    return material;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXRocmVlL2RyZWkvY29yZS9zaGFkZXJNYXRlcmlhbC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQjtBQUUvQixTQUFTQyxlQUFlQyxRQUFRLEVBQUVDLFlBQVksRUFBRUMsY0FBYyxFQUFFQyxNQUFNO0lBQ3BFLE1BQU1DLFdBQVcsTUFBTUEsaUJBQWlCTixpREFBb0I7UUFDMURRLFlBQVlDLGFBQWEsQ0FBQyxDQUFDLENBQUU7WUFDM0IsTUFBTUMsVUFBVUMsT0FBT0QsT0FBTyxDQUFDUjtZQUMvQiw2QkFBNkI7WUFDN0IsS0FBSyxDQUFDO2dCQUNKQSxVQUFVUSxRQUFRRSxNQUFNLENBQUMsQ0FBQ0MsS0FBSyxDQUFDQyxNQUFNQyxNQUFNO29CQUMxQyxNQUFNQyxVQUFVaEIsZ0RBQW1CLENBQUNrQixLQUFLLENBQUM7d0JBQ3hDLENBQUNKLEtBQUssRUFBRTs0QkFDTkM7d0JBQ0Y7b0JBQ0Y7b0JBQ0EsT0FBTzt3QkFDTCxHQUFHRixHQUFHO3dCQUNOLEdBQUdHLE9BQU87b0JBQ1o7Z0JBQ0YsR0FBRyxDQUFDO2dCQUNKYjtnQkFDQUM7WUFDRjtZQUNBLHdCQUF3QjtZQUN4QixJQUFJLENBQUNlLEdBQUcsR0FBRztZQUNYVCxRQUFRVSxPQUFPLENBQUMsQ0FBQyxDQUFDTixLQUFLLEdBQUtILE9BQU9VLGNBQWMsQ0FBQyxJQUFJLEVBQUVQLE1BQU07b0JBQzVEUSxLQUFLLElBQU0sSUFBSSxDQUFDcEIsUUFBUSxDQUFDWSxLQUFLLENBQUNDLEtBQUs7b0JBQ3BDUSxLQUFLQyxDQUFBQSxJQUFLLElBQUksQ0FBQ3RCLFFBQVEsQ0FBQ1ksS0FBSyxDQUFDQyxLQUFLLEdBQUdTO2dCQUN4QztZQUVBLGlEQUFpRDtZQUNqRGIsT0FBT2MsTUFBTSxDQUFDLElBQUksRUFBRWhCO1lBQ3BCLGNBQWM7WUFDZCxJQUFJSixRQUFRQSxPQUFPLElBQUk7UUFDekI7SUFDRjtJQUNBQyxTQUFTYSxHQUFHLEdBQUduQiw0Q0FBZSxDQUFDMkIsWUFBWTtJQUMzQyxPQUFPckI7QUFDVDtBQUUwQiIsInNvdXJjZXMiOlsid2VicGFjazovL3Nhbmp5b3RpLWxlYXJuaW5nLy4vbm9kZV9tb2R1bGVzL0ByZWFjdC10aHJlZS9kcmVpL2NvcmUvc2hhZGVyTWF0ZXJpYWwuanM/Nzc4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBUSFJFRSBmcm9tICd0aHJlZSc7XG5cbmZ1bmN0aW9uIHNoYWRlck1hdGVyaWFsKHVuaWZvcm1zLCB2ZXJ0ZXhTaGFkZXIsIGZyYWdtZW50U2hhZGVyLCBvbkluaXQpIHtcbiAgY29uc3QgbWF0ZXJpYWwgPSBjbGFzcyBtYXRlcmlhbCBleHRlbmRzIFRIUkVFLlNoYWRlck1hdGVyaWFsIHtcbiAgICBjb25zdHJ1Y3RvcihwYXJhbWV0ZXJzID0ge30pIHtcbiAgICAgIGNvbnN0IGVudHJpZXMgPSBPYmplY3QuZW50cmllcyh1bmlmb3Jtcyk7XG4gICAgICAvLyBDcmVhdGUgdW5mb3JtcyBhbmQgc2hhZGVyc1xuICAgICAgc3VwZXIoe1xuICAgICAgICB1bmlmb3JtczogZW50cmllcy5yZWR1Y2UoKGFjYywgW25hbWUsIHZhbHVlXSkgPT4ge1xuICAgICAgICAgIGNvbnN0IHVuaWZvcm0gPSBUSFJFRS5Vbmlmb3Jtc1V0aWxzLmNsb25lKHtcbiAgICAgICAgICAgIFtuYW1lXToge1xuICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5hY2MsXG4gICAgICAgICAgICAuLi51bmlmb3JtXG4gICAgICAgICAgfTtcbiAgICAgICAgfSwge30pLFxuICAgICAgICB2ZXJ0ZXhTaGFkZXIsXG4gICAgICAgIGZyYWdtZW50U2hhZGVyXG4gICAgICB9KTtcbiAgICAgIC8vIENyZWF0ZSBnZXR0ZXIvc2V0dGVyc1xuICAgICAgdGhpcy5rZXkgPSAnJztcbiAgICAgIGVudHJpZXMuZm9yRWFjaCgoW25hbWVdKSA9PiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgbmFtZSwge1xuICAgICAgICBnZXQ6ICgpID0+IHRoaXMudW5pZm9ybXNbbmFtZV0udmFsdWUsXG4gICAgICAgIHNldDogdiA9PiB0aGlzLnVuaWZvcm1zW25hbWVdLnZhbHVlID0gdlxuICAgICAgfSkpO1xuXG4gICAgICAvLyBBc3NpZ24gcGFyYW1ldGVycywgdGhpcyBtaWdodCBpbmNsdWRlIHVuaWZvcm1zXG4gICAgICBPYmplY3QuYXNzaWduKHRoaXMsIHBhcmFtZXRlcnMpO1xuICAgICAgLy8gQ2FsbCBvbkluaXRcbiAgICAgIGlmIChvbkluaXQpIG9uSW5pdCh0aGlzKTtcbiAgICB9XG4gIH07XG4gIG1hdGVyaWFsLmtleSA9IFRIUkVFLk1hdGhVdGlscy5nZW5lcmF0ZVVVSUQoKTtcbiAgcmV0dXJuIG1hdGVyaWFsO1xufVxuXG5leHBvcnQgeyBzaGFkZXJNYXRlcmlhbCB9O1xuIl0sIm5hbWVzIjpbIlRIUkVFIiwic2hhZGVyTWF0ZXJpYWwiLCJ1bmlmb3JtcyIsInZlcnRleFNoYWRlciIsImZyYWdtZW50U2hhZGVyIiwib25Jbml0IiwibWF0ZXJpYWwiLCJTaGFkZXJNYXRlcmlhbCIsImNvbnN0cnVjdG9yIiwicGFyYW1ldGVycyIsImVudHJpZXMiLCJPYmplY3QiLCJyZWR1Y2UiLCJhY2MiLCJuYW1lIiwidmFsdWUiLCJ1bmlmb3JtIiwiVW5pZm9ybXNVdGlscyIsImNsb25lIiwia2V5IiwiZm9yRWFjaCIsImRlZmluZVByb3BlcnR5IiwiZ2V0Iiwic2V0IiwidiIsImFzc2lnbiIsIk1hdGhVdGlscyIsImdlbmVyYXRlVVVJRCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/drei/core/shaderMaterial.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/drei/core/useEnvironment.js":
/*!***************************************************************!*\
  !*** ./node_modules/@react-three/drei/core/useEnvironment.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useEnvironment: () => (/* binding */ useEnvironment)\n/* harmony export */ });\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @react-three/fiber */ \"(ssr)/./node_modules/@react-three/fiber/dist/index-ba8afaa4.esm.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_stdlib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three-stdlib */ \"(ssr)/./node_modules/three-stdlib/loaders/RGBELoader.js\");\n/* harmony import */ var three_stdlib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three-stdlib */ \"(ssr)/./node_modules/three-stdlib/loaders/EXRLoader.js\");\n/* harmony import */ var _monogrid_gainmap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @monogrid/gainmap-js */ \"(ssr)/./node_modules/@monogrid/gainmap-js/dist/decode.js\");\n/* harmony import */ var _helpers_environment_assets_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/environment-assets.js */ \"(ssr)/./node_modules/@react-three/drei/helpers/environment-assets.js\");\n/* harmony import */ var _helpers_deprecated_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/deprecated.js */ \"(ssr)/./node_modules/@react-three/drei/helpers/deprecated.js\");\n\n\n\n\n\n\nconst CUBEMAP_ROOT = \"https://raw.githack.com/pmndrs/drei-assets/456060a26bbeb8fdf79326f224b6d99b8bcce736/hdri/\";\nconst isArray = (arr)=>Array.isArray(arr);\nfunction useEnvironment({ files = [\n    \"/px.png\",\n    \"/nx.png\",\n    \"/py.png\",\n    \"/ny.png\",\n    \"/pz.png\",\n    \"/nz.png\"\n], path = \"\", preset = undefined, encoding = undefined, extensions } = {}) {\n    var _firstEntry$split$pop;\n    let loader = null;\n    let multiFile = false;\n    let extension;\n    if (preset) {\n        if (!(preset in _helpers_environment_assets_js__WEBPACK_IMPORTED_MODULE_0__.presetsObj)) throw new Error(\"Preset must be one of: \" + Object.keys(_helpers_environment_assets_js__WEBPACK_IMPORTED_MODULE_0__.presetsObj).join(\", \"));\n        files = _helpers_environment_assets_js__WEBPACK_IMPORTED_MODULE_0__.presetsObj[preset];\n        path = CUBEMAP_ROOT;\n    }\n    const isCubemap = isArray(files) && files.length === 6;\n    const isGainmap = isArray(files) && files.length === 3 && files.some((file)=>file.endsWith(\"json\"));\n    const firstEntry = isArray(files) ? files[0] : files;\n    // Everything else\n    multiFile = isArray(files);\n    extension = isCubemap ? \"cube\" : isGainmap ? \"webp\" : firstEntry.startsWith(\"data:application/exr\") ? \"exr\" : firstEntry.startsWith(\"data:application/hdr\") ? \"hdr\" : firstEntry.startsWith(\"data:image/jpeg\") ? \"jpg\" : (_firstEntry$split$pop = firstEntry.split(\".\").pop()) == null || (_firstEntry$split$pop = _firstEntry$split$pop.split(\"?\")) == null || (_firstEntry$split$pop = _firstEntry$split$pop.shift()) == null ? void 0 : _firstEntry$split$pop.toLowerCase();\n    loader = extension === \"cube\" ? three__WEBPACK_IMPORTED_MODULE_1__.CubeTextureLoader : extension === \"hdr\" ? three_stdlib__WEBPACK_IMPORTED_MODULE_2__.RGBELoader : extension === \"exr\" ? three_stdlib__WEBPACK_IMPORTED_MODULE_3__.EXRLoader : extension === \"jpg\" || extension === \"jpeg\" ? _monogrid_gainmap_js__WEBPACK_IMPORTED_MODULE_4__.HDRJPGLoader : extension === \"webp\" ? _monogrid_gainmap_js__WEBPACK_IMPORTED_MODULE_4__.GainMapLoader : null;\n    if (!loader) throw new Error(\"useEnvironment: Unrecognized file extension: \" + files);\n    const gl = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_5__.A)((state)=>state.gl);\n    const loaderResult = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_5__.F)(// @ts-expect-error\n    loader, multiFile ? [\n        files\n    ] : files, (loader)=>{\n        // Gainmap requires a renderer\n        if (extension === \"webp\" || extension === \"jpg\" || extension === \"jpeg\") {\n            loader.setRenderer(gl);\n        }\n        loader.setPath == null || loader.setPath(path);\n        if (extensions) extensions(loader);\n    });\n    let texture = multiFile ? // @ts-ignore\n    loaderResult[0] : loaderResult;\n    if (extension === \"jpg\" || extension === \"jpeg\" || extension === \"webp\") {\n        var _renderTarget;\n        texture = (_renderTarget = texture.renderTarget) == null ? void 0 : _renderTarget.texture;\n    }\n    texture.mapping = isCubemap ? three__WEBPACK_IMPORTED_MODULE_1__.CubeReflectionMapping : three__WEBPACK_IMPORTED_MODULE_1__.EquirectangularReflectionMapping;\n    if (\"colorSpace\" in texture) texture.colorSpace = (encoding !== null && encoding !== void 0 ? encoding : isCubemap) ? \"srgb\" : \"srgb-linear\";\n    else texture.encoding = (encoding !== null && encoding !== void 0 ? encoding : isCubemap) ? _helpers_deprecated_js__WEBPACK_IMPORTED_MODULE_6__.sRGBEncoding : _helpers_deprecated_js__WEBPACK_IMPORTED_MODULE_6__.LinearEncoding;\n    return texture;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/drei/core/useEnvironment.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/drei/core/useGLTF.js":
/*!********************************************************!*\
  !*** ./node_modules/@react-three/drei/core/useGLTF.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useGLTF: () => (/* binding */ useGLTF)\n/* harmony export */ });\n/* harmony import */ var three_stdlib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three-stdlib */ \"(ssr)/./node_modules/three-stdlib/loaders/DRACOLoader.js\");\n/* harmony import */ var three_stdlib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three-stdlib */ \"(ssr)/./node_modules/three-stdlib/libs/MeshoptDecoder.js\");\n/* harmony import */ var three_stdlib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three-stdlib */ \"(ssr)/./node_modules/three-stdlib/loaders/GLTFLoader.js\");\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-three/fiber */ \"(ssr)/./node_modules/@react-three/fiber/dist/index-ba8afaa4.esm.js\");\n\n\nlet dracoLoader = null;\nlet decoderPath = \"https://www.gstatic.com/draco/versioned/decoders/1.5.5/\";\nfunction extensions(useDraco, useMeshopt, extendLoader) {\n    return (loader)=>{\n        if (extendLoader) {\n            extendLoader(loader);\n        }\n        if (useDraco) {\n            if (!dracoLoader) {\n                dracoLoader = new three_stdlib__WEBPACK_IMPORTED_MODULE_0__.DRACOLoader();\n            }\n            dracoLoader.setDecoderPath(typeof useDraco === \"string\" ? useDraco : decoderPath);\n            loader.setDRACOLoader(dracoLoader);\n        }\n        if (useMeshopt) {\n            loader.setMeshoptDecoder(typeof three_stdlib__WEBPACK_IMPORTED_MODULE_1__.MeshoptDecoder === \"function\" ? (0,three_stdlib__WEBPACK_IMPORTED_MODULE_1__.MeshoptDecoder)() : three_stdlib__WEBPACK_IMPORTED_MODULE_1__.MeshoptDecoder);\n        }\n    };\n}\nfunction useGLTF(path, useDraco = true, useMeshOpt = true, extendLoader) {\n    return (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.F)(three_stdlib__WEBPACK_IMPORTED_MODULE_3__.GLTFLoader, path, extensions(useDraco, useMeshOpt, extendLoader));\n}\nuseGLTF.preload = (path, useDraco = true, useMeshOpt = true, extendLoader)=>_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.F.preload(three_stdlib__WEBPACK_IMPORTED_MODULE_3__.GLTFLoader, path, extensions(useDraco, useMeshOpt, extendLoader));\nuseGLTF.clear = (input)=>_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.F.clear(three_stdlib__WEBPACK_IMPORTED_MODULE_3__.GLTFLoader, input);\nuseGLTF.setDecoderPath = (path)=>{\n    decoderPath = path;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXRocmVlL2RyZWkvY29yZS91c2VHTFRGLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXVFO0FBQ3hCO0FBRS9DLElBQUlJLGNBQWM7QUFDbEIsSUFBSUMsY0FBYztBQUNsQixTQUFTQyxXQUFXQyxRQUFRLEVBQUVDLFVBQVUsRUFBRUMsWUFBWTtJQUNwRCxPQUFPQyxDQUFBQTtRQUNMLElBQUlELGNBQWM7WUFDaEJBLGFBQWFDO1FBQ2Y7UUFDQSxJQUFJSCxVQUFVO1lBQ1osSUFBSSxDQUFDSCxhQUFhO2dCQUNoQkEsY0FBYyxJQUFJSCxxREFBV0E7WUFDL0I7WUFDQUcsWUFBWU8sY0FBYyxDQUFDLE9BQU9KLGFBQWEsV0FBV0EsV0FBV0Y7WUFDckVLLE9BQU9FLGNBQWMsQ0FBQ1I7UUFDeEI7UUFDQSxJQUFJSSxZQUFZO1lBQ2RFLE9BQU9HLGlCQUFpQixDQUFDLE9BQU9YLHdEQUFjQSxLQUFLLGFBQWFBLDREQUFjQSxLQUFLQSx3REFBY0E7UUFDbkc7SUFDRjtBQUNGO0FBQ0EsU0FBU1ksUUFBUUMsSUFBSSxFQUFFUixXQUFXLElBQUksRUFBRVMsYUFBYSxJQUFJLEVBQUVQLFlBQVk7SUFDckUsT0FBT04scURBQVNBLENBQUNILG9EQUFVQSxFQUFFZSxNQUFNVCxXQUFXQyxVQUFVUyxZQUFZUDtBQUN0RTtBQUNBSyxRQUFRRyxPQUFPLEdBQUcsQ0FBQ0YsTUFBTVIsV0FBVyxJQUFJLEVBQUVTLGFBQWEsSUFBSSxFQUFFUCxlQUFpQk4saURBQVNBLENBQUNjLE9BQU8sQ0FBQ2pCLG9EQUFVQSxFQUFFZSxNQUFNVCxXQUFXQyxVQUFVUyxZQUFZUDtBQUNuSkssUUFBUUksS0FBSyxHQUFHQyxDQUFBQSxRQUFTaEIsaURBQVNBLENBQUNlLEtBQUssQ0FBQ2xCLG9EQUFVQSxFQUFFbUI7QUFDckRMLFFBQVFILGNBQWMsR0FBR0ksQ0FBQUE7SUFDdkJWLGNBQWNVO0FBQ2hCO0FBRW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FuanlvdGktbGVhcm5pbmcvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXRocmVlL2RyZWkvY29yZS91c2VHTFRGLmpzPzExMTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR0xURkxvYWRlciwgRFJBQ09Mb2FkZXIsIE1lc2hvcHREZWNvZGVyIH0gZnJvbSAndGhyZWUtc3RkbGliJztcbmltcG9ydCB7IHVzZUxvYWRlciB9IGZyb20gJ0ByZWFjdC10aHJlZS9maWJlcic7XG5cbmxldCBkcmFjb0xvYWRlciA9IG51bGw7XG5sZXQgZGVjb2RlclBhdGggPSAnaHR0cHM6Ly93d3cuZ3N0YXRpYy5jb20vZHJhY28vdmVyc2lvbmVkL2RlY29kZXJzLzEuNS41Lyc7XG5mdW5jdGlvbiBleHRlbnNpb25zKHVzZURyYWNvLCB1c2VNZXNob3B0LCBleHRlbmRMb2FkZXIpIHtcbiAgcmV0dXJuIGxvYWRlciA9PiB7XG4gICAgaWYgKGV4dGVuZExvYWRlcikge1xuICAgICAgZXh0ZW5kTG9hZGVyKGxvYWRlcik7XG4gICAgfVxuICAgIGlmICh1c2VEcmFjbykge1xuICAgICAgaWYgKCFkcmFjb0xvYWRlcikge1xuICAgICAgICBkcmFjb0xvYWRlciA9IG5ldyBEUkFDT0xvYWRlcigpO1xuICAgICAgfVxuICAgICAgZHJhY29Mb2FkZXIuc2V0RGVjb2RlclBhdGgodHlwZW9mIHVzZURyYWNvID09PSAnc3RyaW5nJyA/IHVzZURyYWNvIDogZGVjb2RlclBhdGgpO1xuICAgICAgbG9hZGVyLnNldERSQUNPTG9hZGVyKGRyYWNvTG9hZGVyKTtcbiAgICB9XG4gICAgaWYgKHVzZU1lc2hvcHQpIHtcbiAgICAgIGxvYWRlci5zZXRNZXNob3B0RGVjb2Rlcih0eXBlb2YgTWVzaG9wdERlY29kZXIgPT09ICdmdW5jdGlvbicgPyBNZXNob3B0RGVjb2RlcigpIDogTWVzaG9wdERlY29kZXIpO1xuICAgIH1cbiAgfTtcbn1cbmZ1bmN0aW9uIHVzZUdMVEYocGF0aCwgdXNlRHJhY28gPSB0cnVlLCB1c2VNZXNoT3B0ID0gdHJ1ZSwgZXh0ZW5kTG9hZGVyKSB7XG4gIHJldHVybiB1c2VMb2FkZXIoR0xURkxvYWRlciwgcGF0aCwgZXh0ZW5zaW9ucyh1c2VEcmFjbywgdXNlTWVzaE9wdCwgZXh0ZW5kTG9hZGVyKSk7XG59XG51c2VHTFRGLnByZWxvYWQgPSAocGF0aCwgdXNlRHJhY28gPSB0cnVlLCB1c2VNZXNoT3B0ID0gdHJ1ZSwgZXh0ZW5kTG9hZGVyKSA9PiB1c2VMb2FkZXIucHJlbG9hZChHTFRGTG9hZGVyLCBwYXRoLCBleHRlbnNpb25zKHVzZURyYWNvLCB1c2VNZXNoT3B0LCBleHRlbmRMb2FkZXIpKTtcbnVzZUdMVEYuY2xlYXIgPSBpbnB1dCA9PiB1c2VMb2FkZXIuY2xlYXIoR0xURkxvYWRlciwgaW5wdXQpO1xudXNlR0xURi5zZXREZWNvZGVyUGF0aCA9IHBhdGggPT4ge1xuICBkZWNvZGVyUGF0aCA9IHBhdGg7XG59O1xuXG5leHBvcnQgeyB1c2VHTFRGIH07XG4iXSwibmFtZXMiOlsiR0xURkxvYWRlciIsIkRSQUNPTG9hZGVyIiwiTWVzaG9wdERlY29kZXIiLCJ1c2VMb2FkZXIiLCJkcmFjb0xvYWRlciIsImRlY29kZXJQYXRoIiwiZXh0ZW5zaW9ucyIsInVzZURyYWNvIiwidXNlTWVzaG9wdCIsImV4dGVuZExvYWRlciIsImxvYWRlciIsInNldERlY29kZXJQYXRoIiwic2V0RFJBQ09Mb2FkZXIiLCJzZXRNZXNob3B0RGVjb2RlciIsInVzZUdMVEYiLCJwYXRoIiwidXNlTWVzaE9wdCIsInByZWxvYWQiLCJjbGVhciIsImlucHV0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/drei/core/useGLTF.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/drei/helpers/constants.js":
/*!*************************************************************!*\
  !*** ./node_modules/@react-three/drei/helpers/constants.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.module.js\");\n\nconst getVersion = ()=>parseInt(three__WEBPACK_IMPORTED_MODULE_0__.REVISION.replace(/\\D+/g, \"\"));\nconst version = /* @__PURE__ */ getVersion();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXRocmVlL2RyZWkvaGVscGVycy9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBaUM7QUFFakMsTUFBTUMsYUFBYSxJQUFNQyxTQUFTRiwyQ0FBUUEsQ0FBQ0csT0FBTyxDQUFDLFFBQVE7QUFDM0QsTUFBTUMsVUFBVSxhQUFhLEdBQUVIO0FBRVoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYW5qeW90aS1sZWFybmluZy8uL25vZGVfbW9kdWxlcy9AcmVhY3QtdGhyZWUvZHJlaS9oZWxwZXJzL2NvbnN0YW50cy5qcz81MDk0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJFVklTSU9OIH0gZnJvbSAndGhyZWUnO1xuXG5jb25zdCBnZXRWZXJzaW9uID0gKCkgPT4gcGFyc2VJbnQoUkVWSVNJT04ucmVwbGFjZSgvXFxEKy9nLCAnJykpO1xuY29uc3QgdmVyc2lvbiA9IC8qIEBfX1BVUkVfXyAqL2dldFZlcnNpb24oKTtcblxuZXhwb3J0IHsgdmVyc2lvbiB9O1xuIl0sIm5hbWVzIjpbIlJFVklTSU9OIiwiZ2V0VmVyc2lvbiIsInBhcnNlSW50IiwicmVwbGFjZSIsInZlcnNpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/drei/helpers/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/drei/helpers/deprecated.js":
/*!**************************************************************!*\
  !*** ./node_modules/@react-three/drei/helpers/deprecated.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LinearEncoding: () => (/* binding */ LinearEncoding),\n/* harmony export */   sRGBEncoding: () => (/* binding */ sRGBEncoding),\n/* harmony export */   setUpdateRange: () => (/* binding */ setUpdateRange)\n/* harmony export */ });\n/**\n * Sets `BufferAttribute.updateRange` since r159.\n */ const setUpdateRange = (attribute, updateRange)=>{\n    if (\"updateRanges\" in attribute) {\n        // r159\n        // @ts-ignore\n        attribute.updateRanges[0] = updateRange;\n    } else {\n        attribute.updateRange = updateRange;\n    }\n};\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\n/**\n * TextureEncoding was deprecated in r152, and removed in r162.\n */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXRocmVlL2RyZWkvaGVscGVycy9kZXByZWNhdGVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztDQUVDLEdBQ0QsTUFBTUEsaUJBQWlCLENBQUNDLFdBQVdDO0lBQ2pDLElBQUksa0JBQWtCRCxXQUFXO1FBQy9CLE9BQU87UUFDUCxhQUFhO1FBQ2JBLFVBQVVFLFlBQVksQ0FBQyxFQUFFLEdBQUdEO0lBQzlCLE9BQU87UUFDTEQsVUFBVUMsV0FBVyxHQUFHQTtJQUMxQjtBQUNGO0FBQ0EsTUFBTUUsaUJBQWlCO0FBQ3ZCLE1BQU1DLGVBQWU7QUFFckI7O0NBRUMsR0FFdUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYW5qeW90aS1sZWFybmluZy8uL25vZGVfbW9kdWxlcy9AcmVhY3QtdGhyZWUvZHJlaS9oZWxwZXJzL2RlcHJlY2F0ZWQuanM/ZTAwOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNldHMgYEJ1ZmZlckF0dHJpYnV0ZS51cGRhdGVSYW5nZWAgc2luY2UgcjE1OS5cbiAqL1xuY29uc3Qgc2V0VXBkYXRlUmFuZ2UgPSAoYXR0cmlidXRlLCB1cGRhdGVSYW5nZSkgPT4ge1xuICBpZiAoJ3VwZGF0ZVJhbmdlcycgaW4gYXR0cmlidXRlKSB7XG4gICAgLy8gcjE1OVxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBhdHRyaWJ1dGUudXBkYXRlUmFuZ2VzWzBdID0gdXBkYXRlUmFuZ2U7XG4gIH0gZWxzZSB7XG4gICAgYXR0cmlidXRlLnVwZGF0ZVJhbmdlID0gdXBkYXRlUmFuZ2U7XG4gIH1cbn07XG5jb25zdCBMaW5lYXJFbmNvZGluZyA9IDMwMDA7XG5jb25zdCBzUkdCRW5jb2RpbmcgPSAzMDAxO1xuXG4vKipcbiAqIFRleHR1cmVFbmNvZGluZyB3YXMgZGVwcmVjYXRlZCBpbiByMTUyLCBhbmQgcmVtb3ZlZCBpbiByMTYyLlxuICovXG5cbmV4cG9ydCB7IExpbmVhckVuY29kaW5nLCBzUkdCRW5jb2RpbmcsIHNldFVwZGF0ZVJhbmdlIH07XG4iXSwibmFtZXMiOlsic2V0VXBkYXRlUmFuZ2UiLCJhdHRyaWJ1dGUiLCJ1cGRhdGVSYW5nZSIsInVwZGF0ZVJhbmdlcyIsIkxpbmVhckVuY29kaW5nIiwic1JHQkVuY29kaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/drei/helpers/deprecated.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/drei/helpers/environment-assets.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@react-three/drei/helpers/environment-assets.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   presetsObj: () => (/* binding */ presetsObj)\n/* harmony export */ });\nconst presetsObj = {\n    apartment: \"lebombo_1k.hdr\",\n    city: \"potsdamer_platz_1k.hdr\",\n    dawn: \"kiara_1_dawn_1k.hdr\",\n    forest: \"forest_slope_1k.hdr\",\n    lobby: \"st_fagans_interior_1k.hdr\",\n    night: \"dikhololo_night_1k.hdr\",\n    park: \"rooitou_park_1k.hdr\",\n    studio: \"studio_small_03_1k.hdr\",\n    sunset: \"venice_sunset_1k.hdr\",\n    warehouse: \"empty_warehouse_01_1k.hdr\"\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXRocmVlL2RyZWkvaGVscGVycy9lbnZpcm9ubWVudC1hc3NldHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLGFBQWE7SUFDakJDLFdBQVc7SUFDWEMsTUFBTTtJQUNOQyxNQUFNO0lBQ05DLFFBQVE7SUFDUkMsT0FBTztJQUNQQyxPQUFPO0lBQ1BDLE1BQU07SUFDTkMsUUFBUTtJQUNSQyxRQUFRO0lBQ1JDLFdBQVc7QUFDYjtBQUVzQiIsInNvdXJjZXMiOlsid2VicGFjazovL3Nhbmp5b3RpLWxlYXJuaW5nLy4vbm9kZV9tb2R1bGVzL0ByZWFjdC10aHJlZS9kcmVpL2hlbHBlcnMvZW52aXJvbm1lbnQtYXNzZXRzLmpzPzE2NTEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcHJlc2V0c09iaiA9IHtcbiAgYXBhcnRtZW50OiAnbGVib21ib18xay5oZHInLFxuICBjaXR5OiAncG90c2RhbWVyX3BsYXR6XzFrLmhkcicsXG4gIGRhd246ICdraWFyYV8xX2Rhd25fMWsuaGRyJyxcbiAgZm9yZXN0OiAnZm9yZXN0X3Nsb3BlXzFrLmhkcicsXG4gIGxvYmJ5OiAnc3RfZmFnYW5zX2ludGVyaW9yXzFrLmhkcicsXG4gIG5pZ2h0OiAnZGlraG9sb2xvX25pZ2h0XzFrLmhkcicsXG4gIHBhcms6ICdyb29pdG91X3BhcmtfMWsuaGRyJyxcbiAgc3R1ZGlvOiAnc3R1ZGlvX3NtYWxsXzAzXzFrLmhkcicsXG4gIHN1bnNldDogJ3ZlbmljZV9zdW5zZXRfMWsuaGRyJyxcbiAgd2FyZWhvdXNlOiAnZW1wdHlfd2FyZWhvdXNlXzAxXzFrLmhkcidcbn07XG5cbmV4cG9ydCB7IHByZXNldHNPYmogfTtcbiJdLCJuYW1lcyI6WyJwcmVzZXRzT2JqIiwiYXBhcnRtZW50IiwiY2l0eSIsImRhd24iLCJmb3Jlc3QiLCJsb2JieSIsIm5pZ2h0IiwicGFyayIsInN0dWRpbyIsInN1bnNldCIsIndhcmVob3VzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/drei/helpers/environment-assets.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/drei/materials/DiscardMaterial.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@react-three/drei/materials/DiscardMaterial.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DiscardMaterial: () => (/* binding */ DiscardMaterial)\n/* harmony export */ });\n/* harmony import */ var _core_shaderMaterial_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/shaderMaterial.js */ \"(ssr)/./node_modules/@react-three/drei/core/shaderMaterial.js\");\n\nconst DiscardMaterial = /* @__PURE__ */ (0,_core_shaderMaterial_js__WEBPACK_IMPORTED_MODULE_0__.shaderMaterial)({}, \"void main() { }\", \"void main() { gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0); discard;  }\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXRocmVlL2RyZWkvbWF0ZXJpYWxzL0Rpc2NhcmRNYXRlcmlhbC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyRDtBQUUzRCxNQUFNQyxrQkFBa0IsYUFBYSxHQUFFRCx1RUFBY0EsQ0FBQyxDQUFDLEdBQUcsbUJBQW1CO0FBRWxEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FuanlvdGktbGVhcm5pbmcvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXRocmVlL2RyZWkvbWF0ZXJpYWxzL0Rpc2NhcmRNYXRlcmlhbC5qcz8xMzVjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNoYWRlck1hdGVyaWFsIH0gZnJvbSAnLi4vY29yZS9zaGFkZXJNYXRlcmlhbC5qcyc7XG5cbmNvbnN0IERpc2NhcmRNYXRlcmlhbCA9IC8qIEBfX1BVUkVfXyAqL3NoYWRlck1hdGVyaWFsKHt9LCAndm9pZCBtYWluKCkgeyB9JywgJ3ZvaWQgbWFpbigpIHsgZ2xfRnJhZ0NvbG9yID0gdmVjNCgwLjAsIDAuMCwgMC4wLCAwLjApOyBkaXNjYXJkOyAgfScpO1xuXG5leHBvcnQgeyBEaXNjYXJkTWF0ZXJpYWwgfTtcbiJdLCJuYW1lcyI6WyJzaGFkZXJNYXRlcmlhbCIsIkRpc2NhcmRNYXRlcmlhbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/drei/materials/DiscardMaterial.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/fiber/dist/index-ba8afaa4.esm.js":
/*!********************************************************************!*\
  !*** ./node_modules/@react-three/fiber/dist/index-ba8afaa4.esm.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (/* binding */ useThree),\n/* harmony export */   B: () => (/* binding */ Block),\n/* harmony export */   C: () => (/* binding */ useFrame),\n/* harmony export */   D: () => (/* binding */ useGraph),\n/* harmony export */   E: () => (/* binding */ ErrorBoundary),\n/* harmony export */   F: () => (/* binding */ useLoader),\n/* harmony export */   a: () => (/* binding */ useIsomorphicLayoutEffect),\n/* harmony export */   b: () => (/* binding */ createRoot),\n/* harmony export */   c: () => (/* binding */ createEvents),\n/* harmony export */   d: () => (/* binding */ unmountComponentAtNode),\n/* harmony export */   e: () => (/* binding */ extend),\n/* harmony export */   f: () => (/* binding */ context),\n/* harmony export */   g: () => (/* binding */ createPortal),\n/* harmony export */   h: () => (/* binding */ reconciler),\n/* harmony export */   i: () => (/* binding */ isRef),\n/* harmony export */   j: () => (/* binding */ applyProps),\n/* harmony export */   k: () => (/* binding */ dispose),\n/* harmony export */   l: () => (/* binding */ invalidate),\n/* harmony export */   m: () => (/* binding */ advance),\n/* harmony export */   n: () => (/* binding */ addEffect),\n/* harmony export */   o: () => (/* binding */ addAfterEffect),\n/* harmony export */   p: () => (/* binding */ addTail),\n/* harmony export */   q: () => (/* binding */ flushGlobalEffects),\n/* harmony export */   r: () => (/* binding */ render),\n/* harmony export */   s: () => (/* binding */ getRootState),\n/* harmony export */   t: () => (/* binding */ threeTypes),\n/* harmony export */   u: () => (/* binding */ useMutableCallback),\n/* harmony export */   v: () => (/* binding */ act),\n/* harmony export */   w: () => (/* binding */ buildGraph),\n/* harmony export */   x: () => (/* binding */ roots),\n/* harmony export */   y: () => (/* binding */ useInstanceHandle),\n/* harmony export */   z: () => (/* binding */ useStore)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_reconciler_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-reconciler/constants */ \"(ssr)/./node_modules/react-reconciler/constants.js\");\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! zustand */ \"(ssr)/./node_modules/@react-three/fiber/node_modules/zustand/esm/index.js\");\n/* harmony import */ var react_reconciler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-reconciler */ \"(ssr)/./node_modules/react-reconciler/index.js\");\n/* harmony import */ var react_reconciler__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_reconciler__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var scheduler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! scheduler */ \"(ssr)/./node_modules/scheduler/index.js\");\n/* harmony import */ var suspend_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! suspend-react */ \"(ssr)/./node_modules/suspend-react/index.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\n\n\n\nvar threeTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null\n});\n\nconst catalogue = {};\nconst extend = objects => void Object.assign(catalogue, objects);\nfunction createRenderer(_roots, _getEventPriority) {\n  function createInstance(type, {\n    args = [],\n    attach,\n    ...props\n  }, root) {\n    let name = `${type[0].toUpperCase()}${type.slice(1)}`;\n    let instance;\n    if (type === 'primitive') {\n      if (props.object === undefined) throw new Error(\"R3F: Primitives without 'object' are invalid!\");\n      const object = props.object;\n      instance = prepare(object, {\n        type,\n        root,\n        attach,\n        primitive: true\n      });\n    } else {\n      const target = catalogue[name];\n      if (!target) {\n        throw new Error(`R3F: ${name} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);\n      }\n\n      // Throw if an object or literal was passed for args\n      if (!Array.isArray(args)) throw new Error('R3F: The args prop must be an array!');\n\n      // Instanciate new object, link it to the root\n      // Append memoized props with args so it's not forgotten\n      instance = prepare(new target(...args), {\n        type,\n        root,\n        attach,\n        // Save args in case we need to reconstruct later for HMR\n        memoizedProps: {\n          args\n        }\n      });\n    }\n\n    // Auto-attach geometries and materials\n    if (instance.__r3f.attach === undefined) {\n      if (instance instanceof three__WEBPACK_IMPORTED_MODULE_5__.BufferGeometry) instance.__r3f.attach = 'geometry';else if (instance instanceof three__WEBPACK_IMPORTED_MODULE_5__.Material) instance.__r3f.attach = 'material';\n    }\n\n    // It should NOT call onUpdate on object instanciation, because it hasn't been added to the\n    // view yet. If the callback relies on references for instance, they won't be ready yet, this is\n    // why it passes \"true\" here\n    // There is no reason to apply props to injects\n    if (name !== 'inject') applyProps$1(instance, props);\n    return instance;\n  }\n  function appendChild(parentInstance, child) {\n    let added = false;\n    if (child) {\n      var _child$__r3f, _parentInstance$__r3f;\n      // The attach attribute implies that the object attaches itself on the parent\n      if ((_child$__r3f = child.__r3f) != null && _child$__r3f.attach) {\n        attach(parentInstance, child, child.__r3f.attach);\n      } else if (child.isObject3D && parentInstance.isObject3D) {\n        // add in the usual parent-child way\n        parentInstance.add(child);\n        added = true;\n      }\n      // This is for anything that used attach, and for non-Object3Ds that don't get attached to props;\n      // that is, anything that's a child in React but not a child in the scenegraph.\n      if (!added) (_parentInstance$__r3f = parentInstance.__r3f) == null ? void 0 : _parentInstance$__r3f.objects.push(child);\n      if (!child.__r3f) prepare(child, {});\n      child.__r3f.parent = parentInstance;\n      updateInstance(child);\n      invalidateInstance(child);\n    }\n  }\n  function insertBefore(parentInstance, child, beforeChild) {\n    let added = false;\n    if (child) {\n      var _child$__r3f2, _parentInstance$__r3f2;\n      if ((_child$__r3f2 = child.__r3f) != null && _child$__r3f2.attach) {\n        attach(parentInstance, child, child.__r3f.attach);\n      } else if (child.isObject3D && parentInstance.isObject3D) {\n        child.parent = parentInstance;\n        child.dispatchEvent({\n          type: 'added'\n        });\n        parentInstance.dispatchEvent({\n          type: 'childadded',\n          child\n        });\n        const restSiblings = parentInstance.children.filter(sibling => sibling !== child);\n        const index = restSiblings.indexOf(beforeChild);\n        parentInstance.children = [...restSiblings.slice(0, index), child, ...restSiblings.slice(index)];\n        added = true;\n      }\n      if (!added) (_parentInstance$__r3f2 = parentInstance.__r3f) == null ? void 0 : _parentInstance$__r3f2.objects.push(child);\n      if (!child.__r3f) prepare(child, {});\n      child.__r3f.parent = parentInstance;\n      updateInstance(child);\n      invalidateInstance(child);\n    }\n  }\n  function removeRecursive(array, parent, dispose = false) {\n    if (array) [...array].forEach(child => removeChild(parent, child, dispose));\n  }\n  function removeChild(parentInstance, child, dispose) {\n    if (child) {\n      var _parentInstance$__r3f3, _child$__r3f3, _child$__r3f5;\n      // Clear the parent reference\n      if (child.__r3f) child.__r3f.parent = null;\n      // Remove child from the parents objects\n      if ((_parentInstance$__r3f3 = parentInstance.__r3f) != null && _parentInstance$__r3f3.objects) parentInstance.__r3f.objects = parentInstance.__r3f.objects.filter(x => x !== child);\n      // Remove attachment\n      if ((_child$__r3f3 = child.__r3f) != null && _child$__r3f3.attach) {\n        detach(parentInstance, child, child.__r3f.attach);\n      } else if (child.isObject3D && parentInstance.isObject3D) {\n        var _child$__r3f4;\n        parentInstance.remove(child);\n        // @ts-expect-error\n        // Remove interactivity on the initial root\n        if ((_child$__r3f4 = child.__r3f) != null && _child$__r3f4.root) {\n          removeInteractivity(findInitialRoot(child), child);\n        }\n      }\n\n      // Allow objects to bail out of recursive dispose altogether by passing dispose={null}\n      // Never dispose of primitives because their state may be kept outside of React!\n      // In order for an object to be able to dispose it has to have\n      //   - a dispose method,\n      //   - it cannot be a <primitive object={...} />\n      //   - it cannot be a THREE.Scene, because three has broken it's own api\n      //\n      // Since disposal is recursive, we can check the optional dispose arg, which will be undefined\n      // when the reconciler calls it, but then carry our own check recursively\n      const isPrimitive = (_child$__r3f5 = child.__r3f) == null ? void 0 : _child$__r3f5.primitive;\n      const shouldDispose = !isPrimitive && (dispose === undefined ? child.dispose !== null : dispose);\n\n      // Remove nested child objects. Primitives should not have objects and children that are\n      // attached to them declaratively ...\n      if (!isPrimitive) {\n        var _child$__r3f6;\n        removeRecursive((_child$__r3f6 = child.__r3f) == null ? void 0 : _child$__r3f6.objects, child, shouldDispose);\n        removeRecursive(child.children, child, shouldDispose);\n      }\n\n      // Remove references\n      delete child.__r3f;\n\n      // Dispose item whenever the reconciler feels like it\n      if (shouldDispose && child.dispose && child.type !== 'Scene') {\n        const callback = () => {\n          try {\n            child.dispose();\n          } catch (e) {\n            /* ... */\n          }\n        };\n\n        // Schedule async at runtime, flush sync in testing\n        if (typeof IS_REACT_ACT_ENVIRONMENT === 'undefined') {\n          (0,scheduler__WEBPACK_IMPORTED_MODULE_3__.unstable_scheduleCallback)(scheduler__WEBPACK_IMPORTED_MODULE_3__.unstable_IdlePriority, callback);\n        } else {\n          callback();\n        }\n      }\n      invalidateInstance(parentInstance);\n    }\n  }\n  function switchInstance(instance, type, newProps, fiber) {\n    var _instance$__r3f;\n    const parent = (_instance$__r3f = instance.__r3f) == null ? void 0 : _instance$__r3f.parent;\n    if (!parent) return;\n    const newInstance = createInstance(type, newProps, instance.__r3f.root);\n\n    // https://github.com/pmndrs/react-three-fiber/issues/1348\n    // When args change the instance has to be re-constructed, which then\n    // forces r3f to re-parent the children and non-scene objects\n    if (instance.children) {\n      for (const child of instance.children) {\n        if (child.__r3f) appendChild(newInstance, child);\n      }\n      instance.children = instance.children.filter(child => !child.__r3f);\n    }\n    instance.__r3f.objects.forEach(child => appendChild(newInstance, child));\n    instance.__r3f.objects = [];\n    if (!instance.__r3f.autoRemovedBeforeAppend) {\n      removeChild(parent, instance);\n    }\n    if (newInstance.parent) {\n      newInstance.__r3f.autoRemovedBeforeAppend = true;\n    }\n    appendChild(parent, newInstance);\n\n    // Re-bind event handlers on the initial root\n    if (newInstance.raycast && newInstance.__r3f.eventCount) {\n      const rootState = findInitialRoot(newInstance).getState();\n      rootState.internal.interaction.push(newInstance);\n    }\n    [fiber, fiber.alternate].forEach(fiber => {\n      if (fiber !== null) {\n        fiber.stateNode = newInstance;\n        if (fiber.ref) {\n          if (typeof fiber.ref === 'function') fiber.ref(newInstance);else fiber.ref.current = newInstance;\n        }\n      }\n    });\n  }\n\n  // Don't handle text instances, warn on undefined behavior\n  const handleTextInstance = () => console.warn('Text is not allowed in the R3F tree! This could be stray whitespace or characters.');\n  const reconciler = react_reconciler__WEBPACK_IMPORTED_MODULE_2___default()({\n    createInstance,\n    removeChild,\n    appendChild,\n    appendInitialChild: appendChild,\n    insertBefore,\n    supportsMutation: true,\n    isPrimaryRenderer: false,\n    supportsPersistence: false,\n    supportsHydration: false,\n    noTimeout: -1,\n    appendChildToContainer: (container, child) => {\n      if (!child) return;\n\n      // Don't append to unmounted container\n      const scene = container.getState().scene;\n      if (!scene.__r3f) return;\n\n      // Link current root to the default scene\n      scene.__r3f.root = container;\n      appendChild(scene, child);\n    },\n    removeChildFromContainer: (container, child) => {\n      if (!child) return;\n      removeChild(container.getState().scene, child);\n    },\n    insertInContainerBefore: (container, child, beforeChild) => {\n      if (!child || !beforeChild) return;\n\n      // Don't append to unmounted container\n      const scene = container.getState().scene;\n      if (!scene.__r3f) return;\n      insertBefore(scene, child, beforeChild);\n    },\n    getRootHostContext: () => null,\n    getChildHostContext: parentHostContext => parentHostContext,\n    finalizeInitialChildren(instance) {\n      var _instance$__r3f2;\n      const localState = (_instance$__r3f2 = instance == null ? void 0 : instance.__r3f) != null ? _instance$__r3f2 : {};\n      // https://github.com/facebook/react/issues/20271\n      // Returning true will trigger commitMount\n      return Boolean(localState.handlers);\n    },\n    prepareUpdate(instance, _type, oldProps, newProps) {\n      var _instance$__r3f3;\n      const localState = (_instance$__r3f3 = instance == null ? void 0 : instance.__r3f) != null ? _instance$__r3f3 : {};\n\n      // Create diff-sets\n      if (localState.primitive && newProps.object && newProps.object !== instance) {\n        return [true];\n      } else {\n        // This is a data object, let's extract critical information about it\n        const {\n          args: argsNew = [],\n          children: cN,\n          ...restNew\n        } = newProps;\n        const {\n          args: argsOld = [],\n          children: cO,\n          ...restOld\n        } = oldProps;\n\n        // Throw if an object or literal was passed for args\n        if (!Array.isArray(argsNew)) throw new Error('R3F: the args prop must be an array!');\n\n        // If it has new props or arguments, then it needs to be re-instantiated\n        if (argsNew.some((value, index) => value !== argsOld[index])) return [true];\n        // Create a diff-set, flag if there are any changes\n        const diff = diffProps(instance, restNew, restOld, true);\n        if (diff.changes.length) return [false, diff];\n\n        // Otherwise do not touch the instance\n        return null;\n      }\n    },\n    commitUpdate(instance, [reconstruct, diff], type, _oldProps, newProps, fiber) {\n      // Reconstruct when args or <primitive object={...} have changes\n      if (reconstruct) switchInstance(instance, type, newProps, fiber);\n      // Otherwise just overwrite props\n      else applyProps$1(instance, diff);\n    },\n    commitMount(instance, _type, _props, _int) {\n      var _instance$__r3f4;\n      // https://github.com/facebook/react/issues/20271\n      // This will make sure events are only added once to the central container on the initial root\n      const localState = (_instance$__r3f4 = instance.__r3f) != null ? _instance$__r3f4 : {};\n      if (instance.raycast && localState.handlers && localState.eventCount) {\n        findInitialRoot(instance).getState().internal.interaction.push(instance);\n      }\n    },\n    getPublicInstance: instance => instance,\n    prepareForCommit: () => null,\n    preparePortalMount: container => prepare(container.getState().scene),\n    resetAfterCommit: () => {},\n    shouldSetTextContent: () => false,\n    clearContainer: () => false,\n    hideInstance(instance) {\n      var _instance$__r3f5;\n      // Detach while the instance is hidden\n      const {\n        attach: type,\n        parent\n      } = (_instance$__r3f5 = instance.__r3f) != null ? _instance$__r3f5 : {};\n      if (type && parent) detach(parent, instance, type);\n      if (instance.isObject3D) instance.visible = false;\n      invalidateInstance(instance);\n    },\n    unhideInstance(instance, props) {\n      var _instance$__r3f6;\n      // Re-attach when the instance is unhidden\n      const {\n        attach: type,\n        parent\n      } = (_instance$__r3f6 = instance.__r3f) != null ? _instance$__r3f6 : {};\n      if (type && parent) attach(parent, instance, type);\n      if (instance.isObject3D && props.visible == null || props.visible) instance.visible = true;\n      invalidateInstance(instance);\n    },\n    createTextInstance: handleTextInstance,\n    hideTextInstance: handleTextInstance,\n    unhideTextInstance: handleTextInstance,\n    // https://github.com/pmndrs/react-three-fiber/pull/2360#discussion_r916356874\n    // @ts-expect-error\n    getCurrentEventPriority: () => _getEventPriority ? _getEventPriority() : react_reconciler_constants__WEBPACK_IMPORTED_MODULE_1__.DefaultEventPriority,\n    beforeActiveInstanceBlur: () => {},\n    afterActiveInstanceBlur: () => {},\n    detachDeletedInstance: () => {},\n    now: typeof performance !== 'undefined' && is.fun(performance.now) ? performance.now : is.fun(Date.now) ? Date.now : () => 0,\n    // https://github.com/pmndrs/react-three-fiber/pull/2360#discussion_r920883503\n    scheduleTimeout: is.fun(setTimeout) ? setTimeout : undefined,\n    cancelTimeout: is.fun(clearTimeout) ? clearTimeout : undefined\n  });\n  return {\n    reconciler,\n    applyProps: applyProps$1\n  };\n}\n\nvar _window$document, _window$navigator;\n/**\r\n * Returns `true` with correct TS type inference if an object has a configurable color space (since r152).\r\n */\nconst hasColorSpace = object => 'colorSpace' in object || 'outputColorSpace' in object;\n/**\r\n * The current THREE.ColorManagement instance, if present.\r\n */\nconst getColorManagement = () => {\n  var _ColorManagement;\n  return (_ColorManagement = catalogue.ColorManagement) != null ? _ColorManagement : null;\n};\nconst isOrthographicCamera = def => def && def.isOrthographicCamera;\nconst isRef = obj => obj && obj.hasOwnProperty('current');\n\n/**\r\n * An SSR-friendly useLayoutEffect.\r\n *\r\n * React currently throws a warning when using useLayoutEffect on the server.\r\n * To get around it, we can conditionally useEffect on the server (no-op) and\r\n * useLayoutEffect elsewhere.\r\n *\r\n * @see https://github.com/facebook/react/issues/14927\r\n */\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' && ((_window$document = window.document) != null && _window$document.createElement || ((_window$navigator = window.navigator) == null ? void 0 : _window$navigator.product) === 'ReactNative') ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\nfunction useMutableCallback(fn) {\n  const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(fn);\n  useIsomorphicLayoutEffect(() => void (ref.current = fn), [fn]);\n  return ref;\n}\nfunction Block({\n  set\n}) {\n  useIsomorphicLayoutEffect(() => {\n    set(new Promise(() => null));\n    return () => set(false);\n  }, [set]);\n  return null;\n}\nclass ErrorBoundary extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: false\n    };\n  }\n  componentDidCatch(err) {\n    this.props.set(err);\n  }\n  render() {\n    return this.state.error ? null : this.props.children;\n  }\n}\nErrorBoundary.getDerivedStateFromError = () => ({\n  error: true\n});\nconst DEFAULT = '__default';\nconst DEFAULTS = new Map();\nconst isDiffSet = def => def && !!def.memoized && !!def.changes;\nfunction calculateDpr(dpr) {\n  var _window$devicePixelRa;\n  // Err on the side of progress by assuming 2x dpr if we can't detect it\n  // This will happen in workers where window is defined but dpr isn't.\n  const target = typeof window !== 'undefined' ? (_window$devicePixelRa = window.devicePixelRatio) != null ? _window$devicePixelRa : 2 : 1;\n  return Array.isArray(dpr) ? Math.min(Math.max(dpr[0], target), dpr[1]) : dpr;\n}\n\n/**\r\n * Returns instance root state\r\n */\nconst getRootState = obj => {\n  var _r3f;\n  return (_r3f = obj.__r3f) == null ? void 0 : _r3f.root.getState();\n};\n\n/**\r\n * Returns the instances initial (outmost) root\r\n */\nfunction findInitialRoot(child) {\n  let root = child.__r3f.root;\n  while (root.getState().previousRoot) root = root.getState().previousRoot;\n  return root;\n}\n// A collection of compare functions\nconst is = {\n  obj: a => a === Object(a) && !is.arr(a) && typeof a !== 'function',\n  fun: a => typeof a === 'function',\n  str: a => typeof a === 'string',\n  num: a => typeof a === 'number',\n  boo: a => typeof a === 'boolean',\n  und: a => a === void 0,\n  arr: a => Array.isArray(a),\n  equ(a, b, {\n    arrays = 'shallow',\n    objects = 'reference',\n    strict = true\n  } = {}) {\n    // Wrong type or one of the two undefined, doesn't match\n    if (typeof a !== typeof b || !!a !== !!b) return false;\n    // Atomic, just compare a against b\n    if (is.str(a) || is.num(a)) return a === b;\n    const isObj = is.obj(a);\n    if (isObj && objects === 'reference') return a === b;\n    const isArr = is.arr(a);\n    if (isArr && arrays === 'reference') return a === b;\n    // Array or Object, shallow compare first to see if it's a match\n    if ((isArr || isObj) && a === b) return true;\n    // Last resort, go through keys\n    let i;\n    // Check if a has all the keys of b\n    for (i in a) if (!(i in b)) return false;\n    // Check if values between keys match\n    if (isObj && arrays === 'shallow' && objects === 'shallow') {\n      for (i in strict ? b : a) if (!is.equ(a[i], b[i], {\n        strict,\n        objects: 'reference'\n      })) return false;\n    } else {\n      for (i in strict ? b : a) if (a[i] !== b[i]) return false;\n    }\n    // If i is undefined\n    if (is.und(i)) {\n      // If both arrays are empty we consider them equal\n      if (isArr && a.length === 0 && b.length === 0) return true;\n      // If both objects are empty we consider them equal\n      if (isObj && Object.keys(a).length === 0 && Object.keys(b).length === 0) return true;\n      // Otherwise match them by value\n      if (a !== b) return false;\n    }\n    return true;\n  }\n};\n\n/**\r\n * Collects nodes and materials from a THREE.Object3D.\r\n */\nfunction buildGraph(object) {\n  const data = {\n    nodes: {},\n    materials: {}\n  };\n  if (object) {\n    object.traverse(obj => {\n      if (obj.name) data.nodes[obj.name] = obj;\n      if (obj.material && !data.materials[obj.material.name]) data.materials[obj.material.name] = obj.material;\n    });\n  }\n  return data;\n}\n\n// Disposes an object and all its properties\nfunction dispose(obj) {\n  if (obj.dispose && obj.type !== 'Scene') obj.dispose();\n  for (const p in obj) {\n    p.dispose == null ? void 0 : p.dispose();\n    delete obj[p];\n  }\n}\n\n// Each object in the scene carries a small LocalState descriptor\nfunction prepare(object, state) {\n  const instance = object;\n  instance.__r3f = {\n    type: '',\n    root: null,\n    previousAttach: null,\n    memoizedProps: {},\n    eventCount: 0,\n    handlers: {},\n    objects: [],\n    parent: null,\n    ...state\n  };\n  return object;\n}\nfunction resolve(instance, key) {\n  let target = instance;\n  if (key.includes('-')) {\n    const entries = key.split('-');\n    const last = entries.pop();\n    target = entries.reduce((acc, key) => acc[key], instance);\n    return {\n      target,\n      key: last\n    };\n  } else return {\n    target,\n    key\n  };\n}\n\n// Checks if a dash-cased string ends with an integer\nconst INDEX_REGEX = /-\\d+$/;\nfunction attach(parent, child, type) {\n  if (is.str(type)) {\n    // If attaching into an array (foo-0), create one\n    if (INDEX_REGEX.test(type)) {\n      const root = type.replace(INDEX_REGEX, '');\n      const {\n        target,\n        key\n      } = resolve(parent, root);\n      if (!Array.isArray(target[key])) target[key] = [];\n    }\n    const {\n      target,\n      key\n    } = resolve(parent, type);\n    child.__r3f.previousAttach = target[key];\n    target[key] = child;\n  } else child.__r3f.previousAttach = type(parent, child);\n}\nfunction detach(parent, child, type) {\n  var _child$__r3f, _child$__r3f2;\n  if (is.str(type)) {\n    const {\n      target,\n      key\n    } = resolve(parent, type);\n    const previous = child.__r3f.previousAttach;\n    // When the previous value was undefined, it means the value was never set to begin with\n    if (previous === undefined) delete target[key];\n    // Otherwise set the previous value\n    else target[key] = previous;\n  } else (_child$__r3f = child.__r3f) == null ? void 0 : _child$__r3f.previousAttach == null ? void 0 : _child$__r3f.previousAttach(parent, child);\n  (_child$__r3f2 = child.__r3f) == null ? true : delete _child$__r3f2.previousAttach;\n}\n// This function prepares a set of changes to be applied to the instance\nfunction diffProps(instance, {\n  children: cN,\n  key: kN,\n  ref: rN,\n  ...props\n}, {\n  children: cP,\n  key: kP,\n  ref: rP,\n  ...previous\n} = {}, remove = false) {\n  const localState = instance.__r3f;\n  const entries = Object.entries(props);\n  const changes = [];\n\n  // Catch removed props, prepend them so they can be reset or removed\n  if (remove) {\n    const previousKeys = Object.keys(previous);\n    for (let i = 0; i < previousKeys.length; i++) {\n      if (!props.hasOwnProperty(previousKeys[i])) entries.unshift([previousKeys[i], DEFAULT + 'remove']);\n    }\n  }\n  entries.forEach(([key, value]) => {\n    var _instance$__r3f;\n    // Bail out on primitive object\n    if ((_instance$__r3f = instance.__r3f) != null && _instance$__r3f.primitive && key === 'object') return;\n    // When props match bail out\n    if (is.equ(value, previous[key])) return;\n    // Collect handlers and bail out\n    if (/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(key)) return changes.push([key, value, true, []]);\n    // Split dashed props\n    let entries = [];\n    if (key.includes('-')) entries = key.split('-');\n    changes.push([key, value, false, entries]);\n\n    // Reset pierced props\n    for (const prop in props) {\n      const value = props[prop];\n      if (prop.startsWith(`${key}-`)) changes.push([prop, value, false, prop.split('-')]);\n    }\n  });\n  const memoized = {\n    ...props\n  };\n  if (localState != null && localState.memoizedProps && localState != null && localState.memoizedProps.args) memoized.args = localState.memoizedProps.args;\n  if (localState != null && localState.memoizedProps && localState != null && localState.memoizedProps.attach) memoized.attach = localState.memoizedProps.attach;\n  return {\n    memoized,\n    changes\n  };\n}\nconst __DEV__ = typeof process !== 'undefined' && \"development\" !== 'production';\n\n// This function applies a set of changes to the instance\nfunction applyProps$1(instance, data) {\n  var _instance$__r3f2;\n  // Filter equals, events and reserved props\n  const localState = instance.__r3f;\n  const root = localState == null ? void 0 : localState.root;\n  const rootState = root == null ? void 0 : root.getState == null ? void 0 : root.getState();\n  const {\n    memoized,\n    changes\n  } = isDiffSet(data) ? data : diffProps(instance, data);\n  const prevHandlers = localState == null ? void 0 : localState.eventCount;\n\n  // Prepare memoized props\n  if (instance.__r3f) instance.__r3f.memoizedProps = memoized;\n  for (let i = 0; i < changes.length; i++) {\n    let [key, value, isEvent, keys] = changes[i];\n\n    // Alias (output)encoding => (output)colorSpace (since r152)\n    // https://github.com/pmndrs/react-three-fiber/pull/2829\n    if (hasColorSpace(instance)) {\n      const sRGBEncoding = 3001;\n      const SRGBColorSpace = 'srgb';\n      const LinearSRGBColorSpace = 'srgb-linear';\n      if (key === 'encoding') {\n        key = 'colorSpace';\n        value = value === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n      } else if (key === 'outputEncoding') {\n        key = 'outputColorSpace';\n        value = value === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n      }\n    }\n    let currentInstance = instance;\n    let targetProp = currentInstance[key];\n\n    // Revolve dashed props\n    if (keys.length) {\n      targetProp = keys.reduce((acc, key) => acc[key], instance);\n      // If the target is atomic, it forces us to switch the root\n      if (!(targetProp && targetProp.set)) {\n        const [name, ...reverseEntries] = keys.reverse();\n        currentInstance = reverseEntries.reverse().reduce((acc, key) => acc[key], instance);\n        key = name;\n      }\n    }\n\n    // https://github.com/mrdoob/three.js/issues/21209\n    // HMR/fast-refresh relies on the ability to cancel out props, but threejs\n    // has no means to do this. Hence we curate a small collection of value-classes\n    // with their respective constructor/set arguments\n    // For removed props, try to set default values, if possible\n    if (value === DEFAULT + 'remove') {\n      if (currentInstance.constructor) {\n        // create a blank slate of the instance and copy the particular parameter.\n        let ctor = DEFAULTS.get(currentInstance.constructor);\n        if (!ctor) {\n          // @ts-expect-error\n          ctor = new currentInstance.constructor();\n          DEFAULTS.set(currentInstance.constructor, ctor);\n        }\n        value = ctor[key];\n      } else {\n        // instance does not have constructor, just set it to 0\n        value = 0;\n      }\n    }\n\n    // Deal with pointer events ...\n    if (isEvent && localState) {\n      if (value) localState.handlers[key] = value;else delete localState.handlers[key];\n      localState.eventCount = Object.keys(localState.handlers).length;\n    }\n    // Special treatment for objects with support for set/copy, and layers\n    else if (targetProp && targetProp.set && (targetProp.copy || targetProp instanceof three__WEBPACK_IMPORTED_MODULE_5__.Layers)) {\n      // If value is an array\n      if (Array.isArray(value)) {\n        if (targetProp.fromArray) targetProp.fromArray(value);else targetProp.set(...value);\n      }\n      // Test again target.copy(class) next ...\n      else if (targetProp.copy && value && value.constructor && (\n      // Some environments may break strict identity checks by duplicating versions of three.js.\n      // Loosen to unminified names, ignoring descendents.\n      // https://github.com/pmndrs/react-three-fiber/issues/2856\n      // TODO: fix upstream and remove in v9\n      __DEV__ ? targetProp.constructor.name === value.constructor.name : targetProp.constructor === value.constructor)) {\n        targetProp.copy(value);\n      }\n      // If nothing else fits, just set the single value, ignore undefined\n      // https://github.com/pmndrs/react-three-fiber/issues/274\n      else if (value !== undefined) {\n        const isColor = targetProp instanceof three__WEBPACK_IMPORTED_MODULE_5__.Color;\n        // Allow setting array scalars\n        if (!isColor && targetProp.setScalar) targetProp.setScalar(value);\n        // Layers have no copy function, we must therefore copy the mask property\n        else if (targetProp instanceof three__WEBPACK_IMPORTED_MODULE_5__.Layers && value instanceof three__WEBPACK_IMPORTED_MODULE_5__.Layers) targetProp.mask = value.mask;\n        // Otherwise just set ...\n        else targetProp.set(value);\n        // For versions of three which don't support THREE.ColorManagement,\n        // Auto-convert sRGB colors\n        // https://github.com/pmndrs/react-three-fiber/issues/344\n        if (!getColorManagement() && rootState && !rootState.linear && isColor) targetProp.convertSRGBToLinear();\n      }\n      // Else, just overwrite the value\n    } else {\n      currentInstance[key] = value;\n\n      // Auto-convert sRGB textures, for now ...\n      // https://github.com/pmndrs/react-three-fiber/issues/344\n      if (currentInstance[key] instanceof three__WEBPACK_IMPORTED_MODULE_5__.Texture &&\n      // sRGB textures must be RGBA8 since r137 https://github.com/mrdoob/three.js/pull/23129\n      currentInstance[key].format === three__WEBPACK_IMPORTED_MODULE_5__.RGBAFormat && currentInstance[key].type === three__WEBPACK_IMPORTED_MODULE_5__.UnsignedByteType && rootState) {\n        const texture = currentInstance[key];\n        if (hasColorSpace(texture) && hasColorSpace(rootState.gl)) texture.colorSpace = rootState.gl.outputColorSpace;else texture.encoding = rootState.gl.outputEncoding;\n      }\n    }\n    invalidateInstance(instance);\n  }\n  if (localState && localState.parent && instance.raycast && prevHandlers !== localState.eventCount) {\n    // Get the initial root state's internals\n    const internal = findInitialRoot(instance).getState().internal;\n    // Pre-emptively remove the instance from the interaction manager\n    const index = internal.interaction.indexOf(instance);\n    if (index > -1) internal.interaction.splice(index, 1);\n    // Add the instance to the interaction manager only when it has handlers\n    if (localState.eventCount) internal.interaction.push(instance);\n  }\n\n  // Call the update lifecycle when it is being updated, but only when it is part of the scene.\n  // Skip updates to the `onUpdate` prop itself\n  const isCircular = changes.length === 1 && changes[0][0] === 'onUpdate';\n  if (!isCircular && changes.length && (_instance$__r3f2 = instance.__r3f) != null && _instance$__r3f2.parent) updateInstance(instance);\n  return instance;\n}\nfunction invalidateInstance(instance) {\n  var _instance$__r3f3, _instance$__r3f3$root;\n  const state = (_instance$__r3f3 = instance.__r3f) == null ? void 0 : (_instance$__r3f3$root = _instance$__r3f3.root) == null ? void 0 : _instance$__r3f3$root.getState == null ? void 0 : _instance$__r3f3$root.getState();\n  if (state && state.internal.frames === 0) state.invalidate();\n}\nfunction updateInstance(instance) {\n  instance.onUpdate == null ? void 0 : instance.onUpdate(instance);\n}\nfunction updateCamera(camera, size) {\n  // https://github.com/pmndrs/react-three-fiber/issues/92\n  // Do not mess with the camera if it belongs to the user\n  if (!camera.manual) {\n    if (isOrthographicCamera(camera)) {\n      camera.left = size.width / -2;\n      camera.right = size.width / 2;\n      camera.top = size.height / 2;\n      camera.bottom = size.height / -2;\n    } else {\n      camera.aspect = size.width / size.height;\n    }\n    camera.updateProjectionMatrix();\n    // https://github.com/pmndrs/react-three-fiber/issues/178\n    // Update matrix world since the renderer is a frame late\n    camera.updateMatrixWorld();\n  }\n}\n\nfunction makeId(event) {\n  return (event.eventObject || event.object).uuid + '/' + event.index + event.instanceId;\n}\n\n// https://github.com/facebook/react/tree/main/packages/react-reconciler#getcurrenteventpriority\n// Gives React a clue as to how import the current interaction is\nfunction getEventPriority() {\n  var _globalScope$event;\n  // Get a handle to the current global scope in window and worker contexts if able\n  // https://github.com/pmndrs/react-three-fiber/pull/2493\n  const globalScope = typeof self !== 'undefined' && self || typeof window !== 'undefined' && window;\n  if (!globalScope) return react_reconciler_constants__WEBPACK_IMPORTED_MODULE_1__.DefaultEventPriority;\n  const name = (_globalScope$event = globalScope.event) == null ? void 0 : _globalScope$event.type;\n  switch (name) {\n    case 'click':\n    case 'contextmenu':\n    case 'dblclick':\n    case 'pointercancel':\n    case 'pointerdown':\n    case 'pointerup':\n      return react_reconciler_constants__WEBPACK_IMPORTED_MODULE_1__.DiscreteEventPriority;\n    case 'pointermove':\n    case 'pointerout':\n    case 'pointerover':\n    case 'pointerenter':\n    case 'pointerleave':\n    case 'wheel':\n      return react_reconciler_constants__WEBPACK_IMPORTED_MODULE_1__.ContinuousEventPriority;\n    default:\n      return react_reconciler_constants__WEBPACK_IMPORTED_MODULE_1__.DefaultEventPriority;\n  }\n}\n\n/**\r\n * Release pointer captures.\r\n * This is called by releasePointerCapture in the API, and when an object is removed.\r\n */\nfunction releaseInternalPointerCapture(capturedMap, obj, captures, pointerId) {\n  const captureData = captures.get(obj);\n  if (captureData) {\n    captures.delete(obj);\n    // If this was the last capturing object for this pointer\n    if (captures.size === 0) {\n      capturedMap.delete(pointerId);\n      captureData.target.releasePointerCapture(pointerId);\n    }\n  }\n}\nfunction removeInteractivity(store, object) {\n  const {\n    internal\n  } = store.getState();\n  // Removes every trace of an object from the data store\n  internal.interaction = internal.interaction.filter(o => o !== object);\n  internal.initialHits = internal.initialHits.filter(o => o !== object);\n  internal.hovered.forEach((value, key) => {\n    if (value.eventObject === object || value.object === object) {\n      // Clear out intersects, they are outdated by now\n      internal.hovered.delete(key);\n    }\n  });\n  internal.capturedMap.forEach((captures, pointerId) => {\n    releaseInternalPointerCapture(internal.capturedMap, object, captures, pointerId);\n  });\n}\nfunction createEvents(store) {\n  /** Calculates delta */\n  function calculateDistance(event) {\n    const {\n      internal\n    } = store.getState();\n    const dx = event.offsetX - internal.initialClick[0];\n    const dy = event.offsetY - internal.initialClick[1];\n    return Math.round(Math.sqrt(dx * dx + dy * dy));\n  }\n\n  /** Returns true if an instance has a valid pointer-event registered, this excludes scroll, clicks etc */\n  function filterPointerEvents(objects) {\n    return objects.filter(obj => ['Move', 'Over', 'Enter', 'Out', 'Leave'].some(name => {\n      var _r3f;\n      return (_r3f = obj.__r3f) == null ? void 0 : _r3f.handlers['onPointer' + name];\n    }));\n  }\n  function intersect(event, filter) {\n    const state = store.getState();\n    const duplicates = new Set();\n    const intersections = [];\n    // Allow callers to eliminate event objects\n    const eventsObjects = filter ? filter(state.internal.interaction) : state.internal.interaction;\n    // Reset all raycaster cameras to undefined\n    for (let i = 0; i < eventsObjects.length; i++) {\n      const state = getRootState(eventsObjects[i]);\n      if (state) {\n        state.raycaster.camera = undefined;\n      }\n    }\n    if (!state.previousRoot) {\n      // Make sure root-level pointer and ray are set up\n      state.events.compute == null ? void 0 : state.events.compute(event, state);\n    }\n    function handleRaycast(obj) {\n      const state = getRootState(obj);\n      // Skip event handling when noEvents is set, or when the raycasters camera is null\n      if (!state || !state.events.enabled || state.raycaster.camera === null) return [];\n\n      // When the camera is undefined we have to call the event layers update function\n      if (state.raycaster.camera === undefined) {\n        var _state$previousRoot;\n        state.events.compute == null ? void 0 : state.events.compute(event, state, (_state$previousRoot = state.previousRoot) == null ? void 0 : _state$previousRoot.getState());\n        // If the camera is still undefined we have to skip this layer entirely\n        if (state.raycaster.camera === undefined) state.raycaster.camera = null;\n      }\n\n      // Intersect object by object\n      return state.raycaster.camera ? state.raycaster.intersectObject(obj, true) : [];\n    }\n\n    // Collect events\n    let hits = eventsObjects\n    // Intersect objects\n    .flatMap(handleRaycast)\n    // Sort by event priority and distance\n    .sort((a, b) => {\n      const aState = getRootState(a.object);\n      const bState = getRootState(b.object);\n      if (!aState || !bState) return a.distance - b.distance;\n      return bState.events.priority - aState.events.priority || a.distance - b.distance;\n    })\n    // Filter out duplicates\n    .filter(item => {\n      const id = makeId(item);\n      if (duplicates.has(id)) return false;\n      duplicates.add(id);\n      return true;\n    });\n\n    // https://github.com/mrdoob/three.js/issues/16031\n    // Allow custom userland intersect sort order, this likely only makes sense on the root filter\n    if (state.events.filter) hits = state.events.filter(hits, state);\n\n    // Bubble up the events, find the event source (eventObject)\n    for (const hit of hits) {\n      let eventObject = hit.object;\n      // Bubble event up\n      while (eventObject) {\n        var _r3f2;\n        if ((_r3f2 = eventObject.__r3f) != null && _r3f2.eventCount) intersections.push({\n          ...hit,\n          eventObject\n        });\n        eventObject = eventObject.parent;\n      }\n    }\n\n    // If the interaction is captured, make all capturing targets part of the intersect.\n    if ('pointerId' in event && state.internal.capturedMap.has(event.pointerId)) {\n      for (let captureData of state.internal.capturedMap.get(event.pointerId).values()) {\n        if (!duplicates.has(makeId(captureData.intersection))) intersections.push(captureData.intersection);\n      }\n    }\n    return intersections;\n  }\n\n  /**  Handles intersections by forwarding them to handlers */\n  function handleIntersects(intersections, event, delta, callback) {\n    const rootState = store.getState();\n\n    // If anything has been found, forward it to the event listeners\n    if (intersections.length) {\n      const localState = {\n        stopped: false\n      };\n      for (const hit of intersections) {\n        const state = getRootState(hit.object) || rootState;\n        const {\n          raycaster,\n          pointer,\n          camera,\n          internal\n        } = state;\n        const unprojectedPoint = new three__WEBPACK_IMPORTED_MODULE_5__.Vector3(pointer.x, pointer.y, 0).unproject(camera);\n        const hasPointerCapture = id => {\n          var _internal$capturedMap, _internal$capturedMap2;\n          return (_internal$capturedMap = (_internal$capturedMap2 = internal.capturedMap.get(id)) == null ? void 0 : _internal$capturedMap2.has(hit.eventObject)) != null ? _internal$capturedMap : false;\n        };\n        const setPointerCapture = id => {\n          const captureData = {\n            intersection: hit,\n            target: event.target\n          };\n          if (internal.capturedMap.has(id)) {\n            // if the pointerId was previously captured, we add the hit to the\n            // event capturedMap.\n            internal.capturedMap.get(id).set(hit.eventObject, captureData);\n          } else {\n            // if the pointerId was not previously captured, we create a map\n            // containing the hitObject, and the hit. hitObject is used for\n            // faster access.\n            internal.capturedMap.set(id, new Map([[hit.eventObject, captureData]]));\n          }\n          event.target.setPointerCapture(id);\n        };\n        const releasePointerCapture = id => {\n          const captures = internal.capturedMap.get(id);\n          if (captures) {\n            releaseInternalPointerCapture(internal.capturedMap, hit.eventObject, captures, id);\n          }\n        };\n\n        // Add native event props\n        let extractEventProps = {};\n        // This iterates over the event's properties including the inherited ones. Native PointerEvents have most of their props as getters which are inherited, but polyfilled PointerEvents have them all as their own properties (i.e. not inherited). We can't use Object.keys() or Object.entries() as they only return \"own\" properties; nor Object.getPrototypeOf(event) as that *doesn't* return \"own\" properties, only inherited ones.\n        for (let prop in event) {\n          let property = event[prop];\n          // Only copy over atomics, leave functions alone as these should be\n          // called as event.nativeEvent.fn()\n          if (typeof property !== 'function') extractEventProps[prop] = property;\n        }\n        let raycastEvent = {\n          ...hit,\n          ...extractEventProps,\n          pointer,\n          intersections,\n          stopped: localState.stopped,\n          delta,\n          unprojectedPoint,\n          ray: raycaster.ray,\n          camera: camera,\n          // Hijack stopPropagation, which just sets a flag\n          stopPropagation() {\n            // https://github.com/pmndrs/react-three-fiber/issues/596\n            // Events are not allowed to stop propagation if the pointer has been captured\n            const capturesForPointer = 'pointerId' in event && internal.capturedMap.get(event.pointerId);\n\n            // We only authorize stopPropagation...\n            if (\n            // ...if this pointer hasn't been captured\n            !capturesForPointer ||\n            // ... or if the hit object is capturing the pointer\n            capturesForPointer.has(hit.eventObject)) {\n              raycastEvent.stopped = localState.stopped = true;\n              // Propagation is stopped, remove all other hover records\n              // An event handler is only allowed to flush other handlers if it is hovered itself\n              if (internal.hovered.size && Array.from(internal.hovered.values()).find(i => i.eventObject === hit.eventObject)) {\n                // Objects cannot flush out higher up objects that have already caught the event\n                const higher = intersections.slice(0, intersections.indexOf(hit));\n                cancelPointer([...higher, hit]);\n              }\n            }\n          },\n          // there should be a distinction between target and currentTarget\n          target: {\n            hasPointerCapture,\n            setPointerCapture,\n            releasePointerCapture\n          },\n          currentTarget: {\n            hasPointerCapture,\n            setPointerCapture,\n            releasePointerCapture\n          },\n          nativeEvent: event\n        };\n\n        // Call subscribers\n        callback(raycastEvent);\n        // Event bubbling may be interrupted by stopPropagation\n        if (localState.stopped === true) break;\n      }\n    }\n    return intersections;\n  }\n  function cancelPointer(intersections) {\n    const {\n      internal\n    } = store.getState();\n    for (const hoveredObj of internal.hovered.values()) {\n      // When no objects were hit or the the hovered object wasn't found underneath the cursor\n      // we call onPointerOut and delete the object from the hovered-elements map\n      if (!intersections.length || !intersections.find(hit => hit.object === hoveredObj.object && hit.index === hoveredObj.index && hit.instanceId === hoveredObj.instanceId)) {\n        const eventObject = hoveredObj.eventObject;\n        const instance = eventObject.__r3f;\n        const handlers = instance == null ? void 0 : instance.handlers;\n        internal.hovered.delete(makeId(hoveredObj));\n        if (instance != null && instance.eventCount) {\n          // Clear out intersects, they are outdated by now\n          const data = {\n            ...hoveredObj,\n            intersections\n          };\n          handlers.onPointerOut == null ? void 0 : handlers.onPointerOut(data);\n          handlers.onPointerLeave == null ? void 0 : handlers.onPointerLeave(data);\n        }\n      }\n    }\n  }\n  function pointerMissed(event, objects) {\n    for (let i = 0; i < objects.length; i++) {\n      const instance = objects[i].__r3f;\n      instance == null ? void 0 : instance.handlers.onPointerMissed == null ? void 0 : instance.handlers.onPointerMissed(event);\n    }\n  }\n  function handlePointer(name) {\n    // Deal with cancelation\n    switch (name) {\n      case 'onPointerLeave':\n      case 'onPointerCancel':\n        return () => cancelPointer([]);\n      case 'onLostPointerCapture':\n        return event => {\n          const {\n            internal\n          } = store.getState();\n          if ('pointerId' in event && internal.capturedMap.has(event.pointerId)) {\n            // If the object event interface had onLostPointerCapture, we'd call it here on every\n            // object that's getting removed. We call it on the next frame because onLostPointerCapture\n            // fires before onPointerUp. Otherwise pointerUp would never be called if the event didn't\n            // happen in the object it originated from, leaving components in a in-between state.\n            requestAnimationFrame(() => {\n              // Only release if pointer-up didn't do it already\n              if (internal.capturedMap.has(event.pointerId)) {\n                internal.capturedMap.delete(event.pointerId);\n                cancelPointer([]);\n              }\n            });\n          }\n        };\n    }\n\n    // Any other pointer goes here ...\n    return function handleEvent(event) {\n      const {\n        onPointerMissed,\n        internal\n      } = store.getState();\n\n      // prepareRay(event)\n      internal.lastEvent.current = event;\n\n      // Get fresh intersects\n      const isPointerMove = name === 'onPointerMove';\n      const isClickEvent = name === 'onClick' || name === 'onContextMenu' || name === 'onDoubleClick';\n      const filter = isPointerMove ? filterPointerEvents : undefined;\n      const hits = intersect(event, filter);\n      const delta = isClickEvent ? calculateDistance(event) : 0;\n\n      // Save initial coordinates on pointer-down\n      if (name === 'onPointerDown') {\n        internal.initialClick = [event.offsetX, event.offsetY];\n        internal.initialHits = hits.map(hit => hit.eventObject);\n      }\n\n      // If a click yields no results, pass it back to the user as a miss\n      // Missed events have to come first in order to establish user-land side-effect clean up\n      if (isClickEvent && !hits.length) {\n        if (delta <= 2) {\n          pointerMissed(event, internal.interaction);\n          if (onPointerMissed) onPointerMissed(event);\n        }\n      }\n      // Take care of unhover\n      if (isPointerMove) cancelPointer(hits);\n      function onIntersect(data) {\n        const eventObject = data.eventObject;\n        const instance = eventObject.__r3f;\n        const handlers = instance == null ? void 0 : instance.handlers;\n\n        // Check presence of handlers\n        if (!(instance != null && instance.eventCount)) return;\n\n        /*\r\n        MAYBE TODO, DELETE IF NOT: \r\n          Check if the object is captured, captured events should not have intersects running in parallel\r\n          But wouldn't it be better to just replace capturedMap with a single entry?\r\n          Also, are we OK with straight up making picking up multiple objects impossible?\r\n          \r\n        const pointerId = (data as ThreeEvent<PointerEvent>).pointerId        \r\n        if (pointerId !== undefined) {\r\n          const capturedMeshSet = internal.capturedMap.get(pointerId)\r\n          if (capturedMeshSet) {\r\n            const captured = capturedMeshSet.get(eventObject)\r\n            if (captured && captured.localState.stopped) return\r\n          }\r\n        }*/\n\n        if (isPointerMove) {\n          // Move event ...\n          if (handlers.onPointerOver || handlers.onPointerEnter || handlers.onPointerOut || handlers.onPointerLeave) {\n            // When enter or out is present take care of hover-state\n            const id = makeId(data);\n            const hoveredItem = internal.hovered.get(id);\n            if (!hoveredItem) {\n              // If the object wasn't previously hovered, book it and call its handler\n              internal.hovered.set(id, data);\n              handlers.onPointerOver == null ? void 0 : handlers.onPointerOver(data);\n              handlers.onPointerEnter == null ? void 0 : handlers.onPointerEnter(data);\n            } else if (hoveredItem.stopped) {\n              // If the object was previously hovered and stopped, we shouldn't allow other items to proceed\n              data.stopPropagation();\n            }\n          }\n          // Call mouse move\n          handlers.onPointerMove == null ? void 0 : handlers.onPointerMove(data);\n        } else {\n          // All other events ...\n          const handler = handlers[name];\n          if (handler) {\n            // Forward all events back to their respective handlers with the exception of click events,\n            // which must use the initial target\n            if (!isClickEvent || internal.initialHits.includes(eventObject)) {\n              // Missed events have to come first\n              pointerMissed(event, internal.interaction.filter(object => !internal.initialHits.includes(object)));\n              // Now call the handler\n              handler(data);\n            }\n          } else {\n            // Trigger onPointerMissed on all elements that have pointer over/out handlers, but not click and weren't hit\n            if (isClickEvent && internal.initialHits.includes(eventObject)) {\n              pointerMissed(event, internal.interaction.filter(object => !internal.initialHits.includes(object)));\n            }\n          }\n        }\n      }\n      handleIntersects(hits, event, delta, onIntersect);\n    };\n  }\n  return {\n    handlePointer\n  };\n}\n\n// Keys that shouldn't be copied between R3F stores\nconst privateKeys = ['set', 'get', 'setSize', 'setFrameloop', 'setDpr', 'events', 'invalidate', 'advance', 'size', 'viewport'];\nconst isRenderer = def => !!(def != null && def.render);\nconst context = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst createStore = (invalidate, advance) => {\n  const rootState = (0,zustand__WEBPACK_IMPORTED_MODULE_6__[\"default\"])((set, get) => {\n    const position = new three__WEBPACK_IMPORTED_MODULE_5__.Vector3();\n    const defaultTarget = new three__WEBPACK_IMPORTED_MODULE_5__.Vector3();\n    const tempTarget = new three__WEBPACK_IMPORTED_MODULE_5__.Vector3();\n    function getCurrentViewport(camera = get().camera, target = defaultTarget, size = get().size) {\n      const {\n        width,\n        height,\n        top,\n        left\n      } = size;\n      const aspect = width / height;\n      if (target instanceof three__WEBPACK_IMPORTED_MODULE_5__.Vector3) tempTarget.copy(target);else tempTarget.set(...target);\n      const distance = camera.getWorldPosition(position).distanceTo(tempTarget);\n      if (isOrthographicCamera(camera)) {\n        return {\n          width: width / camera.zoom,\n          height: height / camera.zoom,\n          top,\n          left,\n          factor: 1,\n          distance,\n          aspect\n        };\n      } else {\n        const fov = camera.fov * Math.PI / 180; // convert vertical fov to radians\n        const h = 2 * Math.tan(fov / 2) * distance; // visible height\n        const w = h * (width / height);\n        return {\n          width: w,\n          height: h,\n          top,\n          left,\n          factor: width / w,\n          distance,\n          aspect\n        };\n      }\n    }\n    let performanceTimeout = undefined;\n    const setPerformanceCurrent = current => set(state => ({\n      performance: {\n        ...state.performance,\n        current\n      }\n    }));\n    const pointer = new three__WEBPACK_IMPORTED_MODULE_5__.Vector2();\n    const rootState = {\n      set,\n      get,\n      // Mock objects that have to be configured\n      gl: null,\n      camera: null,\n      raycaster: null,\n      events: {\n        priority: 1,\n        enabled: true,\n        connected: false\n      },\n      xr: null,\n      scene: null,\n      invalidate: (frames = 1) => invalidate(get(), frames),\n      advance: (timestamp, runGlobalEffects) => advance(timestamp, runGlobalEffects, get()),\n      legacy: false,\n      linear: false,\n      flat: false,\n      controls: null,\n      clock: new three__WEBPACK_IMPORTED_MODULE_5__.Clock(),\n      pointer,\n      mouse: pointer,\n      frameloop: 'always',\n      onPointerMissed: undefined,\n      performance: {\n        current: 1,\n        min: 0.5,\n        max: 1,\n        debounce: 200,\n        regress: () => {\n          const state = get();\n          // Clear timeout\n          if (performanceTimeout) clearTimeout(performanceTimeout);\n          // Set lower bound performance\n          if (state.performance.current !== state.performance.min) setPerformanceCurrent(state.performance.min);\n          // Go back to upper bound performance after a while unless something regresses meanwhile\n          performanceTimeout = setTimeout(() => setPerformanceCurrent(get().performance.max), state.performance.debounce);\n        }\n      },\n      size: {\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        updateStyle: false\n      },\n      viewport: {\n        initialDpr: 0,\n        dpr: 0,\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        aspect: 0,\n        distance: 0,\n        factor: 0,\n        getCurrentViewport\n      },\n      setEvents: events => set(state => ({\n        ...state,\n        events: {\n          ...state.events,\n          ...events\n        }\n      })),\n      setSize: (width, height, updateStyle, top, left) => {\n        const camera = get().camera;\n        const size = {\n          width,\n          height,\n          top: top || 0,\n          left: left || 0,\n          updateStyle\n        };\n        set(state => ({\n          size,\n          viewport: {\n            ...state.viewport,\n            ...getCurrentViewport(camera, defaultTarget, size)\n          }\n        }));\n      },\n      setDpr: dpr => set(state => {\n        const resolved = calculateDpr(dpr);\n        return {\n          viewport: {\n            ...state.viewport,\n            dpr: resolved,\n            initialDpr: state.viewport.initialDpr || resolved\n          }\n        };\n      }),\n      setFrameloop: (frameloop = 'always') => {\n        const clock = get().clock;\n\n        // if frameloop === \"never\" clock.elapsedTime is updated using advance(timestamp)\n        clock.stop();\n        clock.elapsedTime = 0;\n        if (frameloop !== 'never') {\n          clock.start();\n          clock.elapsedTime = 0;\n        }\n        set(() => ({\n          frameloop\n        }));\n      },\n      previousRoot: undefined,\n      internal: {\n        active: false,\n        priority: 0,\n        frames: 0,\n        lastEvent: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createRef(),\n        interaction: [],\n        hovered: new Map(),\n        subscribers: [],\n        initialClick: [0, 0],\n        initialHits: [],\n        capturedMap: new Map(),\n        subscribe: (ref, priority, store) => {\n          const internal = get().internal;\n          // If this subscription was given a priority, it takes rendering into its own hands\n          // For that reason we switch off automatic rendering and increase the manual flag\n          // As long as this flag is positive there can be no internal rendering at all\n          // because there could be multiple render subscriptions\n          internal.priority = internal.priority + (priority > 0 ? 1 : 0);\n          internal.subscribers.push({\n            ref,\n            priority,\n            store\n          });\n          // Register subscriber and sort layers from lowest to highest, meaning,\n          // highest priority renders last (on top of the other frames)\n          internal.subscribers = internal.subscribers.sort((a, b) => a.priority - b.priority);\n          return () => {\n            const internal = get().internal;\n            if (internal != null && internal.subscribers) {\n              // Decrease manual flag if this subscription had a priority\n              internal.priority = internal.priority - (priority > 0 ? 1 : 0);\n              // Remove subscriber from list\n              internal.subscribers = internal.subscribers.filter(s => s.ref !== ref);\n            }\n          };\n        }\n      }\n    };\n    return rootState;\n  });\n  const state = rootState.getState();\n  let oldSize = state.size;\n  let oldDpr = state.viewport.dpr;\n  let oldCamera = state.camera;\n  rootState.subscribe(() => {\n    const {\n      camera,\n      size,\n      viewport,\n      gl,\n      set\n    } = rootState.getState();\n\n    // Resize camera and renderer on changes to size and pixelratio\n    if (size.width !== oldSize.width || size.height !== oldSize.height || viewport.dpr !== oldDpr) {\n      var _size$updateStyle;\n      oldSize = size;\n      oldDpr = viewport.dpr;\n      // Update camera & renderer\n      updateCamera(camera, size);\n      gl.setPixelRatio(viewport.dpr);\n      const updateStyle = (_size$updateStyle = size.updateStyle) != null ? _size$updateStyle : typeof HTMLCanvasElement !== 'undefined' && gl.domElement instanceof HTMLCanvasElement;\n      gl.setSize(size.width, size.height, updateStyle);\n    }\n\n    // Update viewport once the camera changes\n    if (camera !== oldCamera) {\n      oldCamera = camera;\n      // Update viewport\n      set(state => ({\n        viewport: {\n          ...state.viewport,\n          ...state.viewport.getCurrentViewport(camera)\n        }\n      }));\n    }\n  });\n\n  // Invalidate on any change\n  rootState.subscribe(state => invalidate(state));\n\n  // Return root state\n  return rootState;\n};\n\nfunction createSubs(callback, subs) {\n  const sub = {\n    callback\n  };\n  subs.add(sub);\n  return () => void subs.delete(sub);\n}\nlet i;\nlet globalEffects = new Set();\nlet globalAfterEffects = new Set();\nlet globalTailEffects = new Set();\n\n/**\r\n * Adds a global render callback which is called each frame.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#addEffect\r\n */\nconst addEffect = callback => createSubs(callback, globalEffects);\n\n/**\r\n * Adds a global after-render callback which is called each frame.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#addAfterEffect\r\n */\nconst addAfterEffect = callback => createSubs(callback, globalAfterEffects);\n\n/**\r\n * Adds a global callback which is called when rendering stops.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#addTail\r\n */\nconst addTail = callback => createSubs(callback, globalTailEffects);\nfunction run(effects, timestamp) {\n  if (!effects.size) return;\n  for (const {\n    callback\n  } of effects.values()) {\n    callback(timestamp);\n  }\n}\nfunction flushGlobalEffects(type, timestamp) {\n  switch (type) {\n    case 'before':\n      return run(globalEffects, timestamp);\n    case 'after':\n      return run(globalAfterEffects, timestamp);\n    case 'tail':\n      return run(globalTailEffects, timestamp);\n  }\n}\nlet subscribers;\nlet subscription;\nfunction render$1(timestamp, state, frame) {\n  // Run local effects\n  let delta = state.clock.getDelta();\n  // In frameloop='never' mode, clock times are updated using the provided timestamp\n  if (state.frameloop === 'never' && typeof timestamp === 'number') {\n    delta = timestamp - state.clock.elapsedTime;\n    state.clock.oldTime = state.clock.elapsedTime;\n    state.clock.elapsedTime = timestamp;\n  }\n  // Call subscribers (useFrame)\n  subscribers = state.internal.subscribers;\n  for (i = 0; i < subscribers.length; i++) {\n    subscription = subscribers[i];\n    subscription.ref.current(subscription.store.getState(), delta, frame);\n  }\n  // Render content\n  if (!state.internal.priority && state.gl.render) state.gl.render(state.scene, state.camera);\n  // Decrease frame count\n  state.internal.frames = Math.max(0, state.internal.frames - 1);\n  return state.frameloop === 'always' ? 1 : state.internal.frames;\n}\nfunction createLoop(roots) {\n  let running = false;\n  let useFrameInProgress = false;\n  let repeat;\n  let frame;\n  let state;\n  function loop(timestamp) {\n    frame = requestAnimationFrame(loop);\n    running = true;\n    repeat = 0;\n\n    // Run effects\n    flushGlobalEffects('before', timestamp);\n\n    // Render all roots\n    useFrameInProgress = true;\n    for (const root of roots.values()) {\n      var _state$gl$xr;\n      state = root.store.getState();\n      // If the frameloop is invalidated, do not run another frame\n      if (state.internal.active && (state.frameloop === 'always' || state.internal.frames > 0) && !((_state$gl$xr = state.gl.xr) != null && _state$gl$xr.isPresenting)) {\n        repeat += render$1(timestamp, state);\n      }\n    }\n    useFrameInProgress = false;\n\n    // Run after-effects\n    flushGlobalEffects('after', timestamp);\n\n    // Stop the loop if nothing invalidates it\n    if (repeat === 0) {\n      // Tail call effects, they are called when rendering stops\n      flushGlobalEffects('tail', timestamp);\n\n      // Flag end of operation\n      running = false;\n      return cancelAnimationFrame(frame);\n    }\n  }\n  function invalidate(state, frames = 1) {\n    var _state$gl$xr2;\n    if (!state) return roots.forEach(root => invalidate(root.store.getState(), frames));\n    if ((_state$gl$xr2 = state.gl.xr) != null && _state$gl$xr2.isPresenting || !state.internal.active || state.frameloop === 'never') return;\n    if (frames > 1) {\n      // legacy support for people using frames parameters\n      // Increase frames, do not go higher than 60\n      state.internal.frames = Math.min(60, state.internal.frames + frames);\n    } else {\n      if (useFrameInProgress) {\n        //called from within a useFrame, it means the user wants an additional frame\n        state.internal.frames = 2;\n      } else {\n        //the user need a new frame, no need to increment further than 1\n        state.internal.frames = 1;\n      }\n    }\n\n    // If the render-loop isn't active, start it\n    if (!running) {\n      running = true;\n      requestAnimationFrame(loop);\n    }\n  }\n  function advance(timestamp, runGlobalEffects = true, state, frame) {\n    if (runGlobalEffects) flushGlobalEffects('before', timestamp);\n    if (!state) for (const root of roots.values()) render$1(timestamp, root.store.getState());else render$1(timestamp, state, frame);\n    if (runGlobalEffects) flushGlobalEffects('after', timestamp);\n  }\n  return {\n    loop,\n    invalidate,\n    advance\n  };\n}\n\n/**\r\n * Exposes an object's {@link LocalState}.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#useInstanceHandle\r\n *\r\n * **Note**: this is an escape hatch to react-internal fields. Expect this to change significantly between versions.\r\n */\nfunction useInstanceHandle(ref) {\n  const instance = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  useIsomorphicLayoutEffect(() => void (instance.current = ref.current.__r3f), [ref]);\n  return instance;\n}\nfunction useStore() {\n  const store = react__WEBPACK_IMPORTED_MODULE_0__.useContext(context);\n  if (!store) throw new Error('R3F: Hooks can only be used within the Canvas component!');\n  return store;\n}\n\n/**\r\n * Accesses R3F's internal state, containing renderer, canvas, scene, etc.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#usethree\r\n */\nfunction useThree(selector = state => state, equalityFn) {\n  return useStore()(selector, equalityFn);\n}\n\n/**\r\n * Executes a callback before render in a shared frame loop.\r\n * Can order effects with render priority or manually render with a positive priority.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#useframe\r\n */\nfunction useFrame(callback, renderPriority = 0) {\n  const store = useStore();\n  const subscribe = store.getState().internal.subscribe;\n  // Memoize ref\n  const ref = useMutableCallback(callback);\n  // Subscribe on mount, unsubscribe on unmount\n  useIsomorphicLayoutEffect(() => subscribe(ref, renderPriority, store), [renderPriority, subscribe, store]);\n  return null;\n}\n\n/**\r\n * Returns a node graph of an object with named nodes & materials.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#usegraph\r\n */\nfunction useGraph(object) {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => buildGraph(object), [object]);\n}\nconst memoizedLoaders = new WeakMap();\nfunction loadingFn(extensions, onProgress) {\n  return function (Proto, ...input) {\n    // Construct new loader and run extensions\n    let loader = memoizedLoaders.get(Proto);\n    if (!loader) {\n      loader = new Proto();\n      memoizedLoaders.set(Proto, loader);\n    }\n    if (extensions) extensions(loader);\n    // Go through the urls and load them\n    return Promise.all(input.map(input => new Promise((res, reject) => loader.load(input, data => {\n      if (data.scene) Object.assign(data, buildGraph(data.scene));\n      res(data);\n    }, onProgress, error => reject(new Error(`Could not load ${input}: ${error == null ? void 0 : error.message}`))))));\n  };\n}\n/**\r\n * Synchronously loads and caches assets with a three loader.\r\n *\r\n * Note: this hook's caller must be wrapped with `React.Suspense`\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#useloader\r\n */\nfunction useLoader(Proto, input, extensions, onProgress) {\n  // Use suspense to load async assets\n  const keys = Array.isArray(input) ? input : [input];\n  const results = (0,suspend_react__WEBPACK_IMPORTED_MODULE_7__.suspend)(loadingFn(extensions, onProgress), [Proto, ...keys], {\n    equal: is.equ\n  });\n  // Return the object/s\n  return Array.isArray(input) ? results : results[0];\n}\n\n/**\r\n * Preloads an asset into cache as a side-effect.\r\n */\nuseLoader.preload = function (Proto, input, extensions) {\n  const keys = Array.isArray(input) ? input : [input];\n  return (0,suspend_react__WEBPACK_IMPORTED_MODULE_7__.preload)(loadingFn(extensions), [Proto, ...keys]);\n};\n\n/**\r\n * Removes a loaded asset from cache.\r\n */\nuseLoader.clear = function (Proto, input) {\n  const keys = Array.isArray(input) ? input : [input];\n  return (0,suspend_react__WEBPACK_IMPORTED_MODULE_7__.clear)([Proto, ...keys]);\n};\n\nconst roots = new Map();\nconst {\n  invalidate,\n  advance\n} = createLoop(roots);\nconst {\n  reconciler,\n  applyProps\n} = createRenderer(roots, getEventPriority);\nconst shallowLoose = {\n  objects: 'shallow',\n  strict: false\n};\nconst createRendererInstance = (gl, canvas) => {\n  const customRenderer = typeof gl === 'function' ? gl(canvas) : gl;\n  if (isRenderer(customRenderer)) return customRenderer;else return new three__WEBPACK_IMPORTED_MODULE_5__.WebGLRenderer({\n    powerPreference: 'high-performance',\n    canvas: canvas,\n    antialias: true,\n    alpha: true,\n    ...gl\n  });\n};\nfunction computeInitialSize(canvas, defaultSize) {\n  const defaultStyle = typeof HTMLCanvasElement !== 'undefined' && canvas instanceof HTMLCanvasElement;\n  if (defaultSize) {\n    const {\n      width,\n      height,\n      top,\n      left,\n      updateStyle = defaultStyle\n    } = defaultSize;\n    return {\n      width,\n      height,\n      top,\n      left,\n      updateStyle\n    };\n  } else if (typeof HTMLCanvasElement !== 'undefined' && canvas instanceof HTMLCanvasElement && canvas.parentElement) {\n    const {\n      width,\n      height,\n      top,\n      left\n    } = canvas.parentElement.getBoundingClientRect();\n    return {\n      width,\n      height,\n      top,\n      left,\n      updateStyle: defaultStyle\n    };\n  } else if (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return {\n      width: canvas.width,\n      height: canvas.height,\n      top: 0,\n      left: 0,\n      updateStyle: defaultStyle\n    };\n  }\n  return {\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0\n  };\n}\nfunction createRoot(canvas) {\n  // Check against mistaken use of createRoot\n  const prevRoot = roots.get(canvas);\n  const prevFiber = prevRoot == null ? void 0 : prevRoot.fiber;\n  const prevStore = prevRoot == null ? void 0 : prevRoot.store;\n  if (prevRoot) console.warn('R3F.createRoot should only be called once!');\n\n  // Report when an error was detected in a previous render\n  // https://github.com/pmndrs/react-three-fiber/pull/2261\n  const logRecoverableError = typeof reportError === 'function' ?\n  // In modern browsers, reportError will dispatch an error event,\n  // emulating an uncaught JavaScript error.\n  reportError :\n  // In older browsers and test environments, fallback to console.error.\n  console.error;\n\n  // Create store\n  const store = prevStore || createStore(invalidate, advance);\n  // Create renderer\n  const fiber = prevFiber || reconciler.createContainer(store, react_reconciler_constants__WEBPACK_IMPORTED_MODULE_1__.ConcurrentRoot, null, false, null, '', logRecoverableError, null);\n  // Map it\n  if (!prevRoot) roots.set(canvas, {\n    fiber,\n    store\n  });\n\n  // Locals\n  let onCreated;\n  let configured = false;\n  let lastCamera;\n  return {\n    configure(props = {}) {\n      let {\n        gl: glConfig,\n        size: propsSize,\n        scene: sceneOptions,\n        events,\n        onCreated: onCreatedCallback,\n        shadows = false,\n        linear = false,\n        flat = false,\n        legacy = false,\n        orthographic = false,\n        frameloop = 'always',\n        dpr = [1, 2],\n        performance,\n        raycaster: raycastOptions,\n        camera: cameraOptions,\n        onPointerMissed\n      } = props;\n      let state = store.getState();\n\n      // Set up renderer (one time only!)\n      let gl = state.gl;\n      if (!state.gl) state.set({\n        gl: gl = createRendererInstance(glConfig, canvas)\n      });\n\n      // Set up raycaster (one time only!)\n      let raycaster = state.raycaster;\n      if (!raycaster) state.set({\n        raycaster: raycaster = new three__WEBPACK_IMPORTED_MODULE_5__.Raycaster()\n      });\n\n      // Set raycaster options\n      const {\n        params,\n        ...options\n      } = raycastOptions || {};\n      if (!is.equ(options, raycaster, shallowLoose)) applyProps(raycaster, {\n        ...options\n      });\n      if (!is.equ(params, raycaster.params, shallowLoose)) applyProps(raycaster, {\n        params: {\n          ...raycaster.params,\n          ...params\n        }\n      });\n\n      // Create default camera, don't overwrite any user-set state\n      if (!state.camera || state.camera === lastCamera && !is.equ(lastCamera, cameraOptions, shallowLoose)) {\n        lastCamera = cameraOptions;\n        const isCamera = cameraOptions instanceof three__WEBPACK_IMPORTED_MODULE_5__.Camera;\n        const camera = isCamera ? cameraOptions : orthographic ? new three__WEBPACK_IMPORTED_MODULE_5__.OrthographicCamera(0, 0, 0, 0, 0.1, 1000) : new three__WEBPACK_IMPORTED_MODULE_5__.PerspectiveCamera(75, 0, 0.1, 1000);\n        if (!isCamera) {\n          camera.position.z = 5;\n          if (cameraOptions) {\n            applyProps(camera, cameraOptions);\n            // Preserve user-defined frustum if possible\n            // https://github.com/pmndrs/react-three-fiber/issues/3160\n            if ('aspect' in cameraOptions || 'left' in cameraOptions || 'right' in cameraOptions || 'bottom' in cameraOptions || 'top' in cameraOptions) {\n              camera.manual = true;\n              camera.updateProjectionMatrix();\n            }\n          }\n          // Always look at center by default\n          if (!state.camera && !(cameraOptions != null && cameraOptions.rotation)) camera.lookAt(0, 0, 0);\n        }\n        state.set({\n          camera\n        });\n\n        // Configure raycaster\n        // https://github.com/pmndrs/react-xr/issues/300\n        raycaster.camera = camera;\n      }\n\n      // Set up scene (one time only!)\n      if (!state.scene) {\n        let scene;\n        if (sceneOptions instanceof three__WEBPACK_IMPORTED_MODULE_5__.Scene) {\n          scene = sceneOptions;\n        } else {\n          scene = new three__WEBPACK_IMPORTED_MODULE_5__.Scene();\n          if (sceneOptions) applyProps(scene, sceneOptions);\n        }\n        state.set({\n          scene: prepare(scene)\n        });\n      }\n\n      // Set up XR (one time only!)\n      if (!state.xr) {\n        var _gl$xr;\n        // Handle frame behavior in WebXR\n        const handleXRFrame = (timestamp, frame) => {\n          const state = store.getState();\n          if (state.frameloop === 'never') return;\n          advance(timestamp, true, state, frame);\n        };\n\n        // Toggle render switching on session\n        const handleSessionChange = () => {\n          const state = store.getState();\n          state.gl.xr.enabled = state.gl.xr.isPresenting;\n          state.gl.xr.setAnimationLoop(state.gl.xr.isPresenting ? handleXRFrame : null);\n          if (!state.gl.xr.isPresenting) invalidate(state);\n        };\n\n        // WebXR session manager\n        const xr = {\n          connect() {\n            const gl = store.getState().gl;\n            gl.xr.addEventListener('sessionstart', handleSessionChange);\n            gl.xr.addEventListener('sessionend', handleSessionChange);\n          },\n          disconnect() {\n            const gl = store.getState().gl;\n            gl.xr.removeEventListener('sessionstart', handleSessionChange);\n            gl.xr.removeEventListener('sessionend', handleSessionChange);\n          }\n        };\n\n        // Subscribe to WebXR session events\n        if (typeof ((_gl$xr = gl.xr) == null ? void 0 : _gl$xr.addEventListener) === 'function') xr.connect();\n        state.set({\n          xr\n        });\n      }\n\n      // Set shadowmap\n      if (gl.shadowMap) {\n        const oldEnabled = gl.shadowMap.enabled;\n        const oldType = gl.shadowMap.type;\n        gl.shadowMap.enabled = !!shadows;\n        if (is.boo(shadows)) {\n          gl.shadowMap.type = three__WEBPACK_IMPORTED_MODULE_5__.PCFSoftShadowMap;\n        } else if (is.str(shadows)) {\n          var _types$shadows;\n          const types = {\n            basic: three__WEBPACK_IMPORTED_MODULE_5__.BasicShadowMap,\n            percentage: three__WEBPACK_IMPORTED_MODULE_5__.PCFShadowMap,\n            soft: three__WEBPACK_IMPORTED_MODULE_5__.PCFSoftShadowMap,\n            variance: three__WEBPACK_IMPORTED_MODULE_5__.VSMShadowMap\n          };\n          gl.shadowMap.type = (_types$shadows = types[shadows]) != null ? _types$shadows : three__WEBPACK_IMPORTED_MODULE_5__.PCFSoftShadowMap;\n        } else if (is.obj(shadows)) {\n          Object.assign(gl.shadowMap, shadows);\n        }\n        if (oldEnabled !== gl.shadowMap.enabled || oldType !== gl.shadowMap.type) gl.shadowMap.needsUpdate = true;\n      }\n\n      // Safely set color management if available.\n      // Avoid accessing THREE.ColorManagement to play nice with older versions\n      const ColorManagement = getColorManagement();\n      if (ColorManagement) {\n        if ('enabled' in ColorManagement) ColorManagement.enabled = !legacy;else if ('legacyMode' in ColorManagement) ColorManagement.legacyMode = legacy;\n      }\n      if (!configured) {\n        // Set color space and tonemapping preferences, once\n        const LinearEncoding = 3000;\n        const sRGBEncoding = 3001;\n        applyProps(gl, {\n          outputEncoding: linear ? LinearEncoding : sRGBEncoding,\n          toneMapping: flat ? three__WEBPACK_IMPORTED_MODULE_5__.NoToneMapping : three__WEBPACK_IMPORTED_MODULE_5__.ACESFilmicToneMapping\n        });\n      }\n\n      // Update color management state\n      if (state.legacy !== legacy) state.set(() => ({\n        legacy\n      }));\n      if (state.linear !== linear) state.set(() => ({\n        linear\n      }));\n      if (state.flat !== flat) state.set(() => ({\n        flat\n      }));\n\n      // Set gl props\n      if (glConfig && !is.fun(glConfig) && !isRenderer(glConfig) && !is.equ(glConfig, gl, shallowLoose)) applyProps(gl, glConfig);\n      // Store events internally\n      if (events && !state.events.handlers) state.set({\n        events: events(store)\n      });\n      // Check size, allow it to take on container bounds initially\n      const size = computeInitialSize(canvas, propsSize);\n      if (!is.equ(size, state.size, shallowLoose)) {\n        state.setSize(size.width, size.height, size.updateStyle, size.top, size.left);\n      }\n      // Check pixelratio\n      if (dpr && state.viewport.dpr !== calculateDpr(dpr)) state.setDpr(dpr);\n      // Check frameloop\n      if (state.frameloop !== frameloop) state.setFrameloop(frameloop);\n      // Check pointer missed\n      if (!state.onPointerMissed) state.set({\n        onPointerMissed\n      });\n      // Check performance\n      if (performance && !is.equ(performance, state.performance, shallowLoose)) state.set(state => ({\n        performance: {\n          ...state.performance,\n          ...performance\n        }\n      }));\n\n      // Set locals\n      onCreated = onCreatedCallback;\n      configured = true;\n      return this;\n    },\n    render(children) {\n      // The root has to be configured before it can be rendered\n      if (!configured) this.configure();\n      reconciler.updateContainer( /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(Provider, {\n        store: store,\n        children: children,\n        onCreated: onCreated,\n        rootElement: canvas\n      }), fiber, null, () => undefined);\n      return store;\n    },\n    unmount() {\n      unmountComponentAtNode(canvas);\n    }\n  };\n}\nfunction render(children, canvas, config) {\n  console.warn('R3F.render is no longer supported in React 18. Use createRoot instead!');\n  const root = createRoot(canvas);\n  root.configure(config);\n  return root.render(children);\n}\nfunction Provider({\n  store,\n  children,\n  onCreated,\n  rootElement\n}) {\n  useIsomorphicLayoutEffect(() => {\n    const state = store.getState();\n    // Flag the canvas active, rendering will now begin\n    state.set(state => ({\n      internal: {\n        ...state.internal,\n        active: true\n      }\n    }));\n    // Notifiy that init is completed, the scene graph exists, but nothing has yet rendered\n    if (onCreated) onCreated(state);\n    // Connect events to the targets parent, this is done to ensure events are registered on\n    // a shared target, and not on the canvas itself\n    if (!store.getState().events.connected) state.events.connect == null ? void 0 : state.events.connect(rootElement);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(context.Provider, {\n    value: store,\n    children: children\n  });\n}\nfunction unmountComponentAtNode(canvas, callback) {\n  const root = roots.get(canvas);\n  const fiber = root == null ? void 0 : root.fiber;\n  if (fiber) {\n    const state = root == null ? void 0 : root.store.getState();\n    if (state) state.internal.active = false;\n    reconciler.updateContainer(null, fiber, null, () => {\n      if (state) {\n        setTimeout(() => {\n          try {\n            var _state$gl, _state$gl$renderLists, _state$gl2, _state$gl3;\n            state.events.disconnect == null ? void 0 : state.events.disconnect();\n            (_state$gl = state.gl) == null ? void 0 : (_state$gl$renderLists = _state$gl.renderLists) == null ? void 0 : _state$gl$renderLists.dispose == null ? void 0 : _state$gl$renderLists.dispose();\n            (_state$gl2 = state.gl) == null ? void 0 : _state$gl2.forceContextLoss == null ? void 0 : _state$gl2.forceContextLoss();\n            if ((_state$gl3 = state.gl) != null && _state$gl3.xr) state.xr.disconnect();\n            dispose(state);\n            roots.delete(canvas);\n            if (callback) callback(canvas);\n          } catch (e) {\n            /* ... */\n          }\n        }, 500);\n      }\n    });\n  }\n}\nfunction createPortal(children, container, state) {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(Portal, {\n    children: children,\n    container: container,\n    state: state\n  }, container.uuid);\n}\nfunction Portal({\n  state = {},\n  children,\n  container\n}) {\n  /** This has to be a component because it would not be able to call useThree/useStore otherwise since\r\n   *  if this is our environment, then we are not in r3f's renderer but in react-dom, it would trigger\r\n   *  the \"R3F hooks can only be used within the Canvas component!\" warning:\r\n   *  <Canvas>\r\n   *    {createPortal(...)} */\n  const {\n    events,\n    size,\n    ...rest\n  } = state;\n  const previousRoot = useStore();\n  const [raycaster] = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => new three__WEBPACK_IMPORTED_MODULE_5__.Raycaster());\n  const [pointer] = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => new three__WEBPACK_IMPORTED_MODULE_5__.Vector2());\n  const inject = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((rootState, injectState) => {\n    const intersect = {\n      ...rootState\n    }; // all prev state props\n\n    // Only the fields of \"rootState\" that do not differ from injectState\n    // Some props should be off-limits\n    // Otherwise filter out the props that are different and let the inject layer take precedence\n    Object.keys(rootState).forEach(key => {\n      if (\n      // Some props should be off-limits\n      privateKeys.includes(key) ||\n      // Otherwise filter out the props that are different and let the inject layer take precedence\n      // Unless the inject layer props is undefined, then we keep the root layer\n      rootState[key] !== injectState[key] && injectState[key]) {\n        delete intersect[key];\n      }\n    });\n    let viewport = undefined;\n    if (injectState && size) {\n      const camera = injectState.camera;\n      // Calculate the override viewport, if present\n      viewport = rootState.viewport.getCurrentViewport(camera, new three__WEBPACK_IMPORTED_MODULE_5__.Vector3(), size);\n      // Update the portal camera, if it differs from the previous layer\n      if (camera !== rootState.camera) updateCamera(camera, size);\n    }\n    return {\n      // The intersect consists of the previous root state\n      ...intersect,\n      // Portals have their own scene, which forms the root, a raycaster and a pointer\n      scene: container,\n      raycaster,\n      pointer,\n      mouse: pointer,\n      // Their previous root is the layer before it\n      previousRoot,\n      // Events, size and viewport can be overridden by the inject layer\n      events: {\n        ...rootState.events,\n        ...(injectState == null ? void 0 : injectState.events),\n        ...events\n      },\n      size: {\n        ...rootState.size,\n        ...size\n      },\n      viewport: {\n        ...rootState.viewport,\n        ...viewport\n      },\n      ...rest\n    };\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [state]);\n  const [usePortalStore] = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => {\n    // Create a mirrored store, based on the previous root with a few overrides ...\n    const previousState = previousRoot.getState();\n    const store = (0,zustand__WEBPACK_IMPORTED_MODULE_6__[\"default\"])((set, get) => ({\n      ...previousState,\n      scene: container,\n      raycaster,\n      pointer,\n      mouse: pointer,\n      previousRoot,\n      events: {\n        ...previousState.events,\n        ...events\n      },\n      size: {\n        ...previousState.size,\n        ...size\n      },\n      ...rest,\n      // Set and get refer to this root-state\n      set,\n      get,\n      // Layers are allowed to override events\n      setEvents: events => set(state => ({\n        ...state,\n        events: {\n          ...state.events,\n          ...events\n        }\n      }))\n    }));\n    return store;\n  });\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    // Subscribe to previous root-state and copy changes over to the mirrored portal-state\n    const unsub = previousRoot.subscribe(prev => usePortalStore.setState(state => inject(prev, state)));\n    return () => {\n      unsub();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inject]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    usePortalStore.setState(injectState => inject(previousRoot.getState(), injectState));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inject]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    return () => {\n      usePortalStore.destroy();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment, {\n    children: reconciler.createPortal( /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(context.Provider, {\n      value: usePortalStore,\n      children: children\n    }), usePortalStore, null)\n  });\n}\nreconciler.injectIntoDevTools({\n  bundleType:  false ? 0 : 1,\n  rendererPackageName: '@react-three/fiber',\n  version: react__WEBPACK_IMPORTED_MODULE_0__.version\n});\nconst act = react__WEBPACK_IMPORTED_MODULE_0__.unstable_act;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/fiber/dist/index-ba8afaa4.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/fiber/dist/react-three-fiber.esm.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@react-three/fiber/dist/react-three-fiber.esm.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Canvas: () => (/* binding */ Canvas),\n/* harmony export */   ReactThreeFiber: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.t),\n/* harmony export */   _roots: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.x),\n/* harmony export */   act: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.v),\n/* harmony export */   addAfterEffect: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.o),\n/* harmony export */   addEffect: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.n),\n/* harmony export */   addTail: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.p),\n/* harmony export */   advance: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.m),\n/* harmony export */   applyProps: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.j),\n/* harmony export */   buildGraph: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.w),\n/* harmony export */   context: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.f),\n/* harmony export */   createEvents: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.c),\n/* harmony export */   createPortal: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.g),\n/* harmony export */   createRoot: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.b),\n/* harmony export */   dispose: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.k),\n/* harmony export */   events: () => (/* binding */ createPointerEvents),\n/* harmony export */   extend: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.e),\n/* harmony export */   flushGlobalEffects: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.q),\n/* harmony export */   getRootState: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.s),\n/* harmony export */   invalidate: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.l),\n/* harmony export */   reconciler: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.h),\n/* harmony export */   render: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.r),\n/* harmony export */   unmountComponentAtNode: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.d),\n/* harmony export */   useFrame: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.C),\n/* harmony export */   useGraph: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.D),\n/* harmony export */   useInstanceHandle: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.y),\n/* harmony export */   useLoader: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.F),\n/* harmony export */   useStore: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.z),\n/* harmony export */   useThree: () => (/* reexport safe */ _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.A)\n/* harmony export */ });\n/* harmony import */ var _index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-ba8afaa4.esm.js */ \"(ssr)/./node_modules/@react-three/fiber/dist/index-ba8afaa4.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var react_use_measure__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-use-measure */ \"(ssr)/./node_modules/react-use-measure/dist/index.js\");\n/* harmony import */ var its_fine__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! its-fine */ \"(ssr)/./node_modules/its-fine/dist/index.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_reconciler_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-reconciler/constants */ \"(ssr)/./node_modules/react-reconciler/constants.js\");\n/* harmony import */ var react_reconciler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-reconciler */ \"(ssr)/./node_modules/react-reconciler/index.js\");\n/* harmony import */ var react_reconciler__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_reconciler__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var scheduler__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! scheduler */ \"(ssr)/./node_modules/scheduler/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst DOM_EVENTS = {\n  onClick: ['click', false],\n  onContextMenu: ['contextmenu', false],\n  onDoubleClick: ['dblclick', false],\n  onWheel: ['wheel', true],\n  onPointerDown: ['pointerdown', true],\n  onPointerUp: ['pointerup', true],\n  onPointerLeave: ['pointerleave', true],\n  onPointerMove: ['pointermove', true],\n  onPointerCancel: ['pointercancel', true],\n  onLostPointerCapture: ['lostpointercapture', true]\n};\n\n/** Default R3F event manager for web */\nfunction createPointerEvents(store) {\n  const {\n    handlePointer\n  } = (0,_index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.c)(store);\n  return {\n    priority: 1,\n    enabled: true,\n    compute(event, state, previous) {\n      // https://github.com/pmndrs/react-three-fiber/pull/782\n      // Events trigger outside of canvas when moved, use offsetX/Y by default and allow overrides\n      state.pointer.set(event.offsetX / state.size.width * 2 - 1, -(event.offsetY / state.size.height) * 2 + 1);\n      state.raycaster.setFromCamera(state.pointer, state.camera);\n    },\n    connected: undefined,\n    handlers: Object.keys(DOM_EVENTS).reduce((acc, key) => ({\n      ...acc,\n      [key]: handlePointer(key)\n    }), {}),\n    update: () => {\n      var _internal$lastEvent;\n      const {\n        events,\n        internal\n      } = store.getState();\n      if ((_internal$lastEvent = internal.lastEvent) != null && _internal$lastEvent.current && events.handlers) events.handlers.onPointerMove(internal.lastEvent.current);\n    },\n    connect: target => {\n      var _events$handlers;\n      const {\n        set,\n        events\n      } = store.getState();\n      events.disconnect == null ? void 0 : events.disconnect();\n      set(state => ({\n        events: {\n          ...state.events,\n          connected: target\n        }\n      }));\n      Object.entries((_events$handlers = events.handlers) != null ? _events$handlers : []).forEach(([name, event]) => {\n        const [eventName, passive] = DOM_EVENTS[name];\n        target.addEventListener(eventName, event, {\n          passive\n        });\n      });\n    },\n    disconnect: () => {\n      const {\n        set,\n        events\n      } = store.getState();\n      if (events.connected) {\n        var _events$handlers2;\n        Object.entries((_events$handlers2 = events.handlers) != null ? _events$handlers2 : []).forEach(([name, event]) => {\n          if (events && events.connected instanceof HTMLElement) {\n            const [eventName] = DOM_EVENTS[name];\n            events.connected.removeEventListener(eventName, event);\n          }\n        });\n        set(state => ({\n          events: {\n            ...state.events,\n            connected: undefined\n          }\n        }));\n      }\n    }\n  };\n}\n\nconst CanvasImpl = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(function Canvas({\n  children,\n  fallback,\n  resize,\n  style,\n  gl,\n  events = createPointerEvents,\n  eventSource,\n  eventPrefix,\n  shadows,\n  linear,\n  flat,\n  legacy,\n  orthographic,\n  frameloop,\n  dpr,\n  performance,\n  raycaster,\n  camera,\n  scene,\n  onPointerMissed,\n  onCreated,\n  ...props\n}, forwardedRef) {\n  // Create a known catalogue of Threejs-native elements\n  // This will include the entire THREE namespace by default, users can extend\n  // their own elements by using the createRoot API instead\n  react__WEBPACK_IMPORTED_MODULE_1__.useMemo(() => (0,_index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.e)(three__WEBPACK_IMPORTED_MODULE_6__), []);\n  const Bridge = (0,its_fine__WEBPACK_IMPORTED_MODULE_7__.useContextBridge)();\n  const [containerRef, containerRect] = (0,react_use_measure__WEBPACK_IMPORTED_MODULE_8__[\"default\"])({\n    scroll: true,\n    debounce: {\n      scroll: 50,\n      resize: 0\n    },\n    ...resize\n  });\n  const canvasRef = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n  const divRef = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n  react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle(forwardedRef, () => canvasRef.current);\n  const handlePointerMissed = (0,_index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.u)(onPointerMissed);\n  const [block, setBlock] = react__WEBPACK_IMPORTED_MODULE_1__.useState(false);\n  const [error, setError] = react__WEBPACK_IMPORTED_MODULE_1__.useState(false);\n\n  // Suspend this component if block is a promise (2nd run)\n  if (block) throw block;\n  // Throw exception outwards if anything within canvas throws\n  if (error) throw error;\n  const root = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n  (0,_index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(() => {\n    const canvas = canvasRef.current;\n    if (containerRect.width > 0 && containerRect.height > 0 && canvas) {\n      if (!root.current) root.current = (0,_index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.b)(canvas);\n      root.current.configure({\n        gl,\n        events,\n        shadows,\n        linear,\n        flat,\n        legacy,\n        orthographic,\n        frameloop,\n        dpr,\n        performance,\n        raycaster,\n        camera,\n        scene,\n        size: containerRect,\n        // Pass mutable reference to onPointerMissed so it's free to update\n        onPointerMissed: (...args) => handlePointerMissed.current == null ? void 0 : handlePointerMissed.current(...args),\n        onCreated: state => {\n          // Connect to event source\n          state.events.connect == null ? void 0 : state.events.connect(eventSource ? (0,_index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.i)(eventSource) ? eventSource.current : eventSource : divRef.current);\n          // Set up compute function\n          if (eventPrefix) {\n            state.setEvents({\n              compute: (event, state) => {\n                const x = event[eventPrefix + 'X'];\n                const y = event[eventPrefix + 'Y'];\n                state.pointer.set(x / state.size.width * 2 - 1, -(y / state.size.height) * 2 + 1);\n                state.raycaster.setFromCamera(state.pointer, state.camera);\n              }\n            });\n          }\n          // Call onCreated callback\n          onCreated == null ? void 0 : onCreated(state);\n        }\n      });\n      root.current.render( /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Bridge, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.E, {\n          set: setError,\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, {\n            fallback: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.B, {\n              set: setBlock\n            }),\n            children: children\n          })\n        })\n      }));\n    }\n  });\n  react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) return () => (0,_index_ba8afaa4_esm_js__WEBPACK_IMPORTED_MODULE_0__.d)(canvas);\n  }, []);\n\n  // When the event source is not this div, we need to set pointer-events to none\n  // Or else the canvas will block events from reaching the event source\n  const pointerEvents = eventSource ? 'none' : 'auto';\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n    ref: divRef,\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      pointerEvents,\n      ...style\n    },\n    ...props,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n      ref: containerRef,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          display: 'block'\n        },\n        children: fallback\n      })\n    })\n  });\n});\n\n/**\r\n * A DOM canvas which accepts threejs elements as children.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/canvas\r\n */\nconst Canvas = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(function CanvasWrapper(props, ref) {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(its_fine__WEBPACK_IMPORTED_MODULE_7__.FiberProvider, {\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(CanvasImpl, {\n      ...props,\n      ref: ref\n    })\n  });\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXRocmVlL2ZpYmVyL2Rpc3QvcmVhY3QtdGhyZWUtZmliZXIuZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTROO0FBQ3lSO0FBQ3RkO0FBQ0E7QUFDWTtBQUNnQjtBQUNuQjtBQUNKO0FBQ25CO0FBQ1M7QUFDUDtBQUNJOztBQUV2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLEVBQUUseURBQVk7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssS0FBSztBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGdDQUFnQyw2Q0FBZ0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsRUFBRSwwQ0FBYSxPQUFPLHlEQUFNLENBQUMsa0NBQUs7QUFDbEMsaUJBQWlCLDBEQUFnQjtBQUNqQyx3Q0FBd0MsNkRBQVU7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0gsb0JBQW9CLHlDQUFZO0FBQ2hDLGlCQUFpQix5Q0FBWTtBQUM3QixFQUFFLHNEQUF5QjtBQUMzQiw4QkFBOEIseURBQWtCO0FBQ2hELDRCQUE0QiwyQ0FBYztBQUMxQyw0QkFBNEIsMkNBQWM7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSx5Q0FBWTtBQUMzQixFQUFFLHlEQUF5QjtBQUMzQjtBQUNBO0FBQ0Esd0NBQXdDLHlEQUFVO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUZBQXFGLHlEQUFLO0FBQzFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCx3Q0FBd0Msc0RBQUc7QUFDM0MsK0JBQStCLHNEQUFHLENBQUMscURBQWE7QUFDaEQ7QUFDQSxpQ0FBaUMsc0RBQUcsQ0FBQywyQ0FBYztBQUNuRCxtQ0FBbUMsc0RBQUcsQ0FBQyxxREFBSztBQUM1QztBQUNBLGFBQWE7QUFDYjtBQUNBLFdBQVc7QUFDWCxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNILEVBQUUsNENBQWU7QUFDakI7QUFDQSw2QkFBNkIseURBQXNCO0FBQ25ELEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHNEQUFHO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSwyQkFBMkIsc0RBQUc7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsNkJBQTZCLHNEQUFHO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0wsR0FBRztBQUNILENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsNkNBQWdCO0FBQzVDLHNCQUFzQixzREFBRyxDQUFDLG1EQUFhO0FBQ3ZDLDJCQUEyQixzREFBRztBQUM5QjtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCxDQUFDOztBQUVnRCIsInNvdXJjZXMiOlsid2VicGFjazovL3Nhbmp5b3RpLWxlYXJuaW5nLy4vbm9kZV9tb2R1bGVzL0ByZWFjdC10aHJlZS9maWJlci9kaXN0L3JlYWN0LXRocmVlLWZpYmVyLmVzbS5qcz81NjIwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGMgYXMgY3JlYXRlRXZlbnRzLCBlIGFzIGV4dGVuZCwgdSBhcyB1c2VNdXRhYmxlQ2FsbGJhY2ssIGEgYXMgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCwgYiBhcyBjcmVhdGVSb290LCBpIGFzIGlzUmVmLCBFIGFzIEVycm9yQm91bmRhcnksIEIgYXMgQmxvY2ssIGQgYXMgdW5tb3VudENvbXBvbmVudEF0Tm9kZSB9IGZyb20gJy4vaW5kZXgtYmE4YWZhYTQuZXNtLmpzJztcbmV4cG9ydCB7IHQgYXMgUmVhY3RUaHJlZUZpYmVyLCB4IGFzIF9yb290cywgdiBhcyBhY3QsIG8gYXMgYWRkQWZ0ZXJFZmZlY3QsIG4gYXMgYWRkRWZmZWN0LCBwIGFzIGFkZFRhaWwsIG0gYXMgYWR2YW5jZSwgaiBhcyBhcHBseVByb3BzLCB3IGFzIGJ1aWxkR3JhcGgsIGYgYXMgY29udGV4dCwgYyBhcyBjcmVhdGVFdmVudHMsIGcgYXMgY3JlYXRlUG9ydGFsLCBiIGFzIGNyZWF0ZVJvb3QsIGsgYXMgZGlzcG9zZSwgZSBhcyBleHRlbmQsIHEgYXMgZmx1c2hHbG9iYWxFZmZlY3RzLCBzIGFzIGdldFJvb3RTdGF0ZSwgbCBhcyBpbnZhbGlkYXRlLCBoIGFzIHJlY29uY2lsZXIsIHIgYXMgcmVuZGVyLCBkIGFzIHVubW91bnRDb21wb25lbnRBdE5vZGUsIEMgYXMgdXNlRnJhbWUsIEQgYXMgdXNlR3JhcGgsIHkgYXMgdXNlSW5zdGFuY2VIYW5kbGUsIEYgYXMgdXNlTG9hZGVyLCB6IGFzIHVzZVN0b3JlLCBBIGFzIHVzZVRocmVlIH0gZnJvbSAnLi9pbmRleC1iYThhZmFhNC5lc20uanMnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xuaW1wb3J0IHVzZU1lYXN1cmUgZnJvbSAncmVhY3QtdXNlLW1lYXN1cmUnO1xuaW1wb3J0IHsgRmliZXJQcm92aWRlciwgdXNlQ29udGV4dEJyaWRnZSB9IGZyb20gJ2l0cy1maW5lJztcbmltcG9ydCB7IGpzeCB9IGZyb20gJ3JlYWN0L2pzeC1ydW50aW1lJztcbmltcG9ydCAncmVhY3QtcmVjb25jaWxlci9jb25zdGFudHMnO1xuaW1wb3J0ICd6dXN0YW5kJztcbmltcG9ydCAncmVhY3QtcmVjb25jaWxlcic7XG5pbXBvcnQgJ3NjaGVkdWxlcic7XG5pbXBvcnQgJ3N1c3BlbmQtcmVhY3QnO1xuXG5jb25zdCBET01fRVZFTlRTID0ge1xuICBvbkNsaWNrOiBbJ2NsaWNrJywgZmFsc2VdLFxuICBvbkNvbnRleHRNZW51OiBbJ2NvbnRleHRtZW51JywgZmFsc2VdLFxuICBvbkRvdWJsZUNsaWNrOiBbJ2RibGNsaWNrJywgZmFsc2VdLFxuICBvbldoZWVsOiBbJ3doZWVsJywgdHJ1ZV0sXG4gIG9uUG9pbnRlckRvd246IFsncG9pbnRlcmRvd24nLCB0cnVlXSxcbiAgb25Qb2ludGVyVXA6IFsncG9pbnRlcnVwJywgdHJ1ZV0sXG4gIG9uUG9pbnRlckxlYXZlOiBbJ3BvaW50ZXJsZWF2ZScsIHRydWVdLFxuICBvblBvaW50ZXJNb3ZlOiBbJ3BvaW50ZXJtb3ZlJywgdHJ1ZV0sXG4gIG9uUG9pbnRlckNhbmNlbDogWydwb2ludGVyY2FuY2VsJywgdHJ1ZV0sXG4gIG9uTG9zdFBvaW50ZXJDYXB0dXJlOiBbJ2xvc3Rwb2ludGVyY2FwdHVyZScsIHRydWVdXG59O1xuXG4vKiogRGVmYXVsdCBSM0YgZXZlbnQgbWFuYWdlciBmb3Igd2ViICovXG5mdW5jdGlvbiBjcmVhdGVQb2ludGVyRXZlbnRzKHN0b3JlKSB7XG4gIGNvbnN0IHtcbiAgICBoYW5kbGVQb2ludGVyXG4gIH0gPSBjcmVhdGVFdmVudHMoc3RvcmUpO1xuICByZXR1cm4ge1xuICAgIHByaW9yaXR5OiAxLFxuICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgY29tcHV0ZShldmVudCwgc3RhdGUsIHByZXZpb3VzKSB7XG4gICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vcG1uZHJzL3JlYWN0LXRocmVlLWZpYmVyL3B1bGwvNzgyXG4gICAgICAvLyBFdmVudHMgdHJpZ2dlciBvdXRzaWRlIG9mIGNhbnZhcyB3aGVuIG1vdmVkLCB1c2Ugb2Zmc2V0WC9ZIGJ5IGRlZmF1bHQgYW5kIGFsbG93IG92ZXJyaWRlc1xuICAgICAgc3RhdGUucG9pbnRlci5zZXQoZXZlbnQub2Zmc2V0WCAvIHN0YXRlLnNpemUud2lkdGggKiAyIC0gMSwgLShldmVudC5vZmZzZXRZIC8gc3RhdGUuc2l6ZS5oZWlnaHQpICogMiArIDEpO1xuICAgICAgc3RhdGUucmF5Y2FzdGVyLnNldEZyb21DYW1lcmEoc3RhdGUucG9pbnRlciwgc3RhdGUuY2FtZXJhKTtcbiAgICB9LFxuICAgIGNvbm5lY3RlZDogdW5kZWZpbmVkLFxuICAgIGhhbmRsZXJzOiBPYmplY3Qua2V5cyhET01fRVZFTlRTKS5yZWR1Y2UoKGFjYywga2V5KSA9PiAoe1xuICAgICAgLi4uYWNjLFxuICAgICAgW2tleV06IGhhbmRsZVBvaW50ZXIoa2V5KVxuICAgIH0pLCB7fSksXG4gICAgdXBkYXRlOiAoKSA9PiB7XG4gICAgICB2YXIgX2ludGVybmFsJGxhc3RFdmVudDtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgZXZlbnRzLFxuICAgICAgICBpbnRlcm5hbFxuICAgICAgfSA9IHN0b3JlLmdldFN0YXRlKCk7XG4gICAgICBpZiAoKF9pbnRlcm5hbCRsYXN0RXZlbnQgPSBpbnRlcm5hbC5sYXN0RXZlbnQpICE9IG51bGwgJiYgX2ludGVybmFsJGxhc3RFdmVudC5jdXJyZW50ICYmIGV2ZW50cy5oYW5kbGVycykgZXZlbnRzLmhhbmRsZXJzLm9uUG9pbnRlck1vdmUoaW50ZXJuYWwubGFzdEV2ZW50LmN1cnJlbnQpO1xuICAgIH0sXG4gICAgY29ubmVjdDogdGFyZ2V0ID0+IHtcbiAgICAgIHZhciBfZXZlbnRzJGhhbmRsZXJzO1xuICAgICAgY29uc3Qge1xuICAgICAgICBzZXQsXG4gICAgICAgIGV2ZW50c1xuICAgICAgfSA9IHN0b3JlLmdldFN0YXRlKCk7XG4gICAgICBldmVudHMuZGlzY29ubmVjdCA9PSBudWxsID8gdm9pZCAwIDogZXZlbnRzLmRpc2Nvbm5lY3QoKTtcbiAgICAgIHNldChzdGF0ZSA9PiAoe1xuICAgICAgICBldmVudHM6IHtcbiAgICAgICAgICAuLi5zdGF0ZS5ldmVudHMsXG4gICAgICAgICAgY29ubmVjdGVkOiB0YXJnZXRcbiAgICAgICAgfVxuICAgICAgfSkpO1xuICAgICAgT2JqZWN0LmVudHJpZXMoKF9ldmVudHMkaGFuZGxlcnMgPSBldmVudHMuaGFuZGxlcnMpICE9IG51bGwgPyBfZXZlbnRzJGhhbmRsZXJzIDogW10pLmZvckVhY2goKFtuYW1lLCBldmVudF0pID0+IHtcbiAgICAgICAgY29uc3QgW2V2ZW50TmFtZSwgcGFzc2l2ZV0gPSBET01fRVZFTlRTW25hbWVdO1xuICAgICAgICB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGV2ZW50LCB7XG4gICAgICAgICAgcGFzc2l2ZVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZGlzY29ubmVjdDogKCkgPT4ge1xuICAgICAgY29uc3Qge1xuICAgICAgICBzZXQsXG4gICAgICAgIGV2ZW50c1xuICAgICAgfSA9IHN0b3JlLmdldFN0YXRlKCk7XG4gICAgICBpZiAoZXZlbnRzLmNvbm5lY3RlZCkge1xuICAgICAgICB2YXIgX2V2ZW50cyRoYW5kbGVyczI7XG4gICAgICAgIE9iamVjdC5lbnRyaWVzKChfZXZlbnRzJGhhbmRsZXJzMiA9IGV2ZW50cy5oYW5kbGVycykgIT0gbnVsbCA/IF9ldmVudHMkaGFuZGxlcnMyIDogW10pLmZvckVhY2goKFtuYW1lLCBldmVudF0pID0+IHtcbiAgICAgICAgICBpZiAoZXZlbnRzICYmIGV2ZW50cy5jb25uZWN0ZWQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkge1xuICAgICAgICAgICAgY29uc3QgW2V2ZW50TmFtZV0gPSBET01fRVZFTlRTW25hbWVdO1xuICAgICAgICAgICAgZXZlbnRzLmNvbm5lY3RlZC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgZXZlbnQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHNldChzdGF0ZSA9PiAoe1xuICAgICAgICAgIGV2ZW50czoge1xuICAgICAgICAgICAgLi4uc3RhdGUuZXZlbnRzLFxuICAgICAgICAgICAgY29ubmVjdGVkOiB1bmRlZmluZWRcbiAgICAgICAgICB9XG4gICAgICAgIH0pKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG59XG5cbmNvbnN0IENhbnZhc0ltcGwgPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBDYW52YXMoe1xuICBjaGlsZHJlbixcbiAgZmFsbGJhY2ssXG4gIHJlc2l6ZSxcbiAgc3R5bGUsXG4gIGdsLFxuICBldmVudHMgPSBjcmVhdGVQb2ludGVyRXZlbnRzLFxuICBldmVudFNvdXJjZSxcbiAgZXZlbnRQcmVmaXgsXG4gIHNoYWRvd3MsXG4gIGxpbmVhcixcbiAgZmxhdCxcbiAgbGVnYWN5LFxuICBvcnRob2dyYXBoaWMsXG4gIGZyYW1lbG9vcCxcbiAgZHByLFxuICBwZXJmb3JtYW5jZSxcbiAgcmF5Y2FzdGVyLFxuICBjYW1lcmEsXG4gIHNjZW5lLFxuICBvblBvaW50ZXJNaXNzZWQsXG4gIG9uQ3JlYXRlZCxcbiAgLi4ucHJvcHNcbn0sIGZvcndhcmRlZFJlZikge1xuICAvLyBDcmVhdGUgYSBrbm93biBjYXRhbG9ndWUgb2YgVGhyZWVqcy1uYXRpdmUgZWxlbWVudHNcbiAgLy8gVGhpcyB3aWxsIGluY2x1ZGUgdGhlIGVudGlyZSBUSFJFRSBuYW1lc3BhY2UgYnkgZGVmYXVsdCwgdXNlcnMgY2FuIGV4dGVuZFxuICAvLyB0aGVpciBvd24gZWxlbWVudHMgYnkgdXNpbmcgdGhlIGNyZWF0ZVJvb3QgQVBJIGluc3RlYWRcbiAgUmVhY3QudXNlTWVtbygoKSA9PiBleHRlbmQoVEhSRUUpLCBbXSk7XG4gIGNvbnN0IEJyaWRnZSA9IHVzZUNvbnRleHRCcmlkZ2UoKTtcbiAgY29uc3QgW2NvbnRhaW5lclJlZiwgY29udGFpbmVyUmVjdF0gPSB1c2VNZWFzdXJlKHtcbiAgICBzY3JvbGw6IHRydWUsXG4gICAgZGVib3VuY2U6IHtcbiAgICAgIHNjcm9sbDogNTAsXG4gICAgICByZXNpemU6IDBcbiAgICB9LFxuICAgIC4uLnJlc2l6ZVxuICB9KTtcbiAgY29uc3QgY2FudmFzUmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICBjb25zdCBkaXZSZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gIFJlYWN0LnVzZUltcGVyYXRpdmVIYW5kbGUoZm9yd2FyZGVkUmVmLCAoKSA9PiBjYW52YXNSZWYuY3VycmVudCk7XG4gIGNvbnN0IGhhbmRsZVBvaW50ZXJNaXNzZWQgPSB1c2VNdXRhYmxlQ2FsbGJhY2sob25Qb2ludGVyTWlzc2VkKTtcbiAgY29uc3QgW2Jsb2NrLCBzZXRCbG9ja10gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuXG4gIC8vIFN1c3BlbmQgdGhpcyBjb21wb25lbnQgaWYgYmxvY2sgaXMgYSBwcm9taXNlICgybmQgcnVuKVxuICBpZiAoYmxvY2spIHRocm93IGJsb2NrO1xuICAvLyBUaHJvdyBleGNlcHRpb24gb3V0d2FyZHMgaWYgYW55dGhpbmcgd2l0aGluIGNhbnZhcyB0aHJvd3NcbiAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjtcbiAgY29uc3Qgcm9vdCA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgY2FudmFzID0gY2FudmFzUmVmLmN1cnJlbnQ7XG4gICAgaWYgKGNvbnRhaW5lclJlY3Qud2lkdGggPiAwICYmIGNvbnRhaW5lclJlY3QuaGVpZ2h0ID4gMCAmJiBjYW52YXMpIHtcbiAgICAgIGlmICghcm9vdC5jdXJyZW50KSByb290LmN1cnJlbnQgPSBjcmVhdGVSb290KGNhbnZhcyk7XG4gICAgICByb290LmN1cnJlbnQuY29uZmlndXJlKHtcbiAgICAgICAgZ2wsXG4gICAgICAgIGV2ZW50cyxcbiAgICAgICAgc2hhZG93cyxcbiAgICAgICAgbGluZWFyLFxuICAgICAgICBmbGF0LFxuICAgICAgICBsZWdhY3ksXG4gICAgICAgIG9ydGhvZ3JhcGhpYyxcbiAgICAgICAgZnJhbWVsb29wLFxuICAgICAgICBkcHIsXG4gICAgICAgIHBlcmZvcm1hbmNlLFxuICAgICAgICByYXljYXN0ZXIsXG4gICAgICAgIGNhbWVyYSxcbiAgICAgICAgc2NlbmUsXG4gICAgICAgIHNpemU6IGNvbnRhaW5lclJlY3QsXG4gICAgICAgIC8vIFBhc3MgbXV0YWJsZSByZWZlcmVuY2UgdG8gb25Qb2ludGVyTWlzc2VkIHNvIGl0J3MgZnJlZSB0byB1cGRhdGVcbiAgICAgICAgb25Qb2ludGVyTWlzc2VkOiAoLi4uYXJncykgPT4gaGFuZGxlUG9pbnRlck1pc3NlZC5jdXJyZW50ID09IG51bGwgPyB2b2lkIDAgOiBoYW5kbGVQb2ludGVyTWlzc2VkLmN1cnJlbnQoLi4uYXJncyksXG4gICAgICAgIG9uQ3JlYXRlZDogc3RhdGUgPT4ge1xuICAgICAgICAgIC8vIENvbm5lY3QgdG8gZXZlbnQgc291cmNlXG4gICAgICAgICAgc3RhdGUuZXZlbnRzLmNvbm5lY3QgPT0gbnVsbCA/IHZvaWQgMCA6IHN0YXRlLmV2ZW50cy5jb25uZWN0KGV2ZW50U291cmNlID8gaXNSZWYoZXZlbnRTb3VyY2UpID8gZXZlbnRTb3VyY2UuY3VycmVudCA6IGV2ZW50U291cmNlIDogZGl2UmVmLmN1cnJlbnQpO1xuICAgICAgICAgIC8vIFNldCB1cCBjb21wdXRlIGZ1bmN0aW9uXG4gICAgICAgICAgaWYgKGV2ZW50UHJlZml4KSB7XG4gICAgICAgICAgICBzdGF0ZS5zZXRFdmVudHMoe1xuICAgICAgICAgICAgICBjb21wdXRlOiAoZXZlbnQsIHN0YXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgeCA9IGV2ZW50W2V2ZW50UHJlZml4ICsgJ1gnXTtcbiAgICAgICAgICAgICAgICBjb25zdCB5ID0gZXZlbnRbZXZlbnRQcmVmaXggKyAnWSddO1xuICAgICAgICAgICAgICAgIHN0YXRlLnBvaW50ZXIuc2V0KHggLyBzdGF0ZS5zaXplLndpZHRoICogMiAtIDEsIC0oeSAvIHN0YXRlLnNpemUuaGVpZ2h0KSAqIDIgKyAxKTtcbiAgICAgICAgICAgICAgICBzdGF0ZS5yYXljYXN0ZXIuc2V0RnJvbUNhbWVyYShzdGF0ZS5wb2ludGVyLCBzdGF0ZS5jYW1lcmEpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gQ2FsbCBvbkNyZWF0ZWQgY2FsbGJhY2tcbiAgICAgICAgICBvbkNyZWF0ZWQgPT0gbnVsbCA/IHZvaWQgMCA6IG9uQ3JlYXRlZChzdGF0ZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcm9vdC5jdXJyZW50LnJlbmRlciggLyojX19QVVJFX18qL2pzeChCcmlkZ2UsIHtcbiAgICAgICAgY2hpbGRyZW46IC8qI19fUFVSRV9fKi9qc3goRXJyb3JCb3VuZGFyeSwge1xuICAgICAgICAgIHNldDogc2V0RXJyb3IsXG4gICAgICAgICAgY2hpbGRyZW46IC8qI19fUFVSRV9fKi9qc3goUmVhY3QuU3VzcGVuc2UsIHtcbiAgICAgICAgICAgIGZhbGxiYWNrOiAvKiNfX1BVUkVfXyovanN4KEJsb2NrLCB7XG4gICAgICAgICAgICAgIHNldDogc2V0QmxvY2tcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgY2hpbGRyZW46IGNoaWxkcmVuXG4gICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICAgIH0pKTtcbiAgICB9XG4gIH0pO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGNhbnZhcyA9IGNhbnZhc1JlZi5jdXJyZW50O1xuICAgIGlmIChjYW52YXMpIHJldHVybiAoKSA9PiB1bm1vdW50Q29tcG9uZW50QXROb2RlKGNhbnZhcyk7XG4gIH0sIFtdKTtcblxuICAvLyBXaGVuIHRoZSBldmVudCBzb3VyY2UgaXMgbm90IHRoaXMgZGl2LCB3ZSBuZWVkIHRvIHNldCBwb2ludGVyLWV2ZW50cyB0byBub25lXG4gIC8vIE9yIGVsc2UgdGhlIGNhbnZhcyB3aWxsIGJsb2NrIGV2ZW50cyBmcm9tIHJlYWNoaW5nIHRoZSBldmVudCBzb3VyY2VcbiAgY29uc3QgcG9pbnRlckV2ZW50cyA9IGV2ZW50U291cmNlID8gJ25vbmUnIDogJ2F1dG8nO1xuICByZXR1cm4gLyojX19QVVJFX18qL2pzeChcImRpdlwiLCB7XG4gICAgcmVmOiBkaXZSZWYsXG4gICAgc3R5bGU6IHtcbiAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgIGhlaWdodDogJzEwMCUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcG9pbnRlckV2ZW50cyxcbiAgICAgIC4uLnN0eWxlXG4gICAgfSxcbiAgICAuLi5wcm9wcyxcbiAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL2pzeChcImRpdlwiLCB7XG4gICAgICByZWY6IGNvbnRhaW5lclJlZixcbiAgICAgIHN0eWxlOiB7XG4gICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgIGhlaWdodDogJzEwMCUnXG4gICAgICB9LFxuICAgICAgY2hpbGRyZW46IC8qI19fUFVSRV9fKi9qc3goXCJjYW52YXNcIiwge1xuICAgICAgICByZWY6IGNhbnZhc1JlZixcbiAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICBkaXNwbGF5OiAnYmxvY2snXG4gICAgICAgIH0sXG4gICAgICAgIGNoaWxkcmVuOiBmYWxsYmFja1xuICAgICAgfSlcbiAgICB9KVxuICB9KTtcbn0pO1xuXG4vKipcclxuICogQSBET00gY2FudmFzIHdoaWNoIGFjY2VwdHMgdGhyZWVqcyBlbGVtZW50cyBhcyBjaGlsZHJlbi5cclxuICogQHNlZSBodHRwczovL2RvY3MucG1uZC5ycy9yZWFjdC10aHJlZS1maWJlci9hcGkvY2FudmFzXHJcbiAqL1xuY29uc3QgQ2FudmFzID0gLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gQ2FudmFzV3JhcHBlcihwcm9wcywgcmVmKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovanN4KEZpYmVyUHJvdmlkZXIsIHtcbiAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL2pzeChDYW52YXNJbXBsLCB7XG4gICAgICAuLi5wcm9wcyxcbiAgICAgIHJlZjogcmVmXG4gICAgfSlcbiAgfSk7XG59KTtcblxuZXhwb3J0IHsgQ2FudmFzLCBjcmVhdGVQb2ludGVyRXZlbnRzIGFzIGV2ZW50cyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/fiber/dist/react-three-fiber.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/fiber/node_modules/zustand/esm/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@react-three/fiber/node_modules/zustand/esm/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ create)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction createStore(createState) {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (nextState !== state) {\n      const previousState = state;\n      state = replace ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const subscribeWithSelector = (listener, selector = getState, equalityFn = Object.is) => {\n    console.warn(\"[DEPRECATED] Please use `subscribeWithSelector` middleware\");\n    let currentSlice = selector(state);\n    function listenerToAdd() {\n      const nextSlice = selector(state);\n      if (!equalityFn(currentSlice, nextSlice)) {\n        const previousSlice = currentSlice;\n        listener(currentSlice = nextSlice, previousSlice);\n      }\n    }\n    listeners.add(listenerToAdd);\n    return () => listeners.delete(listenerToAdd);\n  };\n  const subscribe = (listener, selector, equalityFn) => {\n    if (selector || equalityFn) {\n      return subscribeWithSelector(listener, selector, equalityFn);\n    }\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => listeners.clear();\n  const api = { setState, getState, subscribe, destroy };\n  state = createState(setState, getState, api);\n  return api;\n}\n\nconst isSSR = typeof window === \"undefined\" || !window.navigator || /ServerSideRendering|^Deno\\//.test(window.navigator.userAgent);\nconst useIsomorphicLayoutEffect = isSSR ? react__WEBPACK_IMPORTED_MODULE_0__.useEffect : react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect;\nfunction create(createState) {\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useStore = (selector = api.getState, equalityFn = Object.is) => {\n    const [, forceUpdate] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)((c) => c + 1, 0);\n    const state = api.getState();\n    const stateRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(state);\n    const selectorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(selector);\n    const equalityFnRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(equalityFn);\n    const erroredRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const currentSliceRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    if (currentSliceRef.current === void 0) {\n      currentSliceRef.current = selector(state);\n    }\n    let newStateSlice;\n    let hasNewStateSlice = false;\n    if (stateRef.current !== state || selectorRef.current !== selector || equalityFnRef.current !== equalityFn || erroredRef.current) {\n      newStateSlice = selector(state);\n      hasNewStateSlice = !equalityFn(currentSliceRef.current, newStateSlice);\n    }\n    useIsomorphicLayoutEffect(() => {\n      if (hasNewStateSlice) {\n        currentSliceRef.current = newStateSlice;\n      }\n      stateRef.current = state;\n      selectorRef.current = selector;\n      equalityFnRef.current = equalityFn;\n      erroredRef.current = false;\n    });\n    const stateBeforeSubscriptionRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(state);\n    useIsomorphicLayoutEffect(() => {\n      const listener = () => {\n        try {\n          const nextState = api.getState();\n          const nextStateSlice = selectorRef.current(nextState);\n          if (!equalityFnRef.current(currentSliceRef.current, nextStateSlice)) {\n            stateRef.current = nextState;\n            currentSliceRef.current = nextStateSlice;\n            forceUpdate();\n          }\n        } catch (error) {\n          erroredRef.current = true;\n          forceUpdate();\n        }\n      };\n      const unsubscribe = api.subscribe(listener);\n      if (api.getState() !== stateBeforeSubscriptionRef.current) {\n        listener();\n      }\n      return unsubscribe;\n    }, []);\n    const sliceToReturn = hasNewStateSlice ? newStateSlice : currentSliceRef.current;\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(sliceToReturn);\n    return sliceToReturn;\n  };\n  Object.assign(useStore, api);\n  useStore[Symbol.iterator] = function() {\n    console.warn(\"[useStore, api] = create() is deprecated and will be removed in v4\");\n    const items = [useStore, api];\n    return {\n      next() {\n        const done = items.length <= 0;\n        return { value: items.shift(), done };\n      }\n    };\n  };\n  return useStore;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXRocmVlL2ZpYmVyL25vZGVfbW9kdWxlcy96dXN0YW5kL2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0Y7O0FBRXRGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9EO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBDQUEwQyw0Q0FBUyxHQUFHLGtEQUFlO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixpREFBVTtBQUN0QztBQUNBLHFCQUFxQiw2Q0FBTTtBQUMzQix3QkFBd0IsNkNBQU07QUFDOUIsMEJBQTBCLDZDQUFNO0FBQ2hDLHVCQUF1Qiw2Q0FBTTtBQUM3Qiw0QkFBNEIsNkNBQU07QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCx1Q0FBdUMsNkNBQU07QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsSUFBSSxvREFBYTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYW5qeW90aS1sZWFybmluZy8uL25vZGVfbW9kdWxlcy9AcmVhY3QtdGhyZWUvZmliZXIvbm9kZV9tb2R1bGVzL3p1c3RhbmQvZXNtL2luZGV4LmpzPzlhNTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUmVkdWNlciwgdXNlUmVmLCB1c2VEZWJ1Z1ZhbHVlLCB1c2VFZmZlY3QsIHVzZUxheW91dEVmZmVjdCB9IGZyb20gJ3JlYWN0JztcblxuZnVuY3Rpb24gY3JlYXRlU3RvcmUoY3JlYXRlU3RhdGUpIHtcbiAgbGV0IHN0YXRlO1xuICBjb25zdCBsaXN0ZW5lcnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xuICBjb25zdCBzZXRTdGF0ZSA9IChwYXJ0aWFsLCByZXBsYWNlKSA9PiB7XG4gICAgY29uc3QgbmV4dFN0YXRlID0gdHlwZW9mIHBhcnRpYWwgPT09IFwiZnVuY3Rpb25cIiA/IHBhcnRpYWwoc3RhdGUpIDogcGFydGlhbDtcbiAgICBpZiAobmV4dFN0YXRlICE9PSBzdGF0ZSkge1xuICAgICAgY29uc3QgcHJldmlvdXNTdGF0ZSA9IHN0YXRlO1xuICAgICAgc3RhdGUgPSByZXBsYWNlID8gbmV4dFN0YXRlIDogT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIG5leHRTdGF0ZSk7XG4gICAgICBsaXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXIpID0+IGxpc3RlbmVyKHN0YXRlLCBwcmV2aW91c1N0YXRlKSk7XG4gICAgfVxuICB9O1xuICBjb25zdCBnZXRTdGF0ZSA9ICgpID0+IHN0YXRlO1xuICBjb25zdCBzdWJzY3JpYmVXaXRoU2VsZWN0b3IgPSAobGlzdGVuZXIsIHNlbGVjdG9yID0gZ2V0U3RhdGUsIGVxdWFsaXR5Rm4gPSBPYmplY3QuaXMpID0+IHtcbiAgICBjb25zb2xlLndhcm4oXCJbREVQUkVDQVRFRF0gUGxlYXNlIHVzZSBgc3Vic2NyaWJlV2l0aFNlbGVjdG9yYCBtaWRkbGV3YXJlXCIpO1xuICAgIGxldCBjdXJyZW50U2xpY2UgPSBzZWxlY3RvcihzdGF0ZSk7XG4gICAgZnVuY3Rpb24gbGlzdGVuZXJUb0FkZCgpIHtcbiAgICAgIGNvbnN0IG5leHRTbGljZSA9IHNlbGVjdG9yKHN0YXRlKTtcbiAgICAgIGlmICghZXF1YWxpdHlGbihjdXJyZW50U2xpY2UsIG5leHRTbGljZSkpIHtcbiAgICAgICAgY29uc3QgcHJldmlvdXNTbGljZSA9IGN1cnJlbnRTbGljZTtcbiAgICAgICAgbGlzdGVuZXIoY3VycmVudFNsaWNlID0gbmV4dFNsaWNlLCBwcmV2aW91c1NsaWNlKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGlzdGVuZXJzLmFkZChsaXN0ZW5lclRvQWRkKTtcbiAgICByZXR1cm4gKCkgPT4gbGlzdGVuZXJzLmRlbGV0ZShsaXN0ZW5lclRvQWRkKTtcbiAgfTtcbiAgY29uc3Qgc3Vic2NyaWJlID0gKGxpc3RlbmVyLCBzZWxlY3RvciwgZXF1YWxpdHlGbikgPT4ge1xuICAgIGlmIChzZWxlY3RvciB8fCBlcXVhbGl0eUZuKSB7XG4gICAgICByZXR1cm4gc3Vic2NyaWJlV2l0aFNlbGVjdG9yKGxpc3RlbmVyLCBzZWxlY3RvciwgZXF1YWxpdHlGbik7XG4gICAgfVxuICAgIGxpc3RlbmVycy5hZGQobGlzdGVuZXIpO1xuICAgIHJldHVybiAoKSA9PiBsaXN0ZW5lcnMuZGVsZXRlKGxpc3RlbmVyKTtcbiAgfTtcbiAgY29uc3QgZGVzdHJveSA9ICgpID0+IGxpc3RlbmVycy5jbGVhcigpO1xuICBjb25zdCBhcGkgPSB7IHNldFN0YXRlLCBnZXRTdGF0ZSwgc3Vic2NyaWJlLCBkZXN0cm95IH07XG4gIHN0YXRlID0gY3JlYXRlU3RhdGUoc2V0U3RhdGUsIGdldFN0YXRlLCBhcGkpO1xuICByZXR1cm4gYXBpO1xufVxuXG5jb25zdCBpc1NTUiA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgfHwgIXdpbmRvdy5uYXZpZ2F0b3IgfHwgL1NlcnZlclNpZGVSZW5kZXJpbmd8XkRlbm9cXC8vLnRlc3Qod2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQpO1xuY29uc3QgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCA9IGlzU1NSID8gdXNlRWZmZWN0IDogdXNlTGF5b3V0RWZmZWN0O1xuZnVuY3Rpb24gY3JlYXRlKGNyZWF0ZVN0YXRlKSB7XG4gIGNvbnN0IGFwaSA9IHR5cGVvZiBjcmVhdGVTdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gY3JlYXRlU3RvcmUoY3JlYXRlU3RhdGUpIDogY3JlYXRlU3RhdGU7XG4gIGNvbnN0IHVzZVN0b3JlID0gKHNlbGVjdG9yID0gYXBpLmdldFN0YXRlLCBlcXVhbGl0eUZuID0gT2JqZWN0LmlzKSA9PiB7XG4gICAgY29uc3QgWywgZm9yY2VVcGRhdGVdID0gdXNlUmVkdWNlcigoYykgPT4gYyArIDEsIDApO1xuICAgIGNvbnN0IHN0YXRlID0gYXBpLmdldFN0YXRlKCk7XG4gICAgY29uc3Qgc3RhdGVSZWYgPSB1c2VSZWYoc3RhdGUpO1xuICAgIGNvbnN0IHNlbGVjdG9yUmVmID0gdXNlUmVmKHNlbGVjdG9yKTtcbiAgICBjb25zdCBlcXVhbGl0eUZuUmVmID0gdXNlUmVmKGVxdWFsaXR5Rm4pO1xuICAgIGNvbnN0IGVycm9yZWRSZWYgPSB1c2VSZWYoZmFsc2UpO1xuICAgIGNvbnN0IGN1cnJlbnRTbGljZVJlZiA9IHVzZVJlZigpO1xuICAgIGlmIChjdXJyZW50U2xpY2VSZWYuY3VycmVudCA9PT0gdm9pZCAwKSB7XG4gICAgICBjdXJyZW50U2xpY2VSZWYuY3VycmVudCA9IHNlbGVjdG9yKHN0YXRlKTtcbiAgICB9XG4gICAgbGV0IG5ld1N0YXRlU2xpY2U7XG4gICAgbGV0IGhhc05ld1N0YXRlU2xpY2UgPSBmYWxzZTtcbiAgICBpZiAoc3RhdGVSZWYuY3VycmVudCAhPT0gc3RhdGUgfHwgc2VsZWN0b3JSZWYuY3VycmVudCAhPT0gc2VsZWN0b3IgfHwgZXF1YWxpdHlGblJlZi5jdXJyZW50ICE9PSBlcXVhbGl0eUZuIHx8IGVycm9yZWRSZWYuY3VycmVudCkge1xuICAgICAgbmV3U3RhdGVTbGljZSA9IHNlbGVjdG9yKHN0YXRlKTtcbiAgICAgIGhhc05ld1N0YXRlU2xpY2UgPSAhZXF1YWxpdHlGbihjdXJyZW50U2xpY2VSZWYuY3VycmVudCwgbmV3U3RhdGVTbGljZSk7XG4gICAgfVxuICAgIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgICAgaWYgKGhhc05ld1N0YXRlU2xpY2UpIHtcbiAgICAgICAgY3VycmVudFNsaWNlUmVmLmN1cnJlbnQgPSBuZXdTdGF0ZVNsaWNlO1xuICAgICAgfVxuICAgICAgc3RhdGVSZWYuY3VycmVudCA9IHN0YXRlO1xuICAgICAgc2VsZWN0b3JSZWYuY3VycmVudCA9IHNlbGVjdG9yO1xuICAgICAgZXF1YWxpdHlGblJlZi5jdXJyZW50ID0gZXF1YWxpdHlGbjtcbiAgICAgIGVycm9yZWRSZWYuY3VycmVudCA9IGZhbHNlO1xuICAgIH0pO1xuICAgIGNvbnN0IHN0YXRlQmVmb3JlU3Vic2NyaXB0aW9uUmVmID0gdXNlUmVmKHN0YXRlKTtcbiAgICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICAgIGNvbnN0IGxpc3RlbmVyID0gKCkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IG5leHRTdGF0ZSA9IGFwaS5nZXRTdGF0ZSgpO1xuICAgICAgICAgIGNvbnN0IG5leHRTdGF0ZVNsaWNlID0gc2VsZWN0b3JSZWYuY3VycmVudChuZXh0U3RhdGUpO1xuICAgICAgICAgIGlmICghZXF1YWxpdHlGblJlZi5jdXJyZW50KGN1cnJlbnRTbGljZVJlZi5jdXJyZW50LCBuZXh0U3RhdGVTbGljZSkpIHtcbiAgICAgICAgICAgIHN0YXRlUmVmLmN1cnJlbnQgPSBuZXh0U3RhdGU7XG4gICAgICAgICAgICBjdXJyZW50U2xpY2VSZWYuY3VycmVudCA9IG5leHRTdGF0ZVNsaWNlO1xuICAgICAgICAgICAgZm9yY2VVcGRhdGUoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgZXJyb3JlZFJlZi5jdXJyZW50ID0gdHJ1ZTtcbiAgICAgICAgICBmb3JjZVVwZGF0ZSgpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgY29uc3QgdW5zdWJzY3JpYmUgPSBhcGkuc3Vic2NyaWJlKGxpc3RlbmVyKTtcbiAgICAgIGlmIChhcGkuZ2V0U3RhdGUoKSAhPT0gc3RhdGVCZWZvcmVTdWJzY3JpcHRpb25SZWYuY3VycmVudCkge1xuICAgICAgICBsaXN0ZW5lcigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHVuc3Vic2NyaWJlO1xuICAgIH0sIFtdKTtcbiAgICBjb25zdCBzbGljZVRvUmV0dXJuID0gaGFzTmV3U3RhdGVTbGljZSA/IG5ld1N0YXRlU2xpY2UgOiBjdXJyZW50U2xpY2VSZWYuY3VycmVudDtcbiAgICB1c2VEZWJ1Z1ZhbHVlKHNsaWNlVG9SZXR1cm4pO1xuICAgIHJldHVybiBzbGljZVRvUmV0dXJuO1xuICB9O1xuICBPYmplY3QuYXNzaWduKHVzZVN0b3JlLCBhcGkpO1xuICB1c2VTdG9yZVtTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS53YXJuKFwiW3VzZVN0b3JlLCBhcGldID0gY3JlYXRlKCkgaXMgZGVwcmVjYXRlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIHY0XCIpO1xuICAgIGNvbnN0IGl0ZW1zID0gW3VzZVN0b3JlLCBhcGldO1xuICAgIHJldHVybiB7XG4gICAgICBuZXh0KCkge1xuICAgICAgICBjb25zdCBkb25lID0gaXRlbXMubGVuZ3RoIDw9IDA7XG4gICAgICAgIHJldHVybiB7IHZhbHVlOiBpdGVtcy5zaGlmdCgpLCBkb25lIH07XG4gICAgICB9XG4gICAgfTtcbiAgfTtcbiAgcmV0dXJuIHVzZVN0b3JlO1xufVxuXG5leHBvcnQgeyBjcmVhdGUgYXMgZGVmYXVsdCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/fiber/node_modules/zustand/esm/index.js\n");

/***/ })

};
;